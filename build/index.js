
(function(l, r) { if (!l || l.getElementById('livereloadscript')) return; r = l.createElement('script'); r.async = 1; r.src = '//' + (self.location.host || 'localhost').split(':')[0] + ':35729/livereload.js?snipver=1'; r.id = 'livereloadscript'; r.crossOrigin='anonymous'; l.getElementsByTagName('head')[0].appendChild(r) })(self.document);
'use strict';

let lastTickTime = undefined;
class GameLoop {
    static process;
    static init(process) {
        GameLoop.process = process;
    }
    static start() {
        requestAnimationFrame(GameLoop.tick);
    }
    static pause() {
        //
    }
    static stop() {
        //
    }
    static tick(time) {
        if (lastTickTime === undefined) {
            lastTickTime = time;
        }
        const dt = (time - lastTickTime) / 1000;
        lastTickTime = time;
        GameLoop.process(dt);
        requestAnimationFrame(GameLoop.tick);
    }
    static finalize() {
        //
    }
}

var Module = (() => {
  var _scriptDir = (typeof document === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : (document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href));
  
  return (
function(Module) {
  Module = Module || {};

var Module=typeof Module!="undefined"?Module:{};var readyPromiseResolve,readyPromiseReject;Module["ready"]=new Promise(function(resolve,reject){readyPromiseResolve=resolve;readyPromiseReject=reject;});var moduleOverrides=Object.assign({},Module);var arguments_=[];var thisProgram="./this.program";var quit_=(status,toThrow)=>{throw toThrow};var ENVIRONMENT_IS_WEB=typeof window=="object";var ENVIRONMENT_IS_WORKER=typeof importScripts=="function";var ENVIRONMENT_IS_NODE=typeof process=="object"&&typeof process.versions=="object"&&typeof process.versions.node=="string";var scriptDirectory="";function locateFile(path){if(Module["locateFile"]){return Module["locateFile"](path,scriptDirectory)}return scriptDirectory+path}var read_,readAsync,readBinary,setWindowTitle;function logExceptionOnExit(e){if(e instanceof ExitStatus)return;let toLog=e;err("exiting due to exception: "+toLog);}if(ENVIRONMENT_IS_NODE){if(ENVIRONMENT_IS_WORKER){scriptDirectory=require("path").dirname(scriptDirectory)+"/";}else {scriptDirectory=__dirname+"/";}var fs,nodePath;if(typeof require==="function"){fs=require("fs");nodePath=require("path");}read_=(filename,binary)=>{filename=nodePath["normalize"](filename);return fs.readFileSync(filename,binary?undefined:"utf8")};readBinary=filename=>{var ret=read_(filename,true);if(!ret.buffer){ret=new Uint8Array(ret);}return ret};readAsync=(filename,onload,onerror)=>{filename=nodePath["normalize"](filename);fs.readFile(filename,function(err,data){if(err)onerror(err);else onload(data.buffer);});};if(process["argv"].length>1){thisProgram=process["argv"][1].replace(/\\/g,"/");}arguments_=process["argv"].slice(2);process["on"]("uncaughtException",function(ex){if(!(ex instanceof ExitStatus)){throw ex}});process["on"]("unhandledRejection",function(reason){throw reason});quit_=(status,toThrow)=>{if(keepRuntimeAlive()){process["exitCode"]=status;throw toThrow}logExceptionOnExit(toThrow);process["exit"](status);};Module["inspect"]=function(){return "[Emscripten Module object]"};}else if(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER){if(ENVIRONMENT_IS_WORKER){scriptDirectory=self.location.href;}else if(typeof document!="undefined"&&document.currentScript){scriptDirectory=document.currentScript.src;}if(_scriptDir){scriptDirectory=_scriptDir;}if(scriptDirectory.indexOf("blob:")!==0){scriptDirectory=scriptDirectory.substr(0,scriptDirectory.replace(/[?#].*/,"").lastIndexOf("/")+1);}else {scriptDirectory="";}{read_=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.send(null);return xhr.responseText};if(ENVIRONMENT_IS_WORKER){readBinary=url=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,false);xhr.responseType="arraybuffer";xhr.send(null);return new Uint8Array(xhr.response)};}readAsync=(url,onload,onerror)=>{var xhr=new XMLHttpRequest;xhr.open("GET",url,true);xhr.responseType="arraybuffer";xhr.onload=()=>{if(xhr.status==200||xhr.status==0&&xhr.response){onload(xhr.response);return}onerror();};xhr.onerror=onerror;xhr.send(null);};}setWindowTitle=title=>document.title=title;}else {}var out=Module["print"]||console.log.bind(console);var err=Module["printErr"]||console.warn.bind(console);Object.assign(Module,moduleOverrides);moduleOverrides=null;if(Module["arguments"])arguments_=Module["arguments"];if(Module["thisProgram"])thisProgram=Module["thisProgram"];if(Module["quit"])quit_=Module["quit"];var wasmBinary;if(Module["wasmBinary"])wasmBinary=Module["wasmBinary"];var noExitRuntime=Module["noExitRuntime"]||true;if(typeof WebAssembly!="object"){abort("no native wasm support detected");}var wasmMemory;var ABORT=false;var EXITSTATUS;var UTF8Decoder=typeof TextDecoder!="undefined"?new TextDecoder("utf8"):undefined;function UTF8ArrayToString(heapOrArray,idx,maxBytesToRead){var endIdx=idx+maxBytesToRead;var endPtr=idx;while(heapOrArray[endPtr]&&!(endPtr>=endIdx))++endPtr;if(endPtr-idx>16&&heapOrArray.buffer&&UTF8Decoder){return UTF8Decoder.decode(heapOrArray.subarray(idx,endPtr))}var str="";while(idx<endPtr){var u0=heapOrArray[idx++];if(!(u0&128)){str+=String.fromCharCode(u0);continue}var u1=heapOrArray[idx++]&63;if((u0&224)==192){str+=String.fromCharCode((u0&31)<<6|u1);continue}var u2=heapOrArray[idx++]&63;if((u0&240)==224){u0=(u0&15)<<12|u1<<6|u2;}else {u0=(u0&7)<<18|u1<<12|u2<<6|heapOrArray[idx++]&63;}if(u0<65536){str+=String.fromCharCode(u0);}else {var ch=u0-65536;str+=String.fromCharCode(55296|ch>>10,56320|ch&1023);}}return str}function UTF8ToString(ptr,maxBytesToRead){return ptr?UTF8ArrayToString(HEAPU8,ptr,maxBytesToRead):""}var buffer,HEAP8,HEAPU8,HEAP16,HEAPU16,HEAP32,HEAPU32,HEAPF32,HEAPF64;function updateGlobalBufferAndViews(buf){buffer=buf;Module["HEAP8"]=HEAP8=new Int8Array(buf);Module["HEAP16"]=HEAP16=new Int16Array(buf);Module["HEAP32"]=HEAP32=new Int32Array(buf);Module["HEAPU8"]=HEAPU8=new Uint8Array(buf);Module["HEAPU16"]=HEAPU16=new Uint16Array(buf);Module["HEAPU32"]=HEAPU32=new Uint32Array(buf);Module["HEAPF32"]=HEAPF32=new Float32Array(buf);Module["HEAPF64"]=HEAPF64=new Float64Array(buf);}var INITIAL_MEMORY=Module["INITIAL_MEMORY"]||1073741824;var wasmTable;var __ATPRERUN__=[];var __ATINIT__=[];var __ATPOSTRUN__=[];var runtimeInitialized=false;function keepRuntimeAlive(){return noExitRuntime}function preRun(){if(Module["preRun"]){if(typeof Module["preRun"]=="function")Module["preRun"]=[Module["preRun"]];while(Module["preRun"].length){addOnPreRun(Module["preRun"].shift());}}callRuntimeCallbacks(__ATPRERUN__);}function initRuntime(){runtimeInitialized=true;callRuntimeCallbacks(__ATINIT__);}function postRun(){if(Module["postRun"]){if(typeof Module["postRun"]=="function")Module["postRun"]=[Module["postRun"]];while(Module["postRun"].length){addOnPostRun(Module["postRun"].shift());}}callRuntimeCallbacks(__ATPOSTRUN__);}function addOnPreRun(cb){__ATPRERUN__.unshift(cb);}function addOnInit(cb){__ATINIT__.unshift(cb);}function addOnPostRun(cb){__ATPOSTRUN__.unshift(cb);}var runDependencies=0;var runDependencyWatcher=null;var dependenciesFulfilled=null;function addRunDependency(id){runDependencies++;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}}function removeRunDependency(id){runDependencies--;if(Module["monitorRunDependencies"]){Module["monitorRunDependencies"](runDependencies);}if(runDependencies==0){if(runDependencyWatcher!==null){clearInterval(runDependencyWatcher);runDependencyWatcher=null;}if(dependenciesFulfilled){var callback=dependenciesFulfilled;dependenciesFulfilled=null;callback();}}}function abort(what){{if(Module["onAbort"]){Module["onAbort"](what);}}what="Aborted("+what+")";err(what);ABORT=true;EXITSTATUS=1;what+=". Build with -sASSERTIONS for more info.";var e=new WebAssembly.RuntimeError(what);readyPromiseReject(e);throw e}var emscriptenMemoryProfiler={detailedHeapUsage:true,trackedCallstackMinSizeBytes:typeof(new Error).stack=="undefined"?Infinity:16*1024*1024,trackedCallstackMinAllocCount:typeof(new Error).stack=="undefined"?Infinity:1e4,hookStackAlloc:true,uiUpdateIntervalMsecs:2e3,allocationsAtLoc:{},allocationSitePtrs:{},sizeOfAllocatedPtr:{},sizeOfPreRunAllocatedPtr:{},resizeMemorySources:[],sbrkSources:[],pagePreRunIsFinished:false,totalMemoryAllocated:0,totalTimesMallocCalled:0,totalTimesFreeCalled:0,stackTopWatermark:Infinity,canvas:null,drawContext:null,truncDec:function truncDec(f){f=f||0;var str=f.toFixed(2);if(str.includes(".00",str.length-3))return str.substr(0,str.length-3);else if(str.includes("0",str.length-1))return str.substr(0,str.length-1);else return str},formatBytes:function formatBytes(bytes){if(bytes>=1e3*1024*1024)return emscriptenMemoryProfiler.truncDec(bytes/(1024*1024*1024))+" GB";else if(bytes>=1e3*1024)return emscriptenMemoryProfiler.truncDec(bytes/(1024*1024))+" MB";else if(bytes>=1e3)return emscriptenMemoryProfiler.truncDec(bytes/1024)+" KB";else return emscriptenMemoryProfiler.truncDec(bytes)+" B"},hsvToRgb:function hsvToRgb(h,s,v){var h_i=h*6|0;var f=h*6-h_i;var p=v*(1-s);var q=v*(1-f*s);var t=v*(1-(1-f)*s);var r,g,b;switch(h_i){case 0:r=v;g=t;b=p;break;case 1:r=q;g=v;b=p;break;case 2:r=p;g=v;b=t;break;case 3:r=p;g=q;b=v;break;case 4:r=t;g=p;b=v;break;case 5:r=v;g=p;b=q;break}function toHex(v){v=(v*255|0).toString(16);return v.length==1?"0"+v:v}return "#"+toHex(r)+toHex(g)+toHex(b)},onSbrkGrow:function onSbrkGrow(oldLimit,newLimit){var self=emscriptenMemoryProfiler;if(self.sbrkSources.length==0){self.sbrkSources.push({stack:"initial heap sbrk limit<br>",begin:0,end:oldLimit,color:self.hsvToRgb(self.sbrkSources.length*.618033988749895%1,.5,.95)});}if(newLimit<=oldLimit)return;self.sbrkSources.push({stack:self.filterCallstackForHeapResize((new Error).stack.toString()),begin:oldLimit,end:newLimit,color:self.hsvToRgb(self.sbrkSources.length*.618033988749895%1,.5,.95)});},onMemoryResize:function onMemoryResize(oldSize,newSize){var self=emscriptenMemoryProfiler;if(self.resizeMemorySources.length==0){self.resizeMemorySources.push({stack:"initial heap size<br>",begin:0,end:oldSize,color:self.resizeMemorySources.length%2?"#ff00ff":"#ff80ff"});}if(newSize<=oldSize)return;self.resizeMemorySources.push({stack:self.filterCallstackForHeapResize((new Error).stack.toString()),begin:oldSize,end:newSize,color:self.resizeMemorySources.length%2?"#ff00ff":"#ff80ff"});console.log("memory resize: "+oldSize+" "+newSize);},recordStackWatermark:function(){if(typeof runtimeInitialized=="undefined"||runtimeInitialized){var self=emscriptenMemoryProfiler;self.stackTopWatermark=Math.min(self.stackTopWatermark,_emscripten_stack_get_current());}},onMalloc:function onMalloc(ptr,size){if(!ptr)return;if(emscriptenMemoryProfiler.sizeOfAllocatedPtr[ptr]){return}var self=emscriptenMemoryProfiler;self.totalMemoryAllocated+=size;++self.totalTimesMallocCalled;self.recordStackWatermark();self.sizeOfAllocatedPtr[ptr]=size;if(!self.pagePreRunIsFinished)self.sizeOfPreRunAllocatedPtr[ptr]=size;var loc=(new Error).stack.toString();if(!self.allocationsAtLoc[loc])self.allocationsAtLoc[loc]=[0,0,self.filterCallstackForMalloc(loc)];self.allocationsAtLoc[loc][0]+=1;self.allocationsAtLoc[loc][1]+=size;self.allocationSitePtrs[ptr]=loc;},onFree:function onFree(ptr){if(!ptr)return;var self=emscriptenMemoryProfiler;var sz=self.sizeOfAllocatedPtr[ptr];if(!isNaN(sz))self.totalMemoryAllocated-=sz;else {return}self.recordStackWatermark();var loc=self.allocationSitePtrs[ptr];if(loc){var allocsAtThisLoc=self.allocationsAtLoc[loc];if(allocsAtThisLoc){allocsAtThisLoc[0]-=1;allocsAtThisLoc[1]-=sz;if(allocsAtThisLoc[0]<=0)delete self.allocationsAtLoc[loc];}}delete self.allocationSitePtrs[ptr];delete self.sizeOfAllocatedPtr[ptr];delete self.sizeOfPreRunAllocatedPtr[ptr];++self.totalTimesFreeCalled;},onRealloc:function onRealloc(oldAddress,newAddress,size){emscriptenMemoryProfiler.onFree(oldAddress);emscriptenMemoryProfiler.onMalloc(newAddress,size);},onPreloadComplete:function onPreloadComplete(){emscriptenMemoryProfiler.pagePreRunIsFinished=true;},initialize:function initialize(){Module["onMalloc"]=function onMalloc(ptr,size){emscriptenMemoryProfiler.onMalloc(ptr,size);};Module["onRealloc"]=function onRealloc(oldAddress,newAddress,size){emscriptenMemoryProfiler.onRealloc(oldAddress,newAddress,size);};Module["onFree"]=function onFree(ptr){emscriptenMemoryProfiler.onFree(ptr);};emscriptenMemoryProfiler.recordStackWatermark();if(!Module["preRun"])Module["preRun"]=[];Module["preRun"].push(function(){emscriptenMemoryProfiler.onPreloadComplete();});if(emscriptenMemoryProfiler.hookStackAlloc&&typeof stackAlloc=="function"){var prevStackAlloc=stackAlloc;var hookedStackAlloc=function(size){var ptr=prevStackAlloc(size);emscriptenMemoryProfiler.recordStackWatermark();return ptr};stackAlloc=hookedStackAlloc;}if(location.search.toLowerCase().includes("trackbytes=")){emscriptenMemoryProfiler.trackedCallstackMinSizeBytes=parseInt(location.search.substr(location.search.toLowerCase().indexOf("trackbytes=")+"trackbytes=".length),undefined);}if(location.search.toLowerCase().includes("trackcount=")){emscriptenMemoryProfiler.trackedCallstackMinAllocCount=parseInt(location.search.substr(location.search.toLowerCase().indexOf("trackcount=")+"trackcount=".length),undefined);}emscriptenMemoryProfiler.memoryprofiler_summary=document.getElementById("memoryprofiler_summary");var div;if(!emscriptenMemoryProfiler.memoryprofiler_summary){div=document.createElement("div");div.innerHTML="<div style='border: 2px solid black; padding: 2px;'><canvas style='border: 1px solid black; margin-left: auto; margin-right: auto; display: block;' id='memoryprofiler_canvas' width='100%' height='50'></canvas><input type='checkbox' id='showHeapResizes' onclick='emscriptenMemoryProfiler.updateUi()'>Display heap and sbrk() resizes. Filter sbrk() and heap resize callstacks by keywords: <input type='text' id='sbrkFilter'>(reopen page with ?sbrkFilter=foo,bar query params to prepopulate this list)<br/>Track all allocation sites larger than <input id='memoryprofiler_min_tracked_alloc_size' type=number value="+emscriptenMemoryProfiler.trackedCallstackMinSizeBytes+"></input> bytes, and all allocation sites with more than <input id='memoryprofiler_min_tracked_alloc_count' type=number value="+emscriptenMemoryProfiler.trackedCallstackMinAllocCount+"></input> outstanding allocations. (visit this page via URL query params foo.html?trackbytes=1000&trackcount=100 to apply custom thresholds starting from page load)<br/><div id='memoryprofiler_summary'></div><input id='memoryprofiler_clear_alloc_stats' type='button' value='Clear alloc stats' ></input><br />Sort allocations by:<select id='memoryProfilerSort'><option value='bytes'>Bytes</option><option value='count'>Count</option><option value='fixed'>Fixed</option></select><div id='memoryprofiler_ptrs'></div>";}var populateHtmlBody=function(){if(div){document.body.appendChild(div);function getValueOfParam(key){var results=new RegExp("[\\?&]"+key+"=([^&#]*)").exec(location.href);return results?results[1]:""}if(document.getElementById("sbrkFilter").value=getValueOfParam("sbrkFilter")){document.getElementById("showHeapResizes").checked=true;}}var self=emscriptenMemoryProfiler;self.memoryprofiler_summary=document.getElementById("memoryprofiler_summary");self.memoryprofiler_ptrs=document.getElementById("memoryprofiler_ptrs");document.getElementById("memoryprofiler_min_tracked_alloc_size").addEventListener("change",function(e){self.trackedCallstackMinSizeBytes=parseInt(this.value,undefined);});document.getElementById("memoryprofiler_min_tracked_alloc_count").addEventListener("change",function(e){self.trackedCallstackMinAllocCount=parseInt(this.value,undefined);});document.getElementById("memoryprofiler_clear_alloc_stats").addEventListener("click",function(e){self.allocationsAtLoc={};self.allocationSitePtrs={};});self.canvas=document.getElementById("memoryprofiler_canvas");self.canvas.width=document.documentElement.clientWidth-32;self.drawContext=self.canvas.getContext("2d");self.updateUi();setInterval(function(){emscriptenMemoryProfiler.updateUi();},self.uiUpdateIntervalMsecs);};if(document.body)populateHtmlBody();else setTimeout(populateHtmlBody,1e3);},bytesToPixelsRoundedDown:function bytesToPixelsRoundedDown(bytes){return bytes*emscriptenMemoryProfiler.canvas.width*emscriptenMemoryProfiler.canvas.height/HEAP8.length|0},bytesToPixelsRoundedUp:function bytesToPixelsRoundedUp(bytes){return (bytes*emscriptenMemoryProfiler.canvas.width*emscriptenMemoryProfiler.canvas.height+HEAP8.length-1)/HEAP8.length|0},fillLine:function fillLine(startBytes,endBytes){var self=emscriptenMemoryProfiler;var startPixels=self.bytesToPixelsRoundedDown(startBytes);var endPixels=self.bytesToPixelsRoundedUp(endBytes);var x0=startPixels/self.canvas.height|0;var y0=startPixels-x0*self.canvas.height;var x1=endPixels/self.canvas.height|0;var y1=endPixels-x1*self.canvas.height;if(y0>0&&x0<x1){self.drawContext.fillRect(x0,y0,1,self.canvas.height-y0);y0=0;++x0;}if(y1<self.canvas.height&&x0<x1){self.drawContext.fillRect(x1,0,1,y1);y1=self.canvas.height-1;--x1;}self.drawContext.fillRect(x0,0,x1-x0+1,self.canvas.height);},fillRect:function fillRect(startBytes,endBytes,heightPercentage){var self=emscriptenMemoryProfiler;var startPixels=self.bytesToPixelsRoundedDown(startBytes);var endPixels=self.bytesToPixelsRoundedUp(endBytes);var x0=startPixels/self.canvas.height|0;var x1=endPixels/self.canvas.height|0;self.drawContext.fillRect(x0,self.canvas.height*(1-heightPercentage),x1-x0+1,self.canvas.height);},countOpenALAudioDataSize:function countOpenALAudioDataSize(){if(typeof AL=="undefined"||!AL.currentContext)return 0;var totalMemory=0;for(var i in AL.currentContext.buf){var buffer=AL.currentContext.buf[i];for(var channel=0;channel<buffer.numberOfChannels;++channel)totalMemory+=buffer.getChannelData(channel).length*4;}return totalMemory},printAllocsWithCyclingColors:function printAllocsWithCyclingColors(colors,allocs){var colorIndex=0;for(var i in allocs){emscriptenMemoryProfiler.drawContext.fillStyle=colors[colorIndex];colorIndex=(colorIndex+1)%colors.length;var start=i|0;var sz=allocs[start]|0;emscriptenMemoryProfiler.fillLine(start,start+sz);}},filterURLsFromCallstack:function(callstack){callstack=callstack.replace(/@((file)|(http))[\w:\/\.]*\/([\w\.]*)/g,"@$4");callstack=callstack.replace(/\n/g,"<br />");return callstack},filterCallstackAfterFunctionName:function(callstack,func){var i=callstack.indexOf(func);if(i!=-1){var end=callstack.indexOf("<br />",i);if(end!=-1){return callstack.substr(0,end)}}return callstack},filterCallstackForMalloc:function(callstack){var i=callstack.indexOf("emscripten_trace_record_");if(i!=-1){callstack=callstack.substr(callstack.indexOf("\n",i)+1);}return emscriptenMemoryProfiler.filterURLsFromCallstack(callstack)},filterCallstackForHeapResize:function(callstack){var i=callstack.indexOf("emscripten_asm_const_iii");var j=callstack.indexOf("emscripten_realloc_buffer");i=i==-1?j:j==-1?i:Math.min(i,j);if(i!=-1){callstack=callstack.substr(callstack.indexOf("\n",i)+1);}callstack=callstack.replace(/(wasm-function\[\d+\]):0x[0-9a-f]+/g,"$1");return emscriptenMemoryProfiler.filterURLsFromCallstack(callstack)},printHeapResizeLog:function(heapResizes){var demangler=typeof demangleAll!="undefined"?demangleAll:function(x){return x};var html="";for(var i=0;i<heapResizes.length;++i){var j=i+1;while(j<heapResizes.length){if((heapResizes[j].filteredStack||heapResizes[j].stack)==(heapResizes[i].filteredStack||heapResizes[i].stack)){++j;}else {break}}var resizeFirst=heapResizes[i];var resizeLast=heapResizes[j-1];var count=j-i;html+='<div style="background-color: '+resizeFirst.color+'"><b>'+resizeFirst.begin+"-"+resizeLast.end+" ("+count+" times, "+emscriptenMemoryProfiler.formatBytes(resizeLast.end-resizeFirst.begin)+")</b>:"+demangler(resizeFirst.filteredStack||resizeFirst.stack)+"</div><br>";i=j-1;}return html},updateUi:function updateUi(){if(document.body.style.overflow!="")document.body.style.overflow="";function colorBar(color){return '<span style="padding:0px; border:solid 1px black; width:28px;height:14px; vertical-align:middle; display:inline-block; background-color:'+color+';"></span>'}function nBits(n){var i=0;while(n>=1){++i;n/=2;}return i}function toHex(i,width){var str=i.toString(16);while(str.length<width)str="0"+str;return "0x"+str}var self=emscriptenMemoryProfiler;if(self.canvas.width!=document.documentElement.clientWidth-32){self.canvas.width=document.documentElement.clientWidth-32;}if(typeof runtimeInitialized!="undefined"&&!runtimeInitialized){return}var stackBase=_emscripten_stack_get_base();var stackMax=_emscripten_stack_get_end();var stackCurrent=_emscripten_stack_get_current();var width=(nBits(HEAP8.length)+3)/4;var html="Total HEAP size: "+self.formatBytes(HEAP8.length)+".";html+="<br />"+colorBar("#202020")+"STATIC memory area size: "+self.formatBytes(stackMax-1024);html+=". 1024: "+toHex(1024,width);html+="<br />"+colorBar("#FF8080")+"STACK memory area size: "+self.formatBytes(stackBase-stackMax);html+=". STACK_BASE: "+toHex(stackBase,width);html+=". STACKTOP: "+toHex(stackCurrent,width);html+=". STACK_MAX: "+toHex(stackMax,width)+".";html+="<br />STACK memory area used now (should be zero): "+self.formatBytes(stackBase-stackCurrent)+"."+colorBar("#FFFF00")+" STACK watermark highest seen usage (approximate lower-bound!): "+self.formatBytes(stackBase-self.stackTopWatermark);var heap_base=Module["___heap_base"];var heap_end=_sbrk();html+="<br />DYNAMIC memory area size: "+self.formatBytes(heap_end-heap_base);html+=". start: "+toHex(heap_base,width);html+=". end: "+toHex(heap_end,width)+".";html+="<br />"+colorBar("#6699CC")+colorBar("#003366")+colorBar("#0000FF")+"DYNAMIC memory area used: "+self.formatBytes(self.totalMemoryAllocated)+" ("+(self.totalMemoryAllocated*100/(HEAP8.length-heap_base)).toFixed(2)+"% of all dynamic memory and unallocated heap)";html+="<br />Free memory: "+colorBar("#70FF70")+"DYNAMIC: "+self.formatBytes(heap_end-heap_base-self.totalMemoryAllocated)+", "+colorBar("#FFFFFF")+"Unallocated HEAP: "+self.formatBytes(HEAP8.length-heap_end)+" ("+((HEAP8.length-heap_base-self.totalMemoryAllocated)*100/(HEAP8.length-heap_base)).toFixed(2)+"% of all dynamic memory and unallocated heap)";var preloadedMemoryUsed=0;for(var i in self.sizeOfPreRunAllocatedPtr)preloadedMemoryUsed+=self.sizeOfPreRunAllocatedPtr[i]|0;html+="<br />"+colorBar("#FF9900")+colorBar("#FFDD33")+"Preloaded memory used, most likely memory reserved by files in the virtual filesystem : "+self.formatBytes(preloadedMemoryUsed);html+="<br />OpenAL audio data: "+self.formatBytes(self.countOpenALAudioDataSize())+" (outside HEAP)";html+="<br /># of total malloc()s/free()s performed in app lifetime: "+self.totalTimesMallocCalled+"/"+self.totalTimesFreeCalled+" (currently alive pointers: "+(self.totalTimesMallocCalled-self.totalTimesFreeCalled)+")";self.drawContext.fillStyle="#FFFFFF";self.drawContext.fillRect(0,0,self.canvas.width,self.canvas.height);self.drawContext.fillStyle="#FF8080";self.fillLine(stackMax,stackBase);self.drawContext.fillStyle="#FFFF00";self.fillLine(self.stackTopWatermark,stackBase);self.drawContext.fillStyle="#FF0000";self.fillLine(stackCurrent,stackBase);self.drawContext.fillStyle="#70FF70";self.fillLine(heap_base,heap_end);if(self.detailedHeapUsage){self.printAllocsWithCyclingColors(["#6699CC","#003366","#0000FF"],self.sizeOfAllocatedPtr);self.printAllocsWithCyclingColors(["#FF9900","#FFDD33"],self.sizeOfPreRunAllocatedPtr);}else {self.drawContext.fillStyle="#0000FF";self.fillLine(heap_base,heap_base+self.totalMemoryAllocated);}if(document.getElementById("showHeapResizes").checked){for(var i in self.resizeMemorySources){var resize=self.resizeMemorySources[i];self.drawContext.fillStyle=resize.color;self.fillRect(resize.begin,resize.end,.5);}var uniqueSources={};var filterWords=document.getElementById("sbrkFilter").value.split(",");for(var i in self.sbrkSources){var sbrk=self.sbrkSources[i];var stack=sbrk.stack;for(var j in filterWords){var s=filterWords[j].trim();if(s.length>0)stack=self.filterCallstackAfterFunctionName(stack,s);}sbrk.filteredStack=stack;if(!uniqueSources[stack]){uniqueSources[stack]=self.hsvToRgb(Object.keys(uniqueSources).length*.618033988749895%1,.5,.95);}self.drawContext.fillStyle=sbrk.color=uniqueSources[stack];self.fillRect(sbrk.begin,sbrk.end,.25);}function line(x0,y0,x1,y1){self.drawContext.beginPath();self.drawContext.moveTo(x0,y0);self.drawContext.lineTo(x1,y1);self.drawContext.lineWidth=2;self.drawContext.stroke();}if(self.sbrkSources.length>0)line(0,.75*self.canvas.height,self.canvas.width,.75*self.canvas.height);if(self.resizeMemorySources.length>0)line(0,.5*self.canvas.height,self.canvas.width,.5*self.canvas.height);}self.memoryprofiler_summary.innerHTML=html;var sort=document.getElementById("memoryProfilerSort");var sortOrder=sort.options[sort.selectedIndex].value;html="";if(document.getElementById("showHeapResizes").checked){html+='<div style="background-color: #c0c0c0"><h4>Heap resize locations:</h4>';html+=self.printHeapResizeLog(self.resizeMemorySources);html+="</div>";html+='<div style="background-color: #c0c0ff"><h4>Memory sbrk() locations:</h4>';html+=self.printHeapResizeLog(self.sbrkSources);html+="</div>";}else {var demangler=typeof demangleAll!="undefined"?demangleAll:function(x){return x};if(Object.keys(self.allocationsAtLoc).length>0){var calls=[];for(var i in self.allocationsAtLoc){if(self.allocationsAtLoc[i][0]>=self.trackedCallstackMinAllocCount||self.allocationsAtLoc[i][1]>=self.trackedCallstackMinSizeBytes){calls.push(self.allocationsAtLoc[i]);}}if(calls.length>0){if(sortOrder!="fixed"){var sortIdx=sortOrder=="count"?0:1;calls.sort(function(a,b){return b[sortIdx]-a[sortIdx]});}html+="<h4>Allocation sites with more than "+self.formatBytes(self.trackedCallstackMinSizeBytes)+" of accumulated allocations, or more than "+self.trackedCallstackMinAllocCount+" simultaneously outstanding allocations:</h4>";for(var i in calls){if(calls[i].length==3)calls[i]=[calls[i][0],calls[i][1],calls[i][2],demangler(calls[i][2])];html+="<b>"+self.formatBytes(calls[i][1])+"/"+calls[i][0]+" allocs</b>: "+calls[i][3]+"<br />";}}}}self.memoryprofiler_ptrs.innerHTML=html;}};if(typeof Module!="undefined"&&typeof document!="undefined"&&typeof window!="undefined"&&typeof process=="undefined")emscriptenMemoryProfiler.initialize();var dataURIPrefix="data:application/octet-stream;base64,";function isDataURI(filename){return filename.startsWith(dataURIPrefix)}function isFileURI(filename){return filename.startsWith("file://")}var wasmBinaryFile;if(Module["locateFile"]){wasmBinaryFile="engine.wasm";if(!isDataURI(wasmBinaryFile)){wasmBinaryFile=locateFile(wasmBinaryFile);}}else {wasmBinaryFile=new URL("engine.wasm",(typeof document === 'undefined' ? new (require('u' + 'rl').URL)('file:' + __filename).href : (document.currentScript && document.currentScript.src || new URL('index.js', document.baseURI).href))).toString();}function getBinary(file){try{if(file==wasmBinaryFile&&wasmBinary){return new Uint8Array(wasmBinary)}if(readBinary){return readBinary(file)}throw "both async and sync fetching of the wasm failed"}catch(err){abort(err);}}function getBinaryPromise(){if(!wasmBinary&&(ENVIRONMENT_IS_WEB||ENVIRONMENT_IS_WORKER)){if(typeof fetch=="function"&&!isFileURI(wasmBinaryFile)){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){if(!response["ok"]){throw "failed to load wasm binary file at '"+wasmBinaryFile+"'"}return response["arrayBuffer"]()}).catch(function(){return getBinary(wasmBinaryFile)})}else {if(readAsync){return new Promise(function(resolve,reject){readAsync(wasmBinaryFile,function(response){resolve(new Uint8Array(response));},reject);})}}}return Promise.resolve().then(function(){return getBinary(wasmBinaryFile)})}function createWasm(){var info={"a":asmLibraryArg};function receiveInstance(instance,module){var exports=instance.exports;Module["asm"]=exports;wasmMemory=Module["asm"]["m"];updateGlobalBufferAndViews(wasmMemory.buffer);wasmTable=Module["asm"]["o"];addOnInit(Module["asm"]["n"]);removeRunDependency("wasm-instantiate");}addRunDependency("wasm-instantiate");function receiveInstantiationResult(result){receiveInstance(result["instance"]);}function instantiateArrayBuffer(receiver){return getBinaryPromise().then(function(binary){return WebAssembly.instantiate(binary,info)}).then(function(instance){return instance}).then(receiver,function(reason){err("failed to asynchronously prepare wasm: "+reason);abort(reason);})}function instantiateAsync(){if(!wasmBinary&&typeof WebAssembly.instantiateStreaming=="function"&&!isDataURI(wasmBinaryFile)&&!isFileURI(wasmBinaryFile)&&!ENVIRONMENT_IS_NODE&&typeof fetch=="function"){return fetch(wasmBinaryFile,{credentials:"same-origin"}).then(function(response){var result=WebAssembly.instantiateStreaming(response,info);return result.then(receiveInstantiationResult,function(reason){err("wasm streaming compile failed: "+reason);err("falling back to ArrayBuffer instantiation");return instantiateArrayBuffer(receiveInstantiationResult)})})}else {return instantiateArrayBuffer(receiveInstantiationResult)}}if(Module["instantiateWasm"]){try{var exports=Module["instantiateWasm"](info,receiveInstance);return exports}catch(e){err("Module.instantiateWasm callback failed with error: "+e);readyPromiseReject(e);}}instantiateAsync().catch(readyPromiseReject);return {}}function ExitStatus(status){this.name="ExitStatus";this.message="Program terminated with exit("+status+")";this.status=status;}function callRuntimeCallbacks(callbacks){while(callbacks.length>0){callbacks.shift()(Module);}}function ___assert_fail(condition,filename,line,func){abort("Assertion failed: "+UTF8ToString(condition)+", at: "+[filename?UTF8ToString(filename):"unknown filename",line,func?UTF8ToString(func):"unknown function"]);}function ___cxa_allocate_exception(size){return _malloc(size+24)+24}function ExceptionInfo(excPtr){this.excPtr=excPtr;this.ptr=excPtr-24;this.set_type=function(type){HEAPU32[this.ptr+4>>2]=type;};this.get_type=function(){return HEAPU32[this.ptr+4>>2]};this.set_destructor=function(destructor){HEAPU32[this.ptr+8>>2]=destructor;};this.get_destructor=function(){return HEAPU32[this.ptr+8>>2]};this.set_refcount=function(refcount){HEAP32[this.ptr>>2]=refcount;};this.set_caught=function(caught){caught=caught?1:0;HEAP8[this.ptr+12>>0]=caught;};this.get_caught=function(){return HEAP8[this.ptr+12>>0]!=0};this.set_rethrown=function(rethrown){rethrown=rethrown?1:0;HEAP8[this.ptr+13>>0]=rethrown;};this.get_rethrown=function(){return HEAP8[this.ptr+13>>0]!=0};this.init=function(type,destructor){this.set_adjusted_ptr(0);this.set_type(type);this.set_destructor(destructor);this.set_refcount(0);this.set_caught(false);this.set_rethrown(false);};this.add_ref=function(){var value=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=value+1;};this.release_ref=function(){var prev=HEAP32[this.ptr>>2];HEAP32[this.ptr>>2]=prev-1;return prev===1};this.set_adjusted_ptr=function(adjustedPtr){HEAPU32[this.ptr+16>>2]=adjustedPtr;};this.get_adjusted_ptr=function(){return HEAPU32[this.ptr+16>>2]};this.get_exception_ptr=function(){var isPointer=___cxa_is_pointer_type(this.get_type());if(isPointer){return HEAPU32[this.excPtr>>2]}var adjusted=this.get_adjusted_ptr();if(adjusted!==0)return adjusted;return this.excPtr};}var exceptionLast=0;var uncaughtExceptionCount=0;function ___cxa_throw(ptr,type,destructor){var info=new ExceptionInfo(ptr);info.init(type,destructor);exceptionLast=ptr;uncaughtExceptionCount++;throw ptr}var nowIsMonotonic=true;function __emscripten_get_now_is_monotonic(){return nowIsMonotonic}function _abort(){abort("");}var _emscripten_get_now;if(ENVIRONMENT_IS_NODE){_emscripten_get_now=()=>{var t=process["hrtime"]();return t[0]*1e3+t[1]/1e6};}else _emscripten_get_now=()=>performance.now();function _emscripten_memcpy_big(dest,src,num){HEAPU8.copyWithin(dest,src,src+num);}function _emscripten_memprof_sbrk_grow(old_brk,new_brk){emscriptenMemoryProfiler.onSbrkGrow(old_brk,new_brk);}function abortOnCannotGrowMemory(requestedSize){abort("OOM");}function _emscripten_resize_heap(requestedSize){var oldSize=HEAPU8.length;requestedSize=requestedSize>>>0;abortOnCannotGrowMemory(requestedSize);}function _emscripten_trace_js_configure(collector_url,application){EmscriptenTrace.configure(collector_url,application);}function _emscripten_trace_configure_for_google_wtf(){EmscriptenTrace.configureForGoogleWTF();}function _emscripten_trace_js_enter_context(name){if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_ENTER_CONTEXT,now,name]);}if(EmscriptenTrace.googleWTFEnabled){EmscriptenTrace.googleWTFEnterScope(name);}}function _emscripten_trace_exit_context(){if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_EXIT_CONTEXT,now]);}if(EmscriptenTrace.googleWTFEnabled){EmscriptenTrace.googleWTFExitScope();}}function _emscripten_trace_js_log_message(channel,message){if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_LOG_MESSAGE,now,channel,message]);}}function _emscripten_trace_js_mark(message){if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_LOG_MESSAGE,now,"MARK",message]);}if(EmscriptenTrace.googleWTFEnabled){window["wtf"].trace.mark(message);}}var EmscriptenTrace={worker:null,collectorEnabled:false,googleWTFEnabled:false,testingEnabled:false,googleWTFData:{scopeStack:[],cachedScopes:{}},DATA_VERSION:1,EVENT_ALLOCATE:"allocate",EVENT_ANNOTATE_TYPE:"annotate-type",EVENT_APPLICATION_NAME:"application-name",EVENT_ASSOCIATE_STORAGE_SIZE:"associate-storage-size",EVENT_ENTER_CONTEXT:"enter-context",EVENT_EXIT_CONTEXT:"exit-context",EVENT_FRAME_END:"frame-end",EVENT_FRAME_RATE:"frame-rate",EVENT_FRAME_START:"frame-start",EVENT_FREE:"free",EVENT_LOG_MESSAGE:"log-message",EVENT_MEMORY_LAYOUT:"memory-layout",EVENT_OFF_HEAP:"off-heap",EVENT_REALLOCATE:"reallocate",EVENT_REPORT_ERROR:"report-error",EVENT_SESSION_NAME:"session-name",EVENT_TASK_ASSOCIATE_DATA:"task-associate-data",EVENT_TASK_END:"task-end",EVENT_TASK_RESUME:"task-resume",EVENT_TASK_START:"task-start",EVENT_TASK_SUSPEND:"task-suspend",EVENT_USER_NAME:"user-name",init:function(){Module["emscripten_trace_configure"]=_emscripten_trace_js_configure;Module["emscripten_trace_configure_for_google_wtf"]=_emscripten_trace_configure_for_google_wtf;Module["emscripten_trace_enter_context"]=_emscripten_trace_js_enter_context;Module["emscripten_trace_exit_context"]=_emscripten_trace_exit_context;Module["emscripten_trace_log_message"]=_emscripten_trace_js_log_message;Module["emscripten_trace_mark"]=_emscripten_trace_js_mark;},loadWorkerViaXHR:function(url,ready,scope){var req=new XMLHttpRequest;req.addEventListener("load",function(){var blob=new Blob([this.responseText],{type:"text/javascript"});var worker=new Worker(window.URL.createObjectURL(blob));if(ready){ready.call(scope,worker);}},req);req.open("get",url,false);req.send();},configure:function(collector_url,application){EmscriptenTrace.now=_emscripten_get_now;var now=new Date;var session_id=now.getTime().toString()+"_"+Math.floor(Math.random()*100+1).toString();EmscriptenTrace.loadWorkerViaXHR(collector_url+"worker.js",function(worker){EmscriptenTrace.worker=worker;EmscriptenTrace.worker.addEventListener("error",function(e){out("TRACE WORKER ERROR:");out(e);},false);EmscriptenTrace.worker.postMessage({"cmd":"configure","data_version":EmscriptenTrace.DATA_VERSION,"session_id":session_id,"url":collector_url});EmscriptenTrace.configured=true;EmscriptenTrace.collectorEnabled=true;EmscriptenTrace.postEnabled=true;});EmscriptenTrace.post([EmscriptenTrace.EVENT_APPLICATION_NAME,application]);EmscriptenTrace.post([EmscriptenTrace.EVENT_SESSION_NAME,now.toISOString()]);},configureForTest:function(){EmscriptenTrace.postEnabled=true;EmscriptenTrace.testingEnabled=true;EmscriptenTrace.now=function(){return 0};},configureForGoogleWTF:function(){if(window&&window["wtf"]){EmscriptenTrace.googleWTFEnabled=true;}else {out("GOOGLE WTF NOT AVAILABLE TO ENABLE");}},post:function(entry){if(EmscriptenTrace.postEnabled&&EmscriptenTrace.collectorEnabled){EmscriptenTrace.worker.postMessage({"cmd":"post","entry":entry});}else if(EmscriptenTrace.postEnabled&&EmscriptenTrace.testingEnabled){out("Tracing "+entry);}},googleWTFEnterScope:function(name){var scopeEvent=EmscriptenTrace.googleWTFData["cachedScopes"][name];if(!scopeEvent){scopeEvent=window["wtf"].trace.events.createScope(name);EmscriptenTrace.googleWTFData["cachedScopes"][name]=scopeEvent;}var scope=scopeEvent();EmscriptenTrace.googleWTFData["scopeStack"].push(scope);},googleWTFExitScope:function(){var scope=EmscriptenTrace.googleWTFData["scopeStack"].pop();window["wtf"].trace.leaveScope(scope);}};function _emscripten_trace_record_allocation(address,size){if(typeof Module["onMalloc"]=="function")Module["onMalloc"](address,size);if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_ALLOCATE,now,address,size]);}}function _emscripten_trace_record_free(address){if(typeof Module["onFree"]=="function")Module["onFree"](address);if(EmscriptenTrace.postEnabled){var now=EmscriptenTrace.now();EmscriptenTrace.post([EmscriptenTrace.EVENT_FREE,now,address]);}}var printCharBuffers=[null,[],[]];function printChar(stream,curr){var buffer=printCharBuffers[stream];if(curr===0||curr===10){(stream===1?out:err)(UTF8ArrayToString(buffer,0));buffer.length=0;}else {buffer.push(curr);}}var SYSCALLS={varargs:undefined,get:function(){SYSCALLS.varargs+=4;var ret=HEAP32[SYSCALLS.varargs-4>>2];return ret},getStr:function(ptr){var ret=UTF8ToString(ptr);return ret}};function _fd_write(fd,iov,iovcnt,pnum){var num=0;for(var i=0;i<iovcnt;i++){var ptr=HEAPU32[iov>>2];var len=HEAPU32[iov+4>>2];iov+=8;for(var j=0;j<len;j++){printChar(fd,HEAPU8[ptr+j]);}num+=len;}HEAPU32[pnum>>2]=num;return 0}EmscriptenTrace.init();var asmLibraryArg={"a":___assert_fail,"c":___cxa_allocate_exception,"b":___cxa_throw,"l":__emscripten_get_now_is_monotonic,"e":_abort,"j":_emscripten_get_now,"k":_emscripten_memcpy_big,"f":_emscripten_memprof_sbrk_grow,"g":_emscripten_resize_heap,"i":_emscripten_trace_record_allocation,"h":_emscripten_trace_record_free,"d":_fd_write};var asm=createWasm();var ___wasm_call_ctors=Module["___wasm_call_ctors"]=function(){return (___wasm_call_ctors=Module["___wasm_call_ctors"]=Module["asm"]["n"]).apply(null,arguments)};var _test=Module["_test"]=function(){return (_test=Module["_test"]=Module["asm"]["p"]).apply(null,arguments)};var _check=Module["_check"]=function(){return (_check=Module["_check"]=Module["asm"]["q"]).apply(null,arguments)};var _init=Module["_init"]=function(){return (_init=Module["_init"]=Module["asm"]["r"]).apply(null,arguments)};var _tick=Module["_tick"]=function(){return (_tick=Module["_tick"]=Module["asm"]["s"]).apply(null,arguments)};var _finalize=Module["_finalize"]=function(){return (_finalize=Module["_finalize"]=Module["asm"]["t"]).apply(null,arguments)};var _get_input_queue_ptr=Module["_get_input_queue_ptr"]=function(){return (_get_input_queue_ptr=Module["_get_input_queue_ptr"]=Module["asm"]["u"]).apply(null,arguments)};var _get_output_queue_ptr=Module["_get_output_queue_ptr"]=function(){return (_get_output_queue_ptr=Module["_get_output_queue_ptr"]=Module["asm"]["v"]).apply(null,arguments)};var _print_memory_stats=Module["_print_memory_stats"]=function(){return (_print_memory_stats=Module["_print_memory_stats"]=Module["asm"]["w"]).apply(null,arguments)};var _print_exception=Module["_print_exception"]=function(){return (_print_exception=Module["_print_exception"]=Module["asm"]["x"]).apply(null,arguments)};var _malloc=Module["_malloc"]=function(){return (_malloc=Module["_malloc"]=Module["asm"]["y"]).apply(null,arguments)};var _sbrk=Module["_sbrk"]=function(){return (_sbrk=Module["_sbrk"]=Module["asm"]["z"]).apply(null,arguments)};var _free=Module["_free"]=function(){return (_free=Module["_free"]=Module["asm"]["A"]).apply(null,arguments)};var _emscripten_stack_get_base=Module["_emscripten_stack_get_base"]=function(){return (_emscripten_stack_get_base=Module["_emscripten_stack_get_base"]=Module["asm"]["B"]).apply(null,arguments)};var _emscripten_stack_get_end=Module["_emscripten_stack_get_end"]=function(){return (_emscripten_stack_get_end=Module["_emscripten_stack_get_end"]=Module["asm"]["C"]).apply(null,arguments)};var stackAlloc=Module["stackAlloc"]=function(){return (stackAlloc=Module["stackAlloc"]=Module["asm"]["D"]).apply(null,arguments)};var _emscripten_stack_get_current=Module["_emscripten_stack_get_current"]=function(){return (_emscripten_stack_get_current=Module["_emscripten_stack_get_current"]=Module["asm"]["E"]).apply(null,arguments)};var ___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=function(){return (___cxa_is_pointer_type=Module["___cxa_is_pointer_type"]=Module["asm"]["F"]).apply(null,arguments)};var ___heap_base=Module["___heap_base"]=12287424;var calledRun;dependenciesFulfilled=function runCaller(){if(!calledRun)run();if(!calledRun)dependenciesFulfilled=runCaller;};function run(args){args=args||arguments_;if(runDependencies>0){return}preRun();if(runDependencies>0){return}function doRun(){if(calledRun)return;calledRun=true;Module["calledRun"]=true;if(ABORT)return;initRuntime();readyPromiseResolve(Module);if(Module["onRuntimeInitialized"])Module["onRuntimeInitialized"]();postRun();}if(Module["setStatus"]){Module["setStatus"]("Running...");setTimeout(function(){setTimeout(function(){Module["setStatus"]("");},1);doRun();},1);}else {doRun();}}if(Module["preInit"]){if(typeof Module["preInit"]=="function")Module["preInit"]=[Module["preInit"]];while(Module["preInit"].length>0){Module["preInit"].pop()();}}run();


  return Module.ready
}
);
})();

function base64ToBuffer(base64) {
    const binary = window.atob(base64);
    const bytes = new Uint8Array(binary.length);
    for (let i = 0; i < binary.length; ++i) { bytes[i] = binary.charCodeAt(i); }
    return bytes.buffer;
}
var EngineWasm = base64ToBuffer("");

let Engine;
async function loadEngine() {
    Engine = await Module({
        wasmBinary: EngineWasm,
        print: console.log.bind(console),
        locateFile: (path) => `build/wasm/${path}`,
        mainScriptUrlOrBlob: "build/wasm/engine.js",
    });
    return;
}

var InputMessageId;
(function (InputMessageId) {
    InputMessageId[InputMessageId["NULL_ID"] = 0] = "NULL_ID";
    // Input
    InputMessageId[InputMessageId["MOUSE_MOVE"] = 1] = "MOUSE_MOVE";
    InputMessageId[InputMessageId["MOUSE_DOWN"] = 2] = "MOUSE_DOWN";
    InputMessageId[InputMessageId["MOUSE_UP"] = 3] = "MOUSE_UP";
    InputMessageId[InputMessageId["KEY_DOWN"] = 4] = "KEY_DOWN";
    InputMessageId[InputMessageId["KEY_UP"] = 5] = "KEY_UP";
})(InputMessageId || (InputMessageId = {}));
var OutputMessageId;
(function (OutputMessageId) {
    OutputMessageId[OutputMessageId["NULL_ID"] = 0] = "NULL_ID";
    // Render
    OutputMessageId[OutputMessageId["SET_CAMERA"] = 1] = "SET_CAMERA";
    OutputMessageId[OutputMessageId["CREATE_RENDERABLE"] = 2] = "CREATE_RENDERABLE";
    OutputMessageId[OutputMessageId["SET_TRANSFORM"] = 3] = "SET_TRANSFORM";
    OutputMessageId[OutputMessageId["ADD_RENDERABLE"] = 4] = "ADD_RENDERABLE";
    OutputMessageId[OutputMessageId["REMOVE_RENDERABLE"] = 5] = "REMOVE_RENDERABLE";
    // Resources
    OutputMessageId[OutputMessageId["REQUEST_TEXTURE"] = 6] = "REQUEST_TEXTURE";
    OutputMessageId[OutputMessageId["REQUEST_MESH"] = 7] = "REQUEST_MESH";
    OutputMessageId[OutputMessageId["REQUEST_ANIMATION"] = 8] = "REQUEST_ANIMATION";
    OutputMessageId[OutputMessageId["CREATE_GENERATED_MESH"] = 9] = "CREATE_GENERATED_MESH";
    // Resource generators
    OutputMessageId[OutputMessageId["GENERATE_ONE_COLOR_TEXTURE"] = 10] = "GENERATE_ONE_COLOR_TEXTURE";
    OutputMessageId[OutputMessageId["GENERATE_LINE_MESH"] = 11] = "GENERATE_LINE_MESH";
    OutputMessageId[OutputMessageId["GENERATE_TEXT_TEXTURE"] = 12] = "GENERATE_TEXT_TEXTURE";
})(OutputMessageId || (OutputMessageId = {}));
const OUTPUT_HANDLERS = {};
function registerOutputHandler(id, handler) {
    if (id === OutputMessageId.NULL_ID) {
        throw new Error("ID for OutputMessage is not set.");
    }
    if (OUTPUT_HANDLERS[id] !== undefined) {
        throw new Error("Output class is already registered.");
    }
    OUTPUT_HANDLERS[id] = handler;
}
function getOutputMessageHandler(id) {
    return OUTPUT_HANDLERS[id];
}

class SeekablePtr {
    value;
    constructor(value) {
        this.value = value;
    }
}
function getAndSeekPtr(ptr, size) {
    if (typeof ptr === "object") {
        const value = ptr.value;
        ptr.value += size;
        return value;
    }
    else {
        return ptr;
    }
}
function writeU32(ptr, value) {
    ptr = getAndSeekPtr(ptr, 4);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned writeU32");
    }
    Engine.HEAPU32[ptr / 4] = value;
}
function writeU64(ptr, value) {
    ptr = getAndSeekPtr(ptr, 8);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned writeU64");
    }
    const low = value % 4294967296;
    const high = Math.trunc(value / 4294967296);
    Engine.HEAPU32[ptr / 4] = low;
    Engine.HEAPU32[ptr / 4 + 1] = high;
}
function writeFloat(ptr, value) {
    ptr = getAndSeekPtr(ptr, 4);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned writeU32");
    }
    Engine.HEAPF32[ptr / 4] = value;
}
function readU32(ptr) {
    ptr = getAndSeekPtr(ptr, 4);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned readU32");
    }
    return Engine.HEAPU32[ptr / 4];
}
function readPointer(ptr) {
    return readU32(ptr);
}
function readU64(ptr) {
    ptr = getAndSeekPtr(ptr, 8);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned readU64");
    }
    return Engine.HEAPU32[ptr / 4] + Engine.HEAPU32[ptr / 4 + 1] * 4294967296;
}
function readFloat(ptr) {
    ptr = getAndSeekPtr(ptr, 4);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned readFloat");
    }
    return Engine.HEAPF32[ptr / 4];
}
function readString(ptr, bufferSize) {
    ptr = getAndSeekPtr(ptr, bufferSize);
    let result = "";
    for (let i = 0; i < bufferSize; i++) {
        const c = Engine.HEAPU8[ptr + i];
        if (c === 0) {
            break;
        }
        result += String.fromCharCode(c);
    }
    return result;
}
function readToFloatArray(ptr, dst) {
    ptr = getAndSeekPtr(ptr, dst.length * 4);
    if (ptr % 4 !== 0) {
        throw new Error("TODO implement not aligned readFloat");
    }
    ptr /= 4;
    for (let i = 0; i < dst.length; i++) {
        dst[i] = Engine.HEAPF32[ptr + i];
    }
}

/**
 * Common utilities
 * @module glMatrix
 */
// Configuration Constants
var EPSILON = 0.000001;
var ARRAY_TYPE = typeof Float32Array !== 'undefined' ? Float32Array : Array;
var RANDOM = Math.random;
/**
 * Sets the type of array used when creating new vectors and matrices
 *
 * @param {Float32ArrayConstructor | ArrayConstructor} type Array type, such as Float32Array or Array
 */

function setMatrixArrayType(type) {
  ARRAY_TYPE = type;
}
var degree = Math.PI / 180;
/**
 * Convert Degree To Radian
 *
 * @param {Number} a Angle in Degrees
 */

function toRadian(a) {
  return a * degree;
}
/**
 * Tests whether or not the arguments have approximately the same value, within an absolute
 * or relative tolerance of glMatrix.EPSILON (an absolute tolerance is used for values less
 * than or equal to 1.0, and a relative tolerance is used for larger values)
 *
 * @param {Number} a The first number to test.
 * @param {Number} b The second number to test.
 * @returns {Boolean} True if the numbers are approximately equal, false otherwise.
 */

function equals$9(a, b) {
  return Math.abs(a - b) <= EPSILON * Math.max(1.0, Math.abs(a), Math.abs(b));
}
if (!Math.hypot) Math.hypot = function () {
  var y = 0,
      i = arguments.length;

  while (i--) {
    y += arguments[i] * arguments[i];
  }

  return Math.sqrt(y);
};

var common = /*#__PURE__*/Object.freeze({
    __proto__: null,
    EPSILON: EPSILON,
    get ARRAY_TYPE () { return ARRAY_TYPE; },
    RANDOM: RANDOM,
    setMatrixArrayType: setMatrixArrayType,
    toRadian: toRadian,
    equals: equals$9
});

/**
 * 2x2 Matrix
 * @module mat2
 */

/**
 * Creates a new identity mat2
 *
 * @returns {mat2} a new 2x2 matrix
 */

function create$8() {
  var out = new ARRAY_TYPE(4);

  if (ARRAY_TYPE != Float32Array) {
    out[1] = 0;
    out[2] = 0;
  }

  out[0] = 1;
  out[3] = 1;
  return out;
}
/**
 * Creates a new mat2 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat2} a matrix to clone
 * @returns {mat2} a new 2x2 matrix
 */

function clone$8(a) {
  var out = new ARRAY_TYPE(4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Copy the values from one mat2 to another
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function copy$8(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Set a mat2 to the identity matrix
 *
 * @param {mat2} out the receiving matrix
 * @returns {mat2} out
 */

function identity$5(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}
/**
 * Create a new mat2 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out A new 2x2 matrix
 */

function fromValues$8(m00, m01, m10, m11) {
  var out = new ARRAY_TYPE(4);
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}
/**
 * Set the components of a mat2 to the given values
 *
 * @param {mat2} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m10 Component in column 1, row 0 position (index 2)
 * @param {Number} m11 Component in column 1, row 1 position (index 3)
 * @returns {mat2} out
 */

function set$8(out, m00, m01, m10, m11) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m10;
  out[3] = m11;
  return out;
}
/**
 * Transpose the values of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function transpose$2(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache
  // some values
  if (out === a) {
    var a1 = a[1];
    out[1] = a[2];
    out[2] = a1;
  } else {
    out[0] = a[0];
    out[1] = a[2];
    out[2] = a[1];
    out[3] = a[3];
  }

  return out;
}
/**
 * Inverts a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function invert$5(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3]; // Calculate the determinant

  var det = a0 * a3 - a2 * a1;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = a3 * det;
  out[1] = -a1 * det;
  out[2] = -a2 * det;
  out[3] = a0 * det;
  return out;
}
/**
 * Calculates the adjugate of a mat2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the source matrix
 * @returns {mat2} out
 */

function adjoint$2(out, a) {
  // Caching this value is nessecary if out == a
  var a0 = a[0];
  out[0] = a[3];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a0;
  return out;
}
/**
 * Calculates the determinant of a mat2
 *
 * @param {ReadonlyMat2} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant$3(a) {
  return a[0] * a[3] - a[2] * a[1];
}
/**
 * Multiplies two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function multiply$8(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  return out;
}
/**
 * Rotates a mat2 by the given angle
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */

function rotate$4(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  return out;
}
/**
 * Scales the mat2 by the dimensions in the given vec2
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to rotate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat2} out
 **/

function scale$8(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.rotate(dest, dest, rad);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2} out
 */

function fromRotation$4(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2.identity(dest);
 *     mat2.scale(dest, dest, vec);
 *
 * @param {mat2} out mat2 receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat2} out
 */

function fromScaling$3(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  return out;
}
/**
 * Returns a string representation of a mat2
 *
 * @param {ReadonlyMat2} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str$8(a) {
  return "mat2(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Returns Frobenius norm of a mat2
 *
 * @param {ReadonlyMat2} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob$3(a) {
  return Math.hypot(a[0], a[1], a[2], a[3]);
}
/**
 * Returns L, D and U matrices (Lower triangular, Diagonal and Upper triangular) by factorizing the input matrix
 * @param {ReadonlyMat2} L the lower triangular matrix
 * @param {ReadonlyMat2} D the diagonal matrix
 * @param {ReadonlyMat2} U the upper triangular matrix
 * @param {ReadonlyMat2} a the input matrix to factorize
 */

function LDU(L, D, U, a) {
  L[2] = a[2] / a[0];
  U[0] = a[0];
  U[1] = a[1];
  U[3] = a[3] - L[2] * U[1];
  return [L, D, U];
}
/**
 * Adds two mat2's
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function add$8(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @returns {mat2} out
 */

function subtract$6(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat2} a The first matrix.
 * @param {ReadonlyMat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals$8(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat2} a The first matrix.
 * @param {ReadonlyMat2} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals$8(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2} out the receiving matrix
 * @param {ReadonlyMat2} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2} out
 */

function multiplyScalar$3(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}
/**
 * Adds two mat2's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2} out the receiving vector
 * @param {ReadonlyMat2} a the first operand
 * @param {ReadonlyMat2} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2} out
 */

function multiplyScalarAndAdd$3(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}
/**
 * Alias for {@link mat2.multiply}
 * @function
 */

var mul$8 = multiply$8;
/**
 * Alias for {@link mat2.subtract}
 * @function
 */

var sub$6 = subtract$6;

var mat2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$8,
    clone: clone$8,
    copy: copy$8,
    identity: identity$5,
    fromValues: fromValues$8,
    set: set$8,
    transpose: transpose$2,
    invert: invert$5,
    adjoint: adjoint$2,
    determinant: determinant$3,
    multiply: multiply$8,
    rotate: rotate$4,
    scale: scale$8,
    fromRotation: fromRotation$4,
    fromScaling: fromScaling$3,
    str: str$8,
    frob: frob$3,
    LDU: LDU,
    add: add$8,
    subtract: subtract$6,
    exactEquals: exactEquals$8,
    equals: equals$8,
    multiplyScalar: multiplyScalar$3,
    multiplyScalarAndAdd: multiplyScalarAndAdd$3,
    mul: mul$8,
    sub: sub$6
});

/**
 * 2x3 Matrix
 * @module mat2d
 * @description
 * A mat2d contains six elements defined as:
 * <pre>
 * [a, b,
 *  c, d,
 *  tx, ty]
 * </pre>
 * This is a short form for the 3x3 matrix:
 * <pre>
 * [a, b, 0,
 *  c, d, 0,
 *  tx, ty, 1]
 * </pre>
 * The last column is ignored so the array is shorter and operations are faster.
 */

/**
 * Creates a new identity mat2d
 *
 * @returns {mat2d} a new 2x3 matrix
 */

function create$7() {
  var out = new ARRAY_TYPE(6);

  if (ARRAY_TYPE != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[4] = 0;
    out[5] = 0;
  }

  out[0] = 1;
  out[3] = 1;
  return out;
}
/**
 * Creates a new mat2d initialized with values from an existing matrix
 *
 * @param {ReadonlyMat2d} a matrix to clone
 * @returns {mat2d} a new 2x3 matrix
 */

function clone$7(a) {
  var out = new ARRAY_TYPE(6);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}
/**
 * Copy the values from one mat2d to another
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {mat2d} out
 */

function copy$7(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  return out;
}
/**
 * Set a mat2d to the identity matrix
 *
 * @param {mat2d} out the receiving matrix
 * @returns {mat2d} out
 */

function identity$4(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Create a new mat2d with the given values
 *
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} A new mat2d
 */

function fromValues$7(a, b, c, d, tx, ty) {
  var out = new ARRAY_TYPE(6);
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}
/**
 * Set the components of a mat2d to the given values
 *
 * @param {mat2d} out the receiving matrix
 * @param {Number} a Component A (index 0)
 * @param {Number} b Component B (index 1)
 * @param {Number} c Component C (index 2)
 * @param {Number} d Component D (index 3)
 * @param {Number} tx Component TX (index 4)
 * @param {Number} ty Component TY (index 5)
 * @returns {mat2d} out
 */

function set$7(out, a, b, c, d, tx, ty) {
  out[0] = a;
  out[1] = b;
  out[2] = c;
  out[3] = d;
  out[4] = tx;
  out[5] = ty;
  return out;
}
/**
 * Inverts a mat2d
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {mat2d} out
 */

function invert$4(out, a) {
  var aa = a[0],
      ab = a[1],
      ac = a[2],
      ad = a[3];
  var atx = a[4],
      aty = a[5];
  var det = aa * ad - ab * ac;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = ad * det;
  out[1] = -ab * det;
  out[2] = -ac * det;
  out[3] = aa * det;
  out[4] = (ac * aty - ad * atx) * det;
  out[5] = (ab * atx - aa * aty) * det;
  return out;
}
/**
 * Calculates the determinant of a mat2d
 *
 * @param {ReadonlyMat2d} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant$2(a) {
  return a[0] * a[3] - a[1] * a[2];
}
/**
 * Multiplies two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function multiply$7(out, a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  out[0] = a0 * b0 + a2 * b1;
  out[1] = a1 * b0 + a3 * b1;
  out[2] = a0 * b2 + a2 * b3;
  out[3] = a1 * b2 + a3 * b3;
  out[4] = a0 * b4 + a2 * b5 + a4;
  out[5] = a1 * b4 + a3 * b5 + a5;
  return out;
}
/**
 * Rotates a mat2d by the given angle
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */

function rotate$3(out, a, rad) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  out[0] = a0 * c + a2 * s;
  out[1] = a1 * c + a3 * s;
  out[2] = a0 * -s + a2 * c;
  out[3] = a1 * -s + a3 * c;
  out[4] = a4;
  out[5] = a5;
  return out;
}
/**
 * Scales the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to translate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat2d} out
 **/

function scale$7(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0 * v0;
  out[1] = a1 * v0;
  out[2] = a2 * v1;
  out[3] = a3 * v1;
  out[4] = a4;
  out[5] = a5;
  return out;
}
/**
 * Translates the mat2d by the dimensions in the given vec2
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to translate
 * @param {ReadonlyVec2} v the vec2 to translate the matrix by
 * @returns {mat2d} out
 **/

function translate$3(out, a, v) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var v0 = v[0],
      v1 = v[1];
  out[0] = a0;
  out[1] = a1;
  out[2] = a2;
  out[3] = a3;
  out[4] = a0 * v0 + a2 * v1 + a4;
  out[5] = a1 * v0 + a3 * v1 + a5;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.rotate(dest, dest, rad);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat2d} out
 */

function fromRotation$3(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = -s;
  out[3] = c;
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.scale(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat2d} out
 */

function fromScaling$2(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = v[1];
  out[4] = 0;
  out[5] = 0;
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat2d.identity(dest);
 *     mat2d.translate(dest, dest, vec);
 *
 * @param {mat2d} out mat2d receiving operation result
 * @param {ReadonlyVec2} v Translation vector
 * @returns {mat2d} out
 */

function fromTranslation$3(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = v[0];
  out[5] = v[1];
  return out;
}
/**
 * Returns a string representation of a mat2d
 *
 * @param {ReadonlyMat2d} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str$7(a) {
  return "mat2d(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ")";
}
/**
 * Returns Frobenius norm of a mat2d
 *
 * @param {ReadonlyMat2d} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob$2(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], 1);
}
/**
 * Adds two mat2d's
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function add$7(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @returns {mat2d} out
 */

function subtract$5(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat2d} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat2d} out
 */

function multiplyScalar$2(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  return out;
}
/**
 * Adds two mat2d's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat2d} out the receiving vector
 * @param {ReadonlyMat2d} a the first operand
 * @param {ReadonlyMat2d} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat2d} out
 */

function multiplyScalarAndAdd$2(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat2d} a The first matrix.
 * @param {ReadonlyMat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals$7(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat2d} a The first matrix.
 * @param {ReadonlyMat2d} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals$7(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5));
}
/**
 * Alias for {@link mat2d.multiply}
 * @function
 */

var mul$7 = multiply$7;
/**
 * Alias for {@link mat2d.subtract}
 * @function
 */

var sub$5 = subtract$5;

var mat2d = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$7,
    clone: clone$7,
    copy: copy$7,
    identity: identity$4,
    fromValues: fromValues$7,
    set: set$7,
    invert: invert$4,
    determinant: determinant$2,
    multiply: multiply$7,
    rotate: rotate$3,
    scale: scale$7,
    translate: translate$3,
    fromRotation: fromRotation$3,
    fromScaling: fromScaling$2,
    fromTranslation: fromTranslation$3,
    str: str$7,
    frob: frob$2,
    add: add$7,
    subtract: subtract$5,
    multiplyScalar: multiplyScalar$2,
    multiplyScalarAndAdd: multiplyScalarAndAdd$2,
    exactEquals: exactEquals$7,
    equals: equals$7,
    mul: mul$7,
    sub: sub$5
});

/**
 * 3x3 Matrix
 * @module mat3
 */

/**
 * Creates a new identity mat3
 *
 * @returns {mat3} a new 3x3 matrix
 */

function create$6() {
  var out = new ARRAY_TYPE(9);

  if (ARRAY_TYPE != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[5] = 0;
    out[6] = 0;
    out[7] = 0;
  }

  out[0] = 1;
  out[4] = 1;
  out[8] = 1;
  return out;
}
/**
 * Copies the upper-left 3x3 values into the given mat3.
 *
 * @param {mat3} out the receiving 3x3 matrix
 * @param {ReadonlyMat4} a   the source 4x4 matrix
 * @returns {mat3} out
 */

function fromMat4$1(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[4];
  out[4] = a[5];
  out[5] = a[6];
  out[6] = a[8];
  out[7] = a[9];
  out[8] = a[10];
  return out;
}
/**
 * Creates a new mat3 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat3} a matrix to clone
 * @returns {mat3} a new 3x3 matrix
 */

function clone$6(a) {
  var out = new ARRAY_TYPE(9);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Copy the values from one mat3 to another
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function copy$6(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Create a new mat3 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} A new mat3
 */

function fromValues$6(m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  var out = new ARRAY_TYPE(9);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set the components of a mat3 to the given values
 *
 * @param {mat3} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m10 Component in column 1, row 0 position (index 3)
 * @param {Number} m11 Component in column 1, row 1 position (index 4)
 * @param {Number} m12 Component in column 1, row 2 position (index 5)
 * @param {Number} m20 Component in column 2, row 0 position (index 6)
 * @param {Number} m21 Component in column 2, row 1 position (index 7)
 * @param {Number} m22 Component in column 2, row 2 position (index 8)
 * @returns {mat3} out
 */

function set$6(out, m00, m01, m02, m10, m11, m12, m20, m21, m22) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m10;
  out[4] = m11;
  out[5] = m12;
  out[6] = m20;
  out[7] = m21;
  out[8] = m22;
  return out;
}
/**
 * Set a mat3 to the identity matrix
 *
 * @param {mat3} out the receiving matrix
 * @returns {mat3} out
 */

function identity$3(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Transpose the values of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function transpose$1(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a12 = a[5];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a01;
    out[5] = a[7];
    out[6] = a02;
    out[7] = a12;
  } else {
    out[0] = a[0];
    out[1] = a[3];
    out[2] = a[6];
    out[3] = a[1];
    out[4] = a[4];
    out[5] = a[7];
    out[6] = a[2];
    out[7] = a[5];
    out[8] = a[8];
  }

  return out;
}
/**
 * Inverts a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function invert$3(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b01 = a22 * a11 - a12 * a21;
  var b11 = -a22 * a10 + a12 * a20;
  var b21 = a21 * a10 - a11 * a20; // Calculate the determinant

  var det = a00 * b01 + a01 * b11 + a02 * b21;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = b01 * det;
  out[1] = (-a22 * a01 + a02 * a21) * det;
  out[2] = (a12 * a01 - a02 * a11) * det;
  out[3] = b11 * det;
  out[4] = (a22 * a00 - a02 * a20) * det;
  out[5] = (-a12 * a00 + a02 * a10) * det;
  out[6] = b21 * det;
  out[7] = (-a21 * a00 + a01 * a20) * det;
  out[8] = (a11 * a00 - a01 * a10) * det;
  return out;
}
/**
 * Calculates the adjugate of a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the source matrix
 * @returns {mat3} out
 */

function adjoint$1(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  out[0] = a11 * a22 - a12 * a21;
  out[1] = a02 * a21 - a01 * a22;
  out[2] = a01 * a12 - a02 * a11;
  out[3] = a12 * a20 - a10 * a22;
  out[4] = a00 * a22 - a02 * a20;
  out[5] = a02 * a10 - a00 * a12;
  out[6] = a10 * a21 - a11 * a20;
  out[7] = a01 * a20 - a00 * a21;
  out[8] = a00 * a11 - a01 * a10;
  return out;
}
/**
 * Calculates the determinant of a mat3
 *
 * @param {ReadonlyMat3} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant$1(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);
}
/**
 * Multiplies two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function multiply$6(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2];
  var a10 = a[3],
      a11 = a[4],
      a12 = a[5];
  var a20 = a[6],
      a21 = a[7],
      a22 = a[8];
  var b00 = b[0],
      b01 = b[1],
      b02 = b[2];
  var b10 = b[3],
      b11 = b[4],
      b12 = b[5];
  var b20 = b[6],
      b21 = b[7],
      b22 = b[8];
  out[0] = b00 * a00 + b01 * a10 + b02 * a20;
  out[1] = b00 * a01 + b01 * a11 + b02 * a21;
  out[2] = b00 * a02 + b01 * a12 + b02 * a22;
  out[3] = b10 * a00 + b11 * a10 + b12 * a20;
  out[4] = b10 * a01 + b11 * a11 + b12 * a21;
  out[5] = b10 * a02 + b11 * a12 + b12 * a22;
  out[6] = b20 * a00 + b21 * a10 + b22 * a20;
  out[7] = b20 * a01 + b21 * a11 + b22 * a21;
  out[8] = b20 * a02 + b21 * a12 + b22 * a22;
  return out;
}
/**
 * Translate a mat3 by the given vector
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to translate
 * @param {ReadonlyVec2} v vector to translate by
 * @returns {mat3} out
 */

function translate$2(out, a, v) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      x = v[0],
      y = v[1];
  out[0] = a00;
  out[1] = a01;
  out[2] = a02;
  out[3] = a10;
  out[4] = a11;
  out[5] = a12;
  out[6] = x * a00 + y * a10 + a20;
  out[7] = x * a01 + y * a11 + a21;
  out[8] = x * a02 + y * a12 + a22;
  return out;
}
/**
 * Rotates a mat3 by the given angle
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function rotate$2(out, a, rad) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a10 = a[3],
      a11 = a[4],
      a12 = a[5],
      a20 = a[6],
      a21 = a[7],
      a22 = a[8],
      s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c * a00 + s * a10;
  out[1] = c * a01 + s * a11;
  out[2] = c * a02 + s * a12;
  out[3] = c * a10 - s * a00;
  out[4] = c * a11 - s * a01;
  out[5] = c * a12 - s * a02;
  out[6] = a20;
  out[7] = a21;
  out[8] = a22;
  return out;
}
/**
 * Scales the mat3 by the dimensions in the given vec2
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to rotate
 * @param {ReadonlyVec2} v the vec2 to scale the matrix by
 * @returns {mat3} out
 **/

function scale$6(out, a, v) {
  var x = v[0],
      y = v[1];
  out[0] = x * a[0];
  out[1] = x * a[1];
  out[2] = x * a[2];
  out[3] = y * a[3];
  out[4] = y * a[4];
  out[5] = y * a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.translate(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Translation vector
 * @returns {mat3} out
 */

function fromTranslation$2(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 1;
  out[5] = 0;
  out[6] = v[0];
  out[7] = v[1];
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a given angle
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.rotate(dest, dest, rad);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat3} out
 */

function fromRotation$2(out, rad) {
  var s = Math.sin(rad),
      c = Math.cos(rad);
  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = -s;
  out[4] = c;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat3.identity(dest);
 *     mat3.scale(dest, dest, vec);
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyVec2} v Scaling vector
 * @returns {mat3} out
 */

function fromScaling$1(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = v[1];
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  out[8] = 1;
  return out;
}
/**
 * Copies the values from a mat2d into a mat3
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat2d} a the matrix to copy
 * @returns {mat3} out
 **/

function fromMat2d(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = 0;
  out[3] = a[2];
  out[4] = a[3];
  out[5] = 0;
  out[6] = a[4];
  out[7] = a[5];
  out[8] = 1;
  return out;
}
/**
 * Calculates a 3x3 matrix from the given quaternion
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyQuat} q Quaternion to create matrix from
 *
 * @returns {mat3} out
 */

function fromQuat$1(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - yy - zz;
  out[3] = yx - wz;
  out[6] = zx + wy;
  out[1] = yx + wz;
  out[4] = 1 - xx - zz;
  out[7] = zy - wx;
  out[2] = zx - wy;
  out[5] = zy + wx;
  out[8] = 1 - xx - yy;
  return out;
}
/**
 * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix
 *
 * @param {mat3} out mat3 receiving operation result
 * @param {ReadonlyMat4} a Mat4 to derive the normal matrix from
 *
 * @returns {mat3} out
 */

function normalFromMat4(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  return out;
}
/**
 * Generates a 2D projection matrix with the given bounds
 *
 * @param {mat3} out mat3 frustum matrix will be written into
 * @param {number} width Width of your gl context
 * @param {number} height Height of gl context
 * @returns {mat3} out
 */

function projection(out, width, height) {
  out[0] = 2 / width;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = -2 / height;
  out[5] = 0;
  out[6] = -1;
  out[7] = 1;
  out[8] = 1;
  return out;
}
/**
 * Returns a string representation of a mat3
 *
 * @param {ReadonlyMat3} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str$6(a) {
  return "mat3(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ")";
}
/**
 * Returns Frobenius norm of a mat3
 *
 * @param {ReadonlyMat3} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob$1(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8]);
}
/**
 * Adds two mat3's
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function add$6(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @returns {mat3} out
 */

function subtract$4(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat3} out the receiving matrix
 * @param {ReadonlyMat3} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat3} out
 */

function multiplyScalar$1(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  return out;
}
/**
 * Adds two mat3's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat3} out the receiving vector
 * @param {ReadonlyMat3} a the first operand
 * @param {ReadonlyMat3} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat3} out
 */

function multiplyScalarAndAdd$1(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals$6(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat3} a The first matrix.
 * @param {ReadonlyMat3} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals$6(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7],
      a8 = a[8];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7],
      b8 = b[8];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8));
}
/**
 * Alias for {@link mat3.multiply}
 * @function
 */

var mul$6 = multiply$6;
/**
 * Alias for {@link mat3.subtract}
 * @function
 */

var sub$4 = subtract$4;

var mat3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$6,
    fromMat4: fromMat4$1,
    clone: clone$6,
    copy: copy$6,
    fromValues: fromValues$6,
    set: set$6,
    identity: identity$3,
    transpose: transpose$1,
    invert: invert$3,
    adjoint: adjoint$1,
    determinant: determinant$1,
    multiply: multiply$6,
    translate: translate$2,
    rotate: rotate$2,
    scale: scale$6,
    fromTranslation: fromTranslation$2,
    fromRotation: fromRotation$2,
    fromScaling: fromScaling$1,
    fromMat2d: fromMat2d,
    fromQuat: fromQuat$1,
    normalFromMat4: normalFromMat4,
    projection: projection,
    str: str$6,
    frob: frob$1,
    add: add$6,
    subtract: subtract$4,
    multiplyScalar: multiplyScalar$1,
    multiplyScalarAndAdd: multiplyScalarAndAdd$1,
    exactEquals: exactEquals$6,
    equals: equals$6,
    mul: mul$6,
    sub: sub$4
});

/**
 * 4x4 Matrix<br>Format: column-major, when typed out it looks like row-major<br>The matrices are being post multiplied.
 * @module mat4
 */

/**
 * Creates a new identity mat4
 *
 * @returns {mat4} a new 4x4 matrix
 */

function create$5() {
  var out = new ARRAY_TYPE(16);

  if (ARRAY_TYPE != Float32Array) {
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
    out[4] = 0;
    out[6] = 0;
    out[7] = 0;
    out[8] = 0;
    out[9] = 0;
    out[11] = 0;
    out[12] = 0;
    out[13] = 0;
    out[14] = 0;
  }

  out[0] = 1;
  out[5] = 1;
  out[10] = 1;
  out[15] = 1;
  return out;
}
/**
 * Creates a new mat4 initialized with values from an existing matrix
 *
 * @param {ReadonlyMat4} a matrix to clone
 * @returns {mat4} a new 4x4 matrix
 */

function clone$5(a) {
  var out = new ARRAY_TYPE(16);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Copy the values from one mat4 to another
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function copy$5(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  out[8] = a[8];
  out[9] = a[9];
  out[10] = a[10];
  out[11] = a[11];
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Create a new mat4 with the given values
 *
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} A new mat4
 */

function fromValues$5(m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  var out = new ARRAY_TYPE(16);
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}
/**
 * Set the components of a mat4 to the given values
 *
 * @param {mat4} out the receiving matrix
 * @param {Number} m00 Component in column 0, row 0 position (index 0)
 * @param {Number} m01 Component in column 0, row 1 position (index 1)
 * @param {Number} m02 Component in column 0, row 2 position (index 2)
 * @param {Number} m03 Component in column 0, row 3 position (index 3)
 * @param {Number} m10 Component in column 1, row 0 position (index 4)
 * @param {Number} m11 Component in column 1, row 1 position (index 5)
 * @param {Number} m12 Component in column 1, row 2 position (index 6)
 * @param {Number} m13 Component in column 1, row 3 position (index 7)
 * @param {Number} m20 Component in column 2, row 0 position (index 8)
 * @param {Number} m21 Component in column 2, row 1 position (index 9)
 * @param {Number} m22 Component in column 2, row 2 position (index 10)
 * @param {Number} m23 Component in column 2, row 3 position (index 11)
 * @param {Number} m30 Component in column 3, row 0 position (index 12)
 * @param {Number} m31 Component in column 3, row 1 position (index 13)
 * @param {Number} m32 Component in column 3, row 2 position (index 14)
 * @param {Number} m33 Component in column 3, row 3 position (index 15)
 * @returns {mat4} out
 */

function set$5(out, m00, m01, m02, m03, m10, m11, m12, m13, m20, m21, m22, m23, m30, m31, m32, m33) {
  out[0] = m00;
  out[1] = m01;
  out[2] = m02;
  out[3] = m03;
  out[4] = m10;
  out[5] = m11;
  out[6] = m12;
  out[7] = m13;
  out[8] = m20;
  out[9] = m21;
  out[10] = m22;
  out[11] = m23;
  out[12] = m30;
  out[13] = m31;
  out[14] = m32;
  out[15] = m33;
  return out;
}
/**
 * Set a mat4 to the identity matrix
 *
 * @param {mat4} out the receiving matrix
 * @returns {mat4} out
 */

function identity$2(out) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Transpose the values of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function transpose(out, a) {
  // If we are transposing ourselves we can skip a few steps but have to cache some values
  if (out === a) {
    var a01 = a[1],
        a02 = a[2],
        a03 = a[3];
    var a12 = a[6],
        a13 = a[7];
    var a23 = a[11];
    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a01;
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a02;
    out[9] = a12;
    out[11] = a[14];
    out[12] = a03;
    out[13] = a13;
    out[14] = a23;
  } else {
    out[0] = a[0];
    out[1] = a[4];
    out[2] = a[8];
    out[3] = a[12];
    out[4] = a[1];
    out[5] = a[5];
    out[6] = a[9];
    out[7] = a[13];
    out[8] = a[2];
    out[9] = a[6];
    out[10] = a[10];
    out[11] = a[14];
    out[12] = a[3];
    out[13] = a[7];
    out[14] = a[11];
    out[15] = a[15];
  }

  return out;
}
/**
 * Inverts a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function invert$2(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  var det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;

  if (!det) {
    return null;
  }

  det = 1.0 / det;
  out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;
  out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;
  out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;
  out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;
  out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;
  out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;
  out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;
  out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;
  out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;
  out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;
  out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;
  out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;
  out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;
  out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;
  out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;
  out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;
  return out;
}
/**
 * Calculates the adjugate of a mat4
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the source matrix
 * @returns {mat4} out
 */

function adjoint(out, a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);
  out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));
  out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);
  out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));
  out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));
  out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);
  out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));
  out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);
  out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);
  out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));
  out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);
  out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));
  out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));
  out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);
  out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));
  out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);
  return out;
}
/**
 * Calculates the determinant of a mat4
 *
 * @param {ReadonlyMat4} a the source matrix
 * @returns {Number} determinant of a
 */

function determinant(a) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15];
  var b00 = a00 * a11 - a01 * a10;
  var b01 = a00 * a12 - a02 * a10;
  var b02 = a00 * a13 - a03 * a10;
  var b03 = a01 * a12 - a02 * a11;
  var b04 = a01 * a13 - a03 * a11;
  var b05 = a02 * a13 - a03 * a12;
  var b06 = a20 * a31 - a21 * a30;
  var b07 = a20 * a32 - a22 * a30;
  var b08 = a20 * a33 - a23 * a30;
  var b09 = a21 * a32 - a22 * a31;
  var b10 = a21 * a33 - a23 * a31;
  var b11 = a22 * a33 - a23 * a32; // Calculate the determinant

  return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;
}
/**
 * Multiplies two mat4s
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function multiply$5(out, a, b) {
  var a00 = a[0],
      a01 = a[1],
      a02 = a[2],
      a03 = a[3];
  var a10 = a[4],
      a11 = a[5],
      a12 = a[6],
      a13 = a[7];
  var a20 = a[8],
      a21 = a[9],
      a22 = a[10],
      a23 = a[11];
  var a30 = a[12],
      a31 = a[13],
      a32 = a[14],
      a33 = a[15]; // Cache only the current line of the second matrix

  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[4];
  b1 = b[5];
  b2 = b[6];
  b3 = b[7];
  out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[8];
  b1 = b[9];
  b2 = b[10];
  b3 = b[11];
  out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  b0 = b[12];
  b1 = b[13];
  b2 = b[14];
  b3 = b[15];
  out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;
  out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;
  out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;
  out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;
  return out;
}
/**
 * Translate a mat4 by the given vector
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to translate
 * @param {ReadonlyVec3} v vector to translate by
 * @returns {mat4} out
 */

function translate$1(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];
  var a00, a01, a02, a03;
  var a10, a11, a12, a13;
  var a20, a21, a22, a23;

  if (a === out) {
    out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];
    out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];
    out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];
    out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];
  } else {
    a00 = a[0];
    a01 = a[1];
    a02 = a[2];
    a03 = a[3];
    a10 = a[4];
    a11 = a[5];
    a12 = a[6];
    a13 = a[7];
    a20 = a[8];
    a21 = a[9];
    a22 = a[10];
    a23 = a[11];
    out[0] = a00;
    out[1] = a01;
    out[2] = a02;
    out[3] = a03;
    out[4] = a10;
    out[5] = a11;
    out[6] = a12;
    out[7] = a13;
    out[8] = a20;
    out[9] = a21;
    out[10] = a22;
    out[11] = a23;
    out[12] = a00 * x + a10 * y + a20 * z + a[12];
    out[13] = a01 * x + a11 * y + a21 * z + a[13];
    out[14] = a02 * x + a12 * y + a22 * z + a[14];
    out[15] = a03 * x + a13 * y + a23 * z + a[15];
  }

  return out;
}
/**
 * Scales the mat4 by the dimensions in the given vec3 not using vectorization
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to scale
 * @param {ReadonlyVec3} v the vec3 to scale the matrix by
 * @returns {mat4} out
 **/

function scale$5(out, a, v) {
  var x = v[0],
      y = v[1],
      z = v[2];
  out[0] = a[0] * x;
  out[1] = a[1] * x;
  out[2] = a[2] * x;
  out[3] = a[3] * x;
  out[4] = a[4] * y;
  out[5] = a[5] * y;
  out[6] = a[6] * y;
  out[7] = a[7] * y;
  out[8] = a[8] * z;
  out[9] = a[9] * z;
  out[10] = a[10] * z;
  out[11] = a[11] * z;
  out[12] = a[12];
  out[13] = a[13];
  out[14] = a[14];
  out[15] = a[15];
  return out;
}
/**
 * Rotates a mat4 by the given angle around the given axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @returns {mat4} out
 */

function rotate$1(out, a, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.hypot(x, y, z);
  var s, c, t;
  var a00, a01, a02, a03;
  var a10, a11, a12, a13;
  var a20, a21, a22, a23;
  var b00, b01, b02;
  var b10, b11, b12;
  var b20, b21, b22;

  if (len < EPSILON) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;
  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c;
  a00 = a[0];
  a01 = a[1];
  a02 = a[2];
  a03 = a[3];
  a10 = a[4];
  a11 = a[5];
  a12 = a[6];
  a13 = a[7];
  a20 = a[8];
  a21 = a[9];
  a22 = a[10];
  a23 = a[11]; // Construct the elements of the rotation matrix

  b00 = x * x * t + c;
  b01 = y * x * t + z * s;
  b02 = z * x * t - y * s;
  b10 = x * y * t - z * s;
  b11 = y * y * t + c;
  b12 = z * y * t + x * s;
  b20 = x * z * t + y * s;
  b21 = y * z * t - x * s;
  b22 = z * z * t + c; // Perform rotation-specific matrix multiplication

  out[0] = a00 * b00 + a10 * b01 + a20 * b02;
  out[1] = a01 * b00 + a11 * b01 + a21 * b02;
  out[2] = a02 * b00 + a12 * b01 + a22 * b02;
  out[3] = a03 * b00 + a13 * b01 + a23 * b02;
  out[4] = a00 * b10 + a10 * b11 + a20 * b12;
  out[5] = a01 * b10 + a11 * b11 + a21 * b12;
  out[6] = a02 * b10 + a12 * b11 + a22 * b12;
  out[7] = a03 * b10 + a13 * b11 + a23 * b12;
  out[8] = a00 * b20 + a10 * b21 + a20 * b22;
  out[9] = a01 * b20 + a11 * b21 + a21 * b22;
  out[10] = a02 * b20 + a12 * b21 + a22 * b22;
  out[11] = a03 * b20 + a13 * b21 + a23 * b22;

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  }

  return out;
}
/**
 * Rotates a matrix by the given angle around the X axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateX$3(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[0] = a[0];
    out[1] = a[1];
    out[2] = a[2];
    out[3] = a[3];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[4] = a10 * c + a20 * s;
  out[5] = a11 * c + a21 * s;
  out[6] = a12 * c + a22 * s;
  out[7] = a13 * c + a23 * s;
  out[8] = a20 * c - a10 * s;
  out[9] = a21 * c - a11 * s;
  out[10] = a22 * c - a12 * s;
  out[11] = a23 * c - a13 * s;
  return out;
}
/**
 * Rotates a matrix by the given angle around the Y axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateY$3(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a20 = a[8];
  var a21 = a[9];
  var a22 = a[10];
  var a23 = a[11];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged rows
    out[4] = a[4];
    out[5] = a[5];
    out[6] = a[6];
    out[7] = a[7];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[0] = a00 * c - a20 * s;
  out[1] = a01 * c - a21 * s;
  out[2] = a02 * c - a22 * s;
  out[3] = a03 * c - a23 * s;
  out[8] = a00 * s + a20 * c;
  out[9] = a01 * s + a21 * c;
  out[10] = a02 * s + a22 * c;
  out[11] = a03 * s + a23 * c;
  return out;
}
/**
 * Rotates a matrix by the given angle around the Z axis
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to rotate
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function rotateZ$3(out, a, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad);
  var a00 = a[0];
  var a01 = a[1];
  var a02 = a[2];
  var a03 = a[3];
  var a10 = a[4];
  var a11 = a[5];
  var a12 = a[6];
  var a13 = a[7];

  if (a !== out) {
    // If the source and destination differ, copy the unchanged last row
    out[8] = a[8];
    out[9] = a[9];
    out[10] = a[10];
    out[11] = a[11];
    out[12] = a[12];
    out[13] = a[13];
    out[14] = a[14];
    out[15] = a[15];
  } // Perform axis-specific matrix multiplication


  out[0] = a00 * c + a10 * s;
  out[1] = a01 * c + a11 * s;
  out[2] = a02 * c + a12 * s;
  out[3] = a03 * c + a13 * s;
  out[4] = a10 * c - a00 * s;
  out[5] = a11 * c - a01 * s;
  out[6] = a12 * c - a02 * s;
  out[7] = a13 * c - a03 * s;
  return out;
}
/**
 * Creates a matrix from a vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyVec3} v Translation vector
 * @returns {mat4} out
 */

function fromTranslation$1(out, v) {
  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a vector scaling
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.scale(dest, dest, vec);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyVec3} v Scaling vector
 * @returns {mat4} out
 */

function fromScaling(out, v) {
  out[0] = v[0];
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = v[1];
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = v[2];
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a given angle around a given axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotate(dest, dest, rad, axis);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @returns {mat4} out
 */

function fromRotation$1(out, rad, axis) {
  var x = axis[0],
      y = axis[1],
      z = axis[2];
  var len = Math.hypot(x, y, z);
  var s, c, t;

  if (len < EPSILON) {
    return null;
  }

  len = 1 / len;
  x *= len;
  y *= len;
  z *= len;
  s = Math.sin(rad);
  c = Math.cos(rad);
  t = 1 - c; // Perform rotation-specific matrix multiplication

  out[0] = x * x * t + c;
  out[1] = y * x * t + z * s;
  out[2] = z * x * t - y * s;
  out[3] = 0;
  out[4] = x * y * t - z * s;
  out[5] = y * y * t + c;
  out[6] = z * y * t + x * s;
  out[7] = 0;
  out[8] = x * z * t + y * s;
  out[9] = y * z * t - x * s;
  out[10] = z * z * t + c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the X axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateX(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromXRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = 1;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = c;
  out[6] = s;
  out[7] = 0;
  out[8] = 0;
  out[9] = -s;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the Y axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateY(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromYRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = c;
  out[1] = 0;
  out[2] = -s;
  out[3] = 0;
  out[4] = 0;
  out[5] = 1;
  out[6] = 0;
  out[7] = 0;
  out[8] = s;
  out[9] = 0;
  out[10] = c;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from the given angle around the Z axis
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.rotateZ(dest, dest, rad);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {Number} rad the angle to rotate the matrix by
 * @returns {mat4} out
 */

function fromZRotation(out, rad) {
  var s = Math.sin(rad);
  var c = Math.cos(rad); // Perform axis-specific matrix multiplication

  out[0] = c;
  out[1] = s;
  out[2] = 0;
  out[3] = 0;
  out[4] = -s;
  out[5] = c;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 1;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a quaternion rotation and vector translation
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @returns {mat4} out
 */

function fromRotationTranslation$1(out, q, v) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - (yy + zz);
  out[1] = xy + wz;
  out[2] = xz - wy;
  out[3] = 0;
  out[4] = xy - wz;
  out[5] = 1 - (xx + zz);
  out[6] = yz + wx;
  out[7] = 0;
  out[8] = xz + wy;
  out[9] = yz - wx;
  out[10] = 1 - (xx + yy);
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a new mat4 from a dual quat.
 *
 * @param {mat4} out Matrix
 * @param {ReadonlyQuat2} a Dual Quaternion
 * @returns {mat4} mat4 receiving operation result
 */

function fromQuat2(out, a) {
  var translation = new ARRAY_TYPE(3);
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];
  var magnitude = bx * bx + by * by + bz * bz + bw * bw; //Only scale if it makes sense

  if (magnitude > 0) {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2 / magnitude;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2 / magnitude;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2 / magnitude;
  } else {
    translation[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
    translation[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
    translation[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  }

  fromRotationTranslation$1(out, a, translation);
  return out;
}
/**
 * Returns the translation vector component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslation,
 *  the returned vector will be the same as the translation vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive translation component
 * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */

function getTranslation$1(out, mat) {
  out[0] = mat[12];
  out[1] = mat[13];
  out[2] = mat[14];
  return out;
}
/**
 * Returns the scaling factor component of a transformation
 *  matrix. If a matrix is built with fromRotationTranslationScale
 *  with a normalized Quaternion paramter, the returned vector will be
 *  the same as the scaling vector
 *  originally supplied.
 * @param  {vec3} out Vector to receive scaling factor component
 * @param  {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {vec3} out
 */

function getScaling(out, mat) {
  var m11 = mat[0];
  var m12 = mat[1];
  var m13 = mat[2];
  var m21 = mat[4];
  var m22 = mat[5];
  var m23 = mat[6];
  var m31 = mat[8];
  var m32 = mat[9];
  var m33 = mat[10];
  out[0] = Math.hypot(m11, m12, m13);
  out[1] = Math.hypot(m21, m22, m23);
  out[2] = Math.hypot(m31, m32, m33);
  return out;
}
/**
 * Returns a quaternion representing the rotational component
 *  of a transformation matrix. If a matrix is built with
 *  fromRotationTranslation, the returned quaternion will be the
 *  same as the quaternion originally supplied.
 * @param {quat} out Quaternion to receive the rotation component
 * @param {ReadonlyMat4} mat Matrix to be decomposed (input)
 * @return {quat} out
 */

function getRotation(out, mat) {
  var scaling = new ARRAY_TYPE(3);
  getScaling(scaling, mat);
  var is1 = 1 / scaling[0];
  var is2 = 1 / scaling[1];
  var is3 = 1 / scaling[2];
  var sm11 = mat[0] * is1;
  var sm12 = mat[1] * is2;
  var sm13 = mat[2] * is3;
  var sm21 = mat[4] * is1;
  var sm22 = mat[5] * is2;
  var sm23 = mat[6] * is3;
  var sm31 = mat[8] * is1;
  var sm32 = mat[9] * is2;
  var sm33 = mat[10] * is3;
  var trace = sm11 + sm22 + sm33;
  var S = 0;

  if (trace > 0) {
    S = Math.sqrt(trace + 1.0) * 2;
    out[3] = 0.25 * S;
    out[0] = (sm23 - sm32) / S;
    out[1] = (sm31 - sm13) / S;
    out[2] = (sm12 - sm21) / S;
  } else if (sm11 > sm22 && sm11 > sm33) {
    S = Math.sqrt(1.0 + sm11 - sm22 - sm33) * 2;
    out[3] = (sm23 - sm32) / S;
    out[0] = 0.25 * S;
    out[1] = (sm12 + sm21) / S;
    out[2] = (sm31 + sm13) / S;
  } else if (sm22 > sm33) {
    S = Math.sqrt(1.0 + sm22 - sm11 - sm33) * 2;
    out[3] = (sm31 - sm13) / S;
    out[0] = (sm12 + sm21) / S;
    out[1] = 0.25 * S;
    out[2] = (sm23 + sm32) / S;
  } else {
    S = Math.sqrt(1.0 + sm33 - sm11 - sm22) * 2;
    out[3] = (sm12 - sm21) / S;
    out[0] = (sm31 + sm13) / S;
    out[1] = (sm23 + sm32) / S;
    out[2] = 0.25 * S;
  }

  return out;
}
/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @param {ReadonlyVec3} s Scaling vector
 * @returns {mat4} out
 */

function fromRotationTranslationScale(out, q, v, s) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  var sx = s[0];
  var sy = s[1];
  var sz = s[2];
  out[0] = (1 - (yy + zz)) * sx;
  out[1] = (xy + wz) * sx;
  out[2] = (xz - wy) * sx;
  out[3] = 0;
  out[4] = (xy - wz) * sy;
  out[5] = (1 - (xx + zz)) * sy;
  out[6] = (yz + wx) * sy;
  out[7] = 0;
  out[8] = (xz + wy) * sz;
  out[9] = (yz - wx) * sz;
  out[10] = (1 - (xx + yy)) * sz;
  out[11] = 0;
  out[12] = v[0];
  out[13] = v[1];
  out[14] = v[2];
  out[15] = 1;
  return out;
}
/**
 * Creates a matrix from a quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin
 * This is equivalent to (but much faster than):
 *
 *     mat4.identity(dest);
 *     mat4.translate(dest, vec);
 *     mat4.translate(dest, origin);
 *     let quatMat = mat4.create();
 *     quat4.toMat4(quat, quatMat);
 *     mat4.multiply(dest, quatMat);
 *     mat4.scale(dest, scale)
 *     mat4.translate(dest, negativeOrigin);
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {quat4} q Rotation quaternion
 * @param {ReadonlyVec3} v Translation vector
 * @param {ReadonlyVec3} s Scaling vector
 * @param {ReadonlyVec3} o The origin vector around which to scale and rotate
 * @returns {mat4} out
 */

function fromRotationTranslationScaleOrigin(out, q, v, s, o) {
  // Quaternion math
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var xy = x * y2;
  var xz = x * z2;
  var yy = y * y2;
  var yz = y * z2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  var sx = s[0];
  var sy = s[1];
  var sz = s[2];
  var ox = o[0];
  var oy = o[1];
  var oz = o[2];
  var out0 = (1 - (yy + zz)) * sx;
  var out1 = (xy + wz) * sx;
  var out2 = (xz - wy) * sx;
  var out4 = (xy - wz) * sy;
  var out5 = (1 - (xx + zz)) * sy;
  var out6 = (yz + wx) * sy;
  var out8 = (xz + wy) * sz;
  var out9 = (yz - wx) * sz;
  var out10 = (1 - (xx + yy)) * sz;
  out[0] = out0;
  out[1] = out1;
  out[2] = out2;
  out[3] = 0;
  out[4] = out4;
  out[5] = out5;
  out[6] = out6;
  out[7] = 0;
  out[8] = out8;
  out[9] = out9;
  out[10] = out10;
  out[11] = 0;
  out[12] = v[0] + ox - (out0 * ox + out4 * oy + out8 * oz);
  out[13] = v[1] + oy - (out1 * ox + out5 * oy + out9 * oz);
  out[14] = v[2] + oz - (out2 * ox + out6 * oy + out10 * oz);
  out[15] = 1;
  return out;
}
/**
 * Calculates a 4x4 matrix from the given quaternion
 *
 * @param {mat4} out mat4 receiving operation result
 * @param {ReadonlyQuat} q Quaternion to create matrix from
 *
 * @returns {mat4} out
 */

function fromQuat(out, q) {
  var x = q[0],
      y = q[1],
      z = q[2],
      w = q[3];
  var x2 = x + x;
  var y2 = y + y;
  var z2 = z + z;
  var xx = x * x2;
  var yx = y * x2;
  var yy = y * y2;
  var zx = z * x2;
  var zy = z * y2;
  var zz = z * z2;
  var wx = w * x2;
  var wy = w * y2;
  var wz = w * z2;
  out[0] = 1 - yy - zz;
  out[1] = yx + wz;
  out[2] = zx - wy;
  out[3] = 0;
  out[4] = yx - wz;
  out[5] = 1 - xx - zz;
  out[6] = zy + wx;
  out[7] = 0;
  out[8] = zx + wy;
  out[9] = zy - wx;
  out[10] = 1 - xx - yy;
  out[11] = 0;
  out[12] = 0;
  out[13] = 0;
  out[14] = 0;
  out[15] = 1;
  return out;
}
/**
 * Generates a frustum matrix with the given bounds
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Number} left Left bound of the frustum
 * @param {Number} right Right bound of the frustum
 * @param {Number} bottom Bottom bound of the frustum
 * @param {Number} top Top bound of the frustum
 * @param {Number} near Near bound of the frustum
 * @param {Number} far Far bound of the frustum
 * @returns {mat4} out
 */

function frustum(out, left, right, bottom, top, near, far) {
  var rl = 1 / (right - left);
  var tb = 1 / (top - bottom);
  var nf = 1 / (near - far);
  out[0] = near * 2 * rl;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = near * 2 * tb;
  out[6] = 0;
  out[7] = 0;
  out[8] = (right + left) * rl;
  out[9] = (top + bottom) * tb;
  out[10] = (far + near) * nf;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[14] = far * near * 2 * nf;
  out[15] = 0;
  return out;
}
/**
 * Generates a perspective projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],
 * which matches WebGL/OpenGL's clip volume.
 * Passing null/undefined/no value for far will generate infinite projection matrix.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum, can be null or Infinity
 * @returns {mat4} out
 */

function perspectiveNO(out, fovy, aspect, near, far) {
  var f = 1.0 / Math.tan(fovy / 2),
      nf;
  out[0] = f / aspect;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = f;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[15] = 0;

  if (far != null && far !== Infinity) {
    nf = 1 / (near - far);
    out[10] = (far + near) * nf;
    out[14] = 2 * far * near * nf;
  } else {
    out[10] = -1;
    out[14] = -2 * near;
  }

  return out;
}
/**
 * Alias for {@link mat4.perspectiveNO}
 * @function
 */

var perspective = perspectiveNO;
/**
 * Generates a perspective projection matrix suitable for WebGPU with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],
 * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.
 * Passing null/undefined/no value for far will generate infinite projection matrix.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} fovy Vertical field of view in radians
 * @param {number} aspect Aspect ratio. typically viewport width/height
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum, can be null or Infinity
 * @returns {mat4} out
 */

function perspectiveZO(out, fovy, aspect, near, far) {
  var f = 1.0 / Math.tan(fovy / 2),
      nf;
  out[0] = f / aspect;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = f;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[11] = -1;
  out[12] = 0;
  out[13] = 0;
  out[15] = 0;

  if (far != null && far !== Infinity) {
    nf = 1 / (near - far);
    out[10] = far * nf;
    out[14] = far * near * nf;
  } else {
    out[10] = -1;
    out[14] = -near;
  }

  return out;
}
/**
 * Generates a perspective projection matrix with the given field of view.
 * This is primarily useful for generating projection matrices to be used
 * with the still experiemental WebVR API.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {Object} fov Object containing the following values: upDegrees, downDegrees, leftDegrees, rightDegrees
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function perspectiveFromFieldOfView(out, fov, near, far) {
  var upTan = Math.tan(fov.upDegrees * Math.PI / 180.0);
  var downTan = Math.tan(fov.downDegrees * Math.PI / 180.0);
  var leftTan = Math.tan(fov.leftDegrees * Math.PI / 180.0);
  var rightTan = Math.tan(fov.rightDegrees * Math.PI / 180.0);
  var xScale = 2.0 / (leftTan + rightTan);
  var yScale = 2.0 / (upTan + downTan);
  out[0] = xScale;
  out[1] = 0.0;
  out[2] = 0.0;
  out[3] = 0.0;
  out[4] = 0.0;
  out[5] = yScale;
  out[6] = 0.0;
  out[7] = 0.0;
  out[8] = -((leftTan - rightTan) * xScale * 0.5);
  out[9] = (upTan - downTan) * yScale * 0.5;
  out[10] = far / (near - far);
  out[11] = -1.0;
  out[12] = 0.0;
  out[13] = 0.0;
  out[14] = far * near / (near - far);
  out[15] = 0.0;
  return out;
}
/**
 * Generates a orthogonal projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [-1, 1],
 * which matches WebGL/OpenGL's clip volume.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function orthoNO(out, left, right, bottom, top, near, far) {
  var lr = 1 / (left - right);
  var bt = 1 / (bottom - top);
  var nf = 1 / (near - far);
  out[0] = -2 * lr;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = -2 * bt;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = 2 * nf;
  out[11] = 0;
  out[12] = (left + right) * lr;
  out[13] = (top + bottom) * bt;
  out[14] = (far + near) * nf;
  out[15] = 1;
  return out;
}
/**
 * Alias for {@link mat4.orthoNO}
 * @function
 */

var ortho = orthoNO;
/**
 * Generates a orthogonal projection matrix with the given bounds.
 * The near/far clip planes correspond to a normalized device coordinate Z range of [0, 1],
 * which matches WebGPU/Vulkan/DirectX/Metal's clip volume.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {number} left Left bound of the frustum
 * @param {number} right Right bound of the frustum
 * @param {number} bottom Bottom bound of the frustum
 * @param {number} top Top bound of the frustum
 * @param {number} near Near bound of the frustum
 * @param {number} far Far bound of the frustum
 * @returns {mat4} out
 */

function orthoZO(out, left, right, bottom, top, near, far) {
  var lr = 1 / (left - right);
  var bt = 1 / (bottom - top);
  var nf = 1 / (near - far);
  out[0] = -2 * lr;
  out[1] = 0;
  out[2] = 0;
  out[3] = 0;
  out[4] = 0;
  out[5] = -2 * bt;
  out[6] = 0;
  out[7] = 0;
  out[8] = 0;
  out[9] = 0;
  out[10] = nf;
  out[11] = 0;
  out[12] = (left + right) * lr;
  out[13] = (top + bottom) * bt;
  out[14] = near * nf;
  out[15] = 1;
  return out;
}
/**
 * Generates a look-at matrix with the given eye position, focal point, and up axis.
 * If you want a matrix that actually makes an object look at another object, you should use targetTo instead.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {ReadonlyVec3} eye Position of the viewer
 * @param {ReadonlyVec3} center Point the viewer is looking at
 * @param {ReadonlyVec3} up vec3 pointing up
 * @returns {mat4} out
 */

function lookAt$1(out, eye, center, up) {
  var x0, x1, x2, y0, y1, y2, z0, z1, z2, len;
  var eyex = eye[0];
  var eyey = eye[1];
  var eyez = eye[2];
  var upx = up[0];
  var upy = up[1];
  var upz = up[2];
  var centerx = center[0];
  var centery = center[1];
  var centerz = center[2];

  if (Math.abs(eyex - centerx) < EPSILON && Math.abs(eyey - centery) < EPSILON && Math.abs(eyez - centerz) < EPSILON) {
    return identity$2(out);
  }

  z0 = eyex - centerx;
  z1 = eyey - centery;
  z2 = eyez - centerz;
  len = 1 / Math.hypot(z0, z1, z2);
  z0 *= len;
  z1 *= len;
  z2 *= len;
  x0 = upy * z2 - upz * z1;
  x1 = upz * z0 - upx * z2;
  x2 = upx * z1 - upy * z0;
  len = Math.hypot(x0, x1, x2);

  if (!len) {
    x0 = 0;
    x1 = 0;
    x2 = 0;
  } else {
    len = 1 / len;
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  y0 = z1 * x2 - z2 * x1;
  y1 = z2 * x0 - z0 * x2;
  y2 = z0 * x1 - z1 * x0;
  len = Math.hypot(y0, y1, y2);

  if (!len) {
    y0 = 0;
    y1 = 0;
    y2 = 0;
  } else {
    len = 1 / len;
    y0 *= len;
    y1 *= len;
    y2 *= len;
  }

  out[0] = x0;
  out[1] = y0;
  out[2] = z0;
  out[3] = 0;
  out[4] = x1;
  out[5] = y1;
  out[6] = z1;
  out[7] = 0;
  out[8] = x2;
  out[9] = y2;
  out[10] = z2;
  out[11] = 0;
  out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);
  out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);
  out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);
  out[15] = 1;
  return out;
}
/**
 * Generates a matrix that makes something look at something else.
 *
 * @param {mat4} out mat4 frustum matrix will be written into
 * @param {ReadonlyVec3} eye Position of the viewer
 * @param {ReadonlyVec3} center Point the viewer is looking at
 * @param {ReadonlyVec3} up vec3 pointing up
 * @returns {mat4} out
 */

function targetTo(out, eye, target, up) {
  var eyex = eye[0],
      eyey = eye[1],
      eyez = eye[2],
      upx = up[0],
      upy = up[1],
      upz = up[2];
  var z0 = eyex - target[0],
      z1 = eyey - target[1],
      z2 = eyez - target[2];
  var len = z0 * z0 + z1 * z1 + z2 * z2;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    z0 *= len;
    z1 *= len;
    z2 *= len;
  }

  var x0 = upy * z2 - upz * z1,
      x1 = upz * z0 - upx * z2,
      x2 = upx * z1 - upy * z0;
  len = x0 * x0 + x1 * x1 + x2 * x2;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
    x0 *= len;
    x1 *= len;
    x2 *= len;
  }

  out[0] = x0;
  out[1] = x1;
  out[2] = x2;
  out[3] = 0;
  out[4] = z1 * x2 - z2 * x1;
  out[5] = z2 * x0 - z0 * x2;
  out[6] = z0 * x1 - z1 * x0;
  out[7] = 0;
  out[8] = z0;
  out[9] = z1;
  out[10] = z2;
  out[11] = 0;
  out[12] = eyex;
  out[13] = eyey;
  out[14] = eyez;
  out[15] = 1;
  return out;
}
/**
 * Returns a string representation of a mat4
 *
 * @param {ReadonlyMat4} a matrix to represent as a string
 * @returns {String} string representation of the matrix
 */

function str$5(a) {
  return "mat4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ", " + a[8] + ", " + a[9] + ", " + a[10] + ", " + a[11] + ", " + a[12] + ", " + a[13] + ", " + a[14] + ", " + a[15] + ")";
}
/**
 * Returns Frobenius norm of a mat4
 *
 * @param {ReadonlyMat4} a the matrix to calculate Frobenius norm of
 * @returns {Number} Frobenius norm
 */

function frob(a) {
  return Math.hypot(a[0], a[1], a[2], a[3], a[4], a[5], a[6], a[7], a[8], a[9], a[10], a[11], a[12], a[13], a[14], a[15]);
}
/**
 * Adds two mat4's
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function add$5(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  out[8] = a[8] + b[8];
  out[9] = a[9] + b[9];
  out[10] = a[10] + b[10];
  out[11] = a[11] + b[11];
  out[12] = a[12] + b[12];
  out[13] = a[13] + b[13];
  out[14] = a[14] + b[14];
  out[15] = a[15] + b[15];
  return out;
}
/**
 * Subtracts matrix b from matrix a
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @returns {mat4} out
 */

function subtract$3(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  out[4] = a[4] - b[4];
  out[5] = a[5] - b[5];
  out[6] = a[6] - b[6];
  out[7] = a[7] - b[7];
  out[8] = a[8] - b[8];
  out[9] = a[9] - b[9];
  out[10] = a[10] - b[10];
  out[11] = a[11] - b[11];
  out[12] = a[12] - b[12];
  out[13] = a[13] - b[13];
  out[14] = a[14] - b[14];
  out[15] = a[15] - b[15];
  return out;
}
/**
 * Multiply each element of the matrix by a scalar.
 *
 * @param {mat4} out the receiving matrix
 * @param {ReadonlyMat4} a the matrix to scale
 * @param {Number} b amount to scale the matrix's elements by
 * @returns {mat4} out
 */

function multiplyScalar(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  out[8] = a[8] * b;
  out[9] = a[9] * b;
  out[10] = a[10] * b;
  out[11] = a[11] * b;
  out[12] = a[12] * b;
  out[13] = a[13] * b;
  out[14] = a[14] * b;
  out[15] = a[15] * b;
  return out;
}
/**
 * Adds two mat4's after multiplying each element of the second operand by a scalar value.
 *
 * @param {mat4} out the receiving vector
 * @param {ReadonlyMat4} a the first operand
 * @param {ReadonlyMat4} b the second operand
 * @param {Number} scale the amount to scale b's elements by before adding
 * @returns {mat4} out
 */

function multiplyScalarAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  out[4] = a[4] + b[4] * scale;
  out[5] = a[5] + b[5] * scale;
  out[6] = a[6] + b[6] * scale;
  out[7] = a[7] + b[7] * scale;
  out[8] = a[8] + b[8] * scale;
  out[9] = a[9] + b[9] * scale;
  out[10] = a[10] + b[10] * scale;
  out[11] = a[11] + b[11] * scale;
  out[12] = a[12] + b[12] * scale;
  out[13] = a[13] + b[13] * scale;
  out[14] = a[14] + b[14] * scale;
  out[15] = a[15] + b[15] * scale;
  return out;
}
/**
 * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyMat4} a The first matrix.
 * @param {ReadonlyMat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function exactEquals$5(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7] && a[8] === b[8] && a[9] === b[9] && a[10] === b[10] && a[11] === b[11] && a[12] === b[12] && a[13] === b[13] && a[14] === b[14] && a[15] === b[15];
}
/**
 * Returns whether or not the matrices have approximately the same elements in the same position.
 *
 * @param {ReadonlyMat4} a The first matrix.
 * @param {ReadonlyMat4} b The second matrix.
 * @returns {Boolean} True if the matrices are equal, false otherwise.
 */

function equals$5(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var a8 = a[8],
      a9 = a[9],
      a10 = a[10],
      a11 = a[11];
  var a12 = a[12],
      a13 = a[13],
      a14 = a[14],
      a15 = a[15];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  var b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  var b8 = b[8],
      b9 = b[9],
      b10 = b[10],
      b11 = b[11];
  var b12 = b[12],
      b13 = b[13],
      b14 = b[14],
      b15 = b[15];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7)) && Math.abs(a8 - b8) <= EPSILON * Math.max(1.0, Math.abs(a8), Math.abs(b8)) && Math.abs(a9 - b9) <= EPSILON * Math.max(1.0, Math.abs(a9), Math.abs(b9)) && Math.abs(a10 - b10) <= EPSILON * Math.max(1.0, Math.abs(a10), Math.abs(b10)) && Math.abs(a11 - b11) <= EPSILON * Math.max(1.0, Math.abs(a11), Math.abs(b11)) && Math.abs(a12 - b12) <= EPSILON * Math.max(1.0, Math.abs(a12), Math.abs(b12)) && Math.abs(a13 - b13) <= EPSILON * Math.max(1.0, Math.abs(a13), Math.abs(b13)) && Math.abs(a14 - b14) <= EPSILON * Math.max(1.0, Math.abs(a14), Math.abs(b14)) && Math.abs(a15 - b15) <= EPSILON * Math.max(1.0, Math.abs(a15), Math.abs(b15));
}
/**
 * Alias for {@link mat4.multiply}
 * @function
 */

var mul$5 = multiply$5;
/**
 * Alias for {@link mat4.subtract}
 * @function
 */

var sub$3 = subtract$3;

var mat4 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$5,
    clone: clone$5,
    copy: copy$5,
    fromValues: fromValues$5,
    set: set$5,
    identity: identity$2,
    transpose: transpose,
    invert: invert$2,
    adjoint: adjoint,
    determinant: determinant,
    multiply: multiply$5,
    translate: translate$1,
    scale: scale$5,
    rotate: rotate$1,
    rotateX: rotateX$3,
    rotateY: rotateY$3,
    rotateZ: rotateZ$3,
    fromTranslation: fromTranslation$1,
    fromScaling: fromScaling,
    fromRotation: fromRotation$1,
    fromXRotation: fromXRotation,
    fromYRotation: fromYRotation,
    fromZRotation: fromZRotation,
    fromRotationTranslation: fromRotationTranslation$1,
    fromQuat2: fromQuat2,
    getTranslation: getTranslation$1,
    getScaling: getScaling,
    getRotation: getRotation,
    fromRotationTranslationScale: fromRotationTranslationScale,
    fromRotationTranslationScaleOrigin: fromRotationTranslationScaleOrigin,
    fromQuat: fromQuat,
    frustum: frustum,
    perspectiveNO: perspectiveNO,
    perspective: perspective,
    perspectiveZO: perspectiveZO,
    perspectiveFromFieldOfView: perspectiveFromFieldOfView,
    orthoNO: orthoNO,
    ortho: ortho,
    orthoZO: orthoZO,
    lookAt: lookAt$1,
    targetTo: targetTo,
    str: str$5,
    frob: frob,
    add: add$5,
    subtract: subtract$3,
    multiplyScalar: multiplyScalar,
    multiplyScalarAndAdd: multiplyScalarAndAdd,
    exactEquals: exactEquals$5,
    equals: equals$5,
    mul: mul$5,
    sub: sub$3
});

/**
 * 3 Dimensional Vector
 * @module vec3
 */

/**
 * Creates a new, empty vec3
 *
 * @returns {vec3} a new 3D vector
 */

function create$4() {
  var out = new ARRAY_TYPE(3);

  if (ARRAY_TYPE != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }

  return out;
}
/**
 * Creates a new vec3 initialized with values from an existing vector
 *
 * @param {ReadonlyVec3} a vector to clone
 * @returns {vec3} a new 3D vector
 */

function clone$4(a) {
  var out = new ARRAY_TYPE(3);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Calculates the length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate length of
 * @returns {Number} length of a
 */

function length$4(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return Math.hypot(x, y, z);
}
/**
 * Creates a new vec3 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} a new 3D vector
 */

function fromValues$4(x, y, z) {
  var out = new ARRAY_TYPE(3);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Copy the values from one vec3 to another
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the source vector
 * @returns {vec3} out
 */

function copy$4(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  return out;
}
/**
 * Set the components of a vec3 to the given values
 *
 * @param {vec3} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @returns {vec3} out
 */

function set$4(out, x, y, z) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  return out;
}
/**
 * Adds two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function add$4(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function subtract$2(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  return out;
}
/**
 * Multiplies two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function multiply$4(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  return out;
}
/**
 * Divides two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function divide$2(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  return out;
}
/**
 * Math.ceil the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to ceil
 * @returns {vec3} out
 */

function ceil$2(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  return out;
}
/**
 * Math.floor the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to floor
 * @returns {vec3} out
 */

function floor$2(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  return out;
}
/**
 * Returns the minimum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function min$2(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  return out;
}
/**
 * Returns the maximum of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function max$2(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  return out;
}
/**
 * Math.round the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to round
 * @returns {vec3} out
 */

function round$2(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  return out;
}
/**
 * Scales a vec3 by a scalar number
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec3} out
 */

function scale$4(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  return out;
}
/**
 * Adds two vec3's after scaling the second operand by a scalar value
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec3} out
 */

function scaleAndAdd$2(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} distance between a and b
 */

function distance$2(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return Math.hypot(x, y, z);
}
/**
 * Calculates the squared euclidian distance between two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance$2(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  return x * x + y * y + z * z;
}
/**
 * Calculates the squared length of a vec3
 *
 * @param {ReadonlyVec3} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength$4(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  return x * x + y * y + z * z;
}
/**
 * Negates the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to negate
 * @returns {vec3} out
 */

function negate$2(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  return out;
}
/**
 * Returns the inverse of the components of a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to invert
 * @returns {vec3} out
 */

function inverse$2(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  return out;
}
/**
 * Normalize a vec3
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a vector to normalize
 * @returns {vec3} out
 */

function normalize$4(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var len = x * x + y * y + z * z;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  out[2] = a[2] * len;
  return out;
}
/**
 * Calculates the dot product of two vec3's
 *
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot$4(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];
}
/**
 * Computes the cross product of two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @returns {vec3} out
 */

function cross$2(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2];
  var bx = b[0],
      by = b[1],
      bz = b[2];
  out[0] = ay * bz - az * by;
  out[1] = az * bx - ax * bz;
  out[2] = ax * by - ay * bx;
  return out;
}
/**
 * Performs a linear interpolation between two vec3's
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function lerp$4(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  return out;
}
/**
 * Performs a hermite interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function hermite(out, a, b, c, d, t) {
  var factorTimes2 = t * t;
  var factor1 = factorTimes2 * (2 * t - 3) + 1;
  var factor2 = factorTimes2 * (t - 2) + t;
  var factor3 = factorTimes2 * (t - 1);
  var factor4 = factorTimes2 * (3 - 2 * t);
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Performs a bezier interpolation with two control points
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the first operand
 * @param {ReadonlyVec3} b the second operand
 * @param {ReadonlyVec3} c the third operand
 * @param {ReadonlyVec3} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec3} out
 */

function bezier(out, a, b, c, d, t) {
  var inverseFactor = 1 - t;
  var inverseFactorTimesTwo = inverseFactor * inverseFactor;
  var factorTimes2 = t * t;
  var factor1 = inverseFactorTimesTwo * inverseFactor;
  var factor2 = 3 * t * inverseFactorTimesTwo;
  var factor3 = 3 * factorTimes2 * inverseFactor;
  var factor4 = factorTimes2 * t;
  out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;
  out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;
  out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec3} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec3} out
 */

function random$3(out, scale) {
  scale = scale || 1.0;
  var r = RANDOM() * 2.0 * Math.PI;
  var z = RANDOM() * 2.0 - 1.0;
  var zScale = Math.sqrt(1.0 - z * z) * scale;
  out[0] = Math.cos(r) * zScale;
  out[1] = Math.sin(r) * zScale;
  out[2] = z * scale;
  return out;
}
/**
 * Transforms the vec3 with a mat4.
 * 4th vector component is implicitly '1'
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec3} out
 */

function transformMat4$2(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var w = m[3] * x + m[7] * y + m[11] * z + m[15];
  w = w || 1.0;
  out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;
  out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;
  out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;
  return out;
}
/**
 * Transforms the vec3 with a mat3.
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyMat3} m the 3x3 matrix to transform with
 * @returns {vec3} out
 */

function transformMat3$1(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x * m[0] + y * m[3] + z * m[6];
  out[1] = x * m[1] + y * m[4] + z * m[7];
  out[2] = x * m[2] + y * m[5] + z * m[8];
  return out;
}
/**
 * Transforms the vec3 with a quat
 * Can also be used for dual quaternions. (Multiply it with the real part)
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec3} a the vector to transform
 * @param {ReadonlyQuat} q quaternion to transform with
 * @returns {vec3} out
 */

function transformQuat$1(out, a, q) {
  // benchmarks: https://jsperf.com/quaternion-transform-vec3-implementations-fixed
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3];
  var x = a[0],
      y = a[1],
      z = a[2]; // var qvec = [qx, qy, qz];
  // var uv = vec3.cross([], qvec, a);

  var uvx = qy * z - qz * y,
      uvy = qz * x - qx * z,
      uvz = qx * y - qy * x; // var uuv = vec3.cross([], qvec, uv);

  var uuvx = qy * uvz - qz * uvy,
      uuvy = qz * uvx - qx * uvz,
      uuvz = qx * uvy - qy * uvx; // vec3.scale(uv, uv, 2 * w);

  var w2 = qw * 2;
  uvx *= w2;
  uvy *= w2;
  uvz *= w2; // vec3.scale(uuv, uuv, 2);

  uuvx *= 2;
  uuvy *= 2;
  uuvz *= 2; // return vec3.add(out, a, vec3.add(out, uv, uuv));

  out[0] = x + uvx + uuvx;
  out[1] = y + uvy + uuvy;
  out[2] = z + uvz + uuvz;
  return out;
}
/**
 * Rotate a 3D vector around the x-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateX$2(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0];
  r[1] = p[1] * Math.cos(rad) - p[2] * Math.sin(rad);
  r[2] = p[1] * Math.sin(rad) + p[2] * Math.cos(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the y-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateY$2(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[2] * Math.sin(rad) + p[0] * Math.cos(rad);
  r[1] = p[1];
  r[2] = p[2] * Math.cos(rad) - p[0] * Math.sin(rad); //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Rotate a 3D vector around the z-axis
 * @param {vec3} out The receiving vec3
 * @param {ReadonlyVec3} a The vec3 point to rotate
 * @param {ReadonlyVec3} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec3} out
 */

function rotateZ$2(out, a, b, rad) {
  var p = [],
      r = []; //Translate point to the origin

  p[0] = a[0] - b[0];
  p[1] = a[1] - b[1];
  p[2] = a[2] - b[2]; //perform rotation

  r[0] = p[0] * Math.cos(rad) - p[1] * Math.sin(rad);
  r[1] = p[0] * Math.sin(rad) + p[1] * Math.cos(rad);
  r[2] = p[2]; //translate to correct position

  out[0] = r[0] + b[0];
  out[1] = r[1] + b[1];
  out[2] = r[2] + b[2];
  return out;
}
/**
 * Get the angle between two 3D vectors
 * @param {ReadonlyVec3} a The first operand
 * @param {ReadonlyVec3} b The second operand
 * @returns {Number} The angle in radians
 */

function angle$1(a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      bx = b[0],
      by = b[1],
      bz = b[2],
      mag1 = Math.sqrt(ax * ax + ay * ay + az * az),
      mag2 = Math.sqrt(bx * bx + by * by + bz * bz),
      mag = mag1 * mag2,
      cosine = mag && dot$4(a, b) / mag;
  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec3 to zero
 *
 * @param {vec3} out the receiving vector
 * @returns {vec3} out
 */

function zero$2(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  out[2] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec3} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str$4(a) {
  return "vec3(" + a[0] + ", " + a[1] + ", " + a[2] + ")";
}
/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals$4(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec3} a The first vector.
 * @param {ReadonlyVec3} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals$4(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2));
}
/**
 * Alias for {@link vec3.subtract}
 * @function
 */

var sub$2 = subtract$2;
/**
 * Alias for {@link vec3.multiply}
 * @function
 */

var mul$4 = multiply$4;
/**
 * Alias for {@link vec3.divide}
 * @function
 */

var div$2 = divide$2;
/**
 * Alias for {@link vec3.distance}
 * @function
 */

var dist$2 = distance$2;
/**
 * Alias for {@link vec3.squaredDistance}
 * @function
 */

var sqrDist$2 = squaredDistance$2;
/**
 * Alias for {@link vec3.length}
 * @function
 */

var len$4 = length$4;
/**
 * Alias for {@link vec3.squaredLength}
 * @function
 */

var sqrLen$4 = squaredLength$4;
/**
 * Perform some operation over an array of vec3s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec3. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec3s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach$2 = function () {
  var vec = create$4();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 3;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
    }

    return a;
  };
}();

var vec3 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$4,
    clone: clone$4,
    length: length$4,
    fromValues: fromValues$4,
    copy: copy$4,
    set: set$4,
    add: add$4,
    subtract: subtract$2,
    multiply: multiply$4,
    divide: divide$2,
    ceil: ceil$2,
    floor: floor$2,
    min: min$2,
    max: max$2,
    round: round$2,
    scale: scale$4,
    scaleAndAdd: scaleAndAdd$2,
    distance: distance$2,
    squaredDistance: squaredDistance$2,
    squaredLength: squaredLength$4,
    negate: negate$2,
    inverse: inverse$2,
    normalize: normalize$4,
    dot: dot$4,
    cross: cross$2,
    lerp: lerp$4,
    hermite: hermite,
    bezier: bezier,
    random: random$3,
    transformMat4: transformMat4$2,
    transformMat3: transformMat3$1,
    transformQuat: transformQuat$1,
    rotateX: rotateX$2,
    rotateY: rotateY$2,
    rotateZ: rotateZ$2,
    angle: angle$1,
    zero: zero$2,
    str: str$4,
    exactEquals: exactEquals$4,
    equals: equals$4,
    sub: sub$2,
    mul: mul$4,
    div: div$2,
    dist: dist$2,
    sqrDist: sqrDist$2,
    len: len$4,
    sqrLen: sqrLen$4,
    forEach: forEach$2
});

/**
 * 4 Dimensional Vector
 * @module vec4
 */

/**
 * Creates a new, empty vec4
 *
 * @returns {vec4} a new 4D vector
 */

function create$3() {
  var out = new ARRAY_TYPE(4);

  if (ARRAY_TYPE != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
    out[3] = 0;
  }

  return out;
}
/**
 * Creates a new vec4 initialized with values from an existing vector
 *
 * @param {ReadonlyVec4} a vector to clone
 * @returns {vec4} a new 4D vector
 */

function clone$3(a) {
  var out = new ARRAY_TYPE(4);
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Creates a new vec4 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} a new 4D vector
 */

function fromValues$3(x, y, z, w) {
  var out = new ARRAY_TYPE(4);
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}
/**
 * Copy the values from one vec4 to another
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the source vector
 * @returns {vec4} out
 */

function copy$3(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  return out;
}
/**
 * Set the components of a vec4 to the given values
 *
 * @param {vec4} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {vec4} out
 */

function set$3(out, x, y, z, w) {
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = w;
  return out;
}
/**
 * Adds two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function add$3(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function subtract$1(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  out[2] = a[2] - b[2];
  out[3] = a[3] - b[3];
  return out;
}
/**
 * Multiplies two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function multiply$3(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  out[2] = a[2] * b[2];
  out[3] = a[3] * b[3];
  return out;
}
/**
 * Divides two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function divide$1(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  out[2] = a[2] / b[2];
  out[3] = a[3] / b[3];
  return out;
}
/**
 * Math.ceil the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to ceil
 * @returns {vec4} out
 */

function ceil$1(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  out[2] = Math.ceil(a[2]);
  out[3] = Math.ceil(a[3]);
  return out;
}
/**
 * Math.floor the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to floor
 * @returns {vec4} out
 */

function floor$1(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  out[2] = Math.floor(a[2]);
  out[3] = Math.floor(a[3]);
  return out;
}
/**
 * Returns the minimum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function min$1(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  out[2] = Math.min(a[2], b[2]);
  out[3] = Math.min(a[3], b[3]);
  return out;
}
/**
 * Returns the maximum of two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {vec4} out
 */

function max$1(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  out[2] = Math.max(a[2], b[2]);
  out[3] = Math.max(a[3], b[3]);
  return out;
}
/**
 * Math.round the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to round
 * @returns {vec4} out
 */

function round$1(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  out[2] = Math.round(a[2]);
  out[3] = Math.round(a[3]);
  return out;
}
/**
 * Scales a vec4 by a scalar number
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec4} out
 */

function scale$3(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  return out;
}
/**
 * Adds two vec4's after scaling the second operand by a scalar value
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec4} out
 */

function scaleAndAdd$1(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  out[2] = a[2] + b[2] * scale;
  out[3] = a[3] + b[3] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} distance between a and b
 */

function distance$1(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return Math.hypot(x, y, z, w);
}
/**
 * Calculates the squared euclidian distance between two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance$1(a, b) {
  var x = b[0] - a[0];
  var y = b[1] - a[1];
  var z = b[2] - a[2];
  var w = b[3] - a[3];
  return x * x + y * y + z * z + w * w;
}
/**
 * Calculates the length of a vec4
 *
 * @param {ReadonlyVec4} a vector to calculate length of
 * @returns {Number} length of a
 */

function length$3(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return Math.hypot(x, y, z, w);
}
/**
 * Calculates the squared length of a vec4
 *
 * @param {ReadonlyVec4} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength$3(a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  return x * x + y * y + z * z + w * w;
}
/**
 * Negates the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to negate
 * @returns {vec4} out
 */

function negate$1(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = -a[3];
  return out;
}
/**
 * Returns the inverse of the components of a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to invert
 * @returns {vec4} out
 */

function inverse$1(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  out[2] = 1.0 / a[2];
  out[3] = 1.0 / a[3];
  return out;
}
/**
 * Normalize a vec4
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a vector to normalize
 * @returns {vec4} out
 */

function normalize$3(out, a) {
  var x = a[0];
  var y = a[1];
  var z = a[2];
  var w = a[3];
  var len = x * x + y * y + z * z + w * w;

  if (len > 0) {
    len = 1 / Math.sqrt(len);
  }

  out[0] = x * len;
  out[1] = y * len;
  out[2] = z * len;
  out[3] = w * len;
  return out;
}
/**
 * Calculates the dot product of two vec4's
 *
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot$3(a, b) {
  return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];
}
/**
 * Returns the cross-product of three vectors in a 4-dimensional space
 *
 * @param {ReadonlyVec4} result the receiving vector
 * @param {ReadonlyVec4} U the first vector
 * @param {ReadonlyVec4} V the second vector
 * @param {ReadonlyVec4} W the third vector
 * @returns {vec4} result
 */

function cross$1(out, u, v, w) {
  var A = v[0] * w[1] - v[1] * w[0],
      B = v[0] * w[2] - v[2] * w[0],
      C = v[0] * w[3] - v[3] * w[0],
      D = v[1] * w[2] - v[2] * w[1],
      E = v[1] * w[3] - v[3] * w[1],
      F = v[2] * w[3] - v[3] * w[2];
  var G = u[0];
  var H = u[1];
  var I = u[2];
  var J = u[3];
  out[0] = H * F - I * E + J * D;
  out[1] = -(G * F) + I * C - J * B;
  out[2] = G * E - H * C + J * A;
  out[3] = -(G * D) + H * B - I * A;
  return out;
}
/**
 * Performs a linear interpolation between two vec4's
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the first operand
 * @param {ReadonlyVec4} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec4} out
 */

function lerp$3(out, a, b, t) {
  var ax = a[0];
  var ay = a[1];
  var az = a[2];
  var aw = a[3];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  out[2] = az + t * (b[2] - az);
  out[3] = aw + t * (b[3] - aw);
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec4} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec4} out
 */

function random$2(out, scale) {
  scale = scale || 1.0; // Marsaglia, George. Choosing a Point from the Surface of a
  // Sphere. Ann. Math. Statist. 43 (1972), no. 2, 645--646.
  // http://projecteuclid.org/euclid.aoms/1177692644;

  var v1, v2, v3, v4;
  var s1, s2;

  do {
    v1 = RANDOM() * 2 - 1;
    v2 = RANDOM() * 2 - 1;
    s1 = v1 * v1 + v2 * v2;
  } while (s1 >= 1);

  do {
    v3 = RANDOM() * 2 - 1;
    v4 = RANDOM() * 2 - 1;
    s2 = v3 * v3 + v4 * v4;
  } while (s2 >= 1);

  var d = Math.sqrt((1 - s1) / s2);
  out[0] = scale * v1;
  out[1] = scale * v2;
  out[2] = scale * v3 * d;
  out[3] = scale * v4 * d;
  return out;
}
/**
 * Transforms the vec4 with a mat4.
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec4} out
 */

function transformMat4$1(out, a, m) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;
  out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;
  out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;
  out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;
  return out;
}
/**
 * Transforms the vec4 with a quat
 *
 * @param {vec4} out the receiving vector
 * @param {ReadonlyVec4} a the vector to transform
 * @param {ReadonlyQuat} q quaternion to transform with
 * @returns {vec4} out
 */

function transformQuat(out, a, q) {
  var x = a[0],
      y = a[1],
      z = a[2];
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3]; // calculate quat * vec

  var ix = qw * x + qy * z - qz * y;
  var iy = qw * y + qz * x - qx * z;
  var iz = qw * z + qx * y - qy * x;
  var iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat

  out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;
  out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;
  out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;
  out[3] = a[3];
  return out;
}
/**
 * Set the components of a vec4 to zero
 *
 * @param {vec4} out the receiving vector
 * @returns {vec4} out
 */

function zero$1(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  out[2] = 0.0;
  out[3] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec4} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str$3(a) {
  return "vec4(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec4} a The first vector.
 * @param {ReadonlyVec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals$3(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec4} a The first vector.
 * @param {ReadonlyVec4} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals$3(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));
}
/**
 * Alias for {@link vec4.subtract}
 * @function
 */

var sub$1 = subtract$1;
/**
 * Alias for {@link vec4.multiply}
 * @function
 */

var mul$3 = multiply$3;
/**
 * Alias for {@link vec4.divide}
 * @function
 */

var div$1 = divide$1;
/**
 * Alias for {@link vec4.distance}
 * @function
 */

var dist$1 = distance$1;
/**
 * Alias for {@link vec4.squaredDistance}
 * @function
 */

var sqrDist$1 = squaredDistance$1;
/**
 * Alias for {@link vec4.length}
 * @function
 */

var len$3 = length$3;
/**
 * Alias for {@link vec4.squaredLength}
 * @function
 */

var sqrLen$3 = squaredLength$3;
/**
 * Perform some operation over an array of vec4s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec4. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec4s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach$1 = function () {
  var vec = create$3();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 4;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      vec[2] = a[i + 2];
      vec[3] = a[i + 3];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
      a[i + 2] = vec[2];
      a[i + 3] = vec[3];
    }

    return a;
  };
}();

var vec4 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$3,
    clone: clone$3,
    fromValues: fromValues$3,
    copy: copy$3,
    set: set$3,
    add: add$3,
    subtract: subtract$1,
    multiply: multiply$3,
    divide: divide$1,
    ceil: ceil$1,
    floor: floor$1,
    min: min$1,
    max: max$1,
    round: round$1,
    scale: scale$3,
    scaleAndAdd: scaleAndAdd$1,
    distance: distance$1,
    squaredDistance: squaredDistance$1,
    length: length$3,
    squaredLength: squaredLength$3,
    negate: negate$1,
    inverse: inverse$1,
    normalize: normalize$3,
    dot: dot$3,
    cross: cross$1,
    lerp: lerp$3,
    random: random$2,
    transformMat4: transformMat4$1,
    transformQuat: transformQuat,
    zero: zero$1,
    str: str$3,
    exactEquals: exactEquals$3,
    equals: equals$3,
    sub: sub$1,
    mul: mul$3,
    div: div$1,
    dist: dist$1,
    sqrDist: sqrDist$1,
    len: len$3,
    sqrLen: sqrLen$3,
    forEach: forEach$1
});

/**
 * Quaternion
 * @module quat
 */

/**
 * Creates a new identity quat
 *
 * @returns {quat} a new quaternion
 */

function create$2() {
  var out = new ARRAY_TYPE(4);

  if (ARRAY_TYPE != Float32Array) {
    out[0] = 0;
    out[1] = 0;
    out[2] = 0;
  }

  out[3] = 1;
  return out;
}
/**
 * Set a quat to the identity quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */

function identity$1(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  return out;
}
/**
 * Sets a quat from the given angle and rotation axis,
 * then returns it.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyVec3} axis the axis around which to rotate
 * @param {Number} rad the angle in radians
 * @returns {quat} out
 **/

function setAxisAngle(out, axis, rad) {
  rad = rad * 0.5;
  var s = Math.sin(rad);
  out[0] = s * axis[0];
  out[1] = s * axis[1];
  out[2] = s * axis[2];
  out[3] = Math.cos(rad);
  return out;
}
/**
 * Gets the rotation axis and angle for a given
 *  quaternion. If a quaternion is created with
 *  setAxisAngle, this method will return the same
 *  values as providied in the original parameter list
 *  OR functionally equivalent values.
 * Example: The quaternion formed by axis [0, 0, 1] and
 *  angle -90 is the same as the quaternion formed by
 *  [0, 0, 1] and 270. This method favors the latter.
 * @param  {vec3} out_axis  Vector receiving the axis of rotation
 * @param  {ReadonlyQuat} q     Quaternion to be decomposed
 * @return {Number}     Angle, in radians, of the rotation
 */

function getAxisAngle(out_axis, q) {
  var rad = Math.acos(q[3]) * 2.0;
  var s = Math.sin(rad / 2.0);

  if (s > EPSILON) {
    out_axis[0] = q[0] / s;
    out_axis[1] = q[1] / s;
    out_axis[2] = q[2] / s;
  } else {
    // If s is zero, return any axis (no rotation - axis does not matter)
    out_axis[0] = 1;
    out_axis[1] = 0;
    out_axis[2] = 0;
  }

  return rad;
}
/**
 * Gets the angular distance between two unit quaternions
 *
 * @param  {ReadonlyQuat} a     Origin unit quaternion
 * @param  {ReadonlyQuat} b     Destination unit quaternion
 * @return {Number}     Angle, in radians, between the two quaternions
 */

function getAngle(a, b) {
  var dotproduct = dot$2(a, b);
  return Math.acos(2 * dotproduct * dotproduct - 1);
}
/**
 * Multiplies two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {quat} out
 */

function multiply$2(out, a, b) {
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];
  out[0] = ax * bw + aw * bx + ay * bz - az * by;
  out[1] = ay * bw + aw * by + az * bx - ax * bz;
  out[2] = az * bw + aw * bz + ax * by - ay * bx;
  out[3] = aw * bw - ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the X axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateX$1(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw + aw * bx;
  out[1] = ay * bw + az * bx;
  out[2] = az * bw - ay * bx;
  out[3] = aw * bw - ax * bx;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the Y axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateY$1(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var by = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw - az * by;
  out[1] = ay * bw + aw * by;
  out[2] = az * bw + ax * by;
  out[3] = aw * bw - ay * by;
  return out;
}
/**
 * Rotates a quaternion by the given angle about the Z axis
 *
 * @param {quat} out quat receiving operation result
 * @param {ReadonlyQuat} a quat to rotate
 * @param {number} rad angle (in radians) to rotate
 * @returns {quat} out
 */

function rotateZ$1(out, a, rad) {
  rad *= 0.5;
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bz = Math.sin(rad),
      bw = Math.cos(rad);
  out[0] = ax * bw + ay * bz;
  out[1] = ay * bw - ax * bz;
  out[2] = az * bw + aw * bz;
  out[3] = aw * bw - az * bz;
  return out;
}
/**
 * Calculates the W component of a quat from the X, Y, and Z components.
 * Assumes that quaternion is 1 unit in length.
 * Any existing W component will be ignored.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate W component of
 * @returns {quat} out
 */

function calculateW(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2];
  out[0] = x;
  out[1] = y;
  out[2] = z;
  out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));
  return out;
}
/**
 * Calculate the exponential of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @returns {quat} out
 */

function exp(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  var r = Math.sqrt(x * x + y * y + z * z);
  var et = Math.exp(w);
  var s = r > 0 ? et * Math.sin(r) / r : 0;
  out[0] = x * s;
  out[1] = y * s;
  out[2] = z * s;
  out[3] = et * Math.cos(r);
  return out;
}
/**
 * Calculate the natural logarithm of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @returns {quat} out
 */

function ln(out, a) {
  var x = a[0],
      y = a[1],
      z = a[2],
      w = a[3];
  var r = Math.sqrt(x * x + y * y + z * z);
  var t = r > 0 ? Math.atan2(r, w) / r : 0;
  out[0] = x * t;
  out[1] = y * t;
  out[2] = z * t;
  out[3] = 0.5 * Math.log(x * x + y * y + z * z + w * w);
  return out;
}
/**
 * Calculate the scalar power of a unit quaternion.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate the exponential of
 * @param {Number} b amount to scale the quaternion by
 * @returns {quat} out
 */

function pow(out, a, b) {
  ln(out, a);
  scale$2(out, out, b);
  exp(out, out);
  return out;
}
/**
 * Performs a spherical linear interpolation between two quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */

function slerp(out, a, b, t) {
  // benchmarks:
  //    http://jsperf.com/quaternion-slerp-implementations
  var ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  var bx = b[0],
      by = b[1],
      bz = b[2],
      bw = b[3];
  var omega, cosom, sinom, scale0, scale1; // calc cosine

  cosom = ax * bx + ay * by + az * bz + aw * bw; // adjust signs (if necessary)

  if (cosom < 0.0) {
    cosom = -cosom;
    bx = -bx;
    by = -by;
    bz = -bz;
    bw = -bw;
  } // calculate coefficients


  if (1.0 - cosom > EPSILON) {
    // standard case (slerp)
    omega = Math.acos(cosom);
    sinom = Math.sin(omega);
    scale0 = Math.sin((1.0 - t) * omega) / sinom;
    scale1 = Math.sin(t * omega) / sinom;
  } else {
    // "from" and "to" quaternions are very close
    //  ... so we can do a linear interpolation
    scale0 = 1.0 - t;
    scale1 = t;
  } // calculate final values


  out[0] = scale0 * ax + scale1 * bx;
  out[1] = scale0 * ay + scale1 * by;
  out[2] = scale0 * az + scale1 * bz;
  out[3] = scale0 * aw + scale1 * bw;
  return out;
}
/**
 * Generates a random unit quaternion
 *
 * @param {quat} out the receiving quaternion
 * @returns {quat} out
 */

function random$1(out) {
  // Implementation of http://planning.cs.uiuc.edu/node198.html
  // TODO: Calling random 3 times is probably not the fastest solution
  var u1 = RANDOM();
  var u2 = RANDOM();
  var u3 = RANDOM();
  var sqrt1MinusU1 = Math.sqrt(1 - u1);
  var sqrtU1 = Math.sqrt(u1);
  out[0] = sqrt1MinusU1 * Math.sin(2.0 * Math.PI * u2);
  out[1] = sqrt1MinusU1 * Math.cos(2.0 * Math.PI * u2);
  out[2] = sqrtU1 * Math.sin(2.0 * Math.PI * u3);
  out[3] = sqrtU1 * Math.cos(2.0 * Math.PI * u3);
  return out;
}
/**
 * Calculates the inverse of a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate inverse of
 * @returns {quat} out
 */

function invert$1(out, a) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3];
  var dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;
  var invDot = dot ? 1.0 / dot : 0; // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0

  out[0] = -a0 * invDot;
  out[1] = -a1 * invDot;
  out[2] = -a2 * invDot;
  out[3] = a3 * invDot;
  return out;
}
/**
 * Calculates the conjugate of a quat
 * If the quaternion is normalized, this function is faster than quat.inverse and produces the same result.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quat to calculate conjugate of
 * @returns {quat} out
 */

function conjugate$1(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  return out;
}
/**
 * Creates a quaternion from the given 3x3 rotation matrix.
 *
 * NOTE: The resultant quaternion is not normalized, so you should be sure
 * to renormalize the quaternion yourself where necessary.
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyMat3} m rotation matrix
 * @returns {quat} out
 * @function
 */

function fromMat3(out, m) {
  // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes
  // article "Quaternion Calculus and Fast Animation".
  var fTrace = m[0] + m[4] + m[8];
  var fRoot;

  if (fTrace > 0.0) {
    // |w| > 1/2, may as well choose w > 1/2
    fRoot = Math.sqrt(fTrace + 1.0); // 2w

    out[3] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot; // 1/(4w)

    out[0] = (m[5] - m[7]) * fRoot;
    out[1] = (m[6] - m[2]) * fRoot;
    out[2] = (m[1] - m[3]) * fRoot;
  } else {
    // |w| <= 1/2
    var i = 0;
    if (m[4] > m[0]) i = 1;
    if (m[8] > m[i * 3 + i]) i = 2;
    var j = (i + 1) % 3;
    var k = (i + 2) % 3;
    fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);
    out[i] = 0.5 * fRoot;
    fRoot = 0.5 / fRoot;
    out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;
    out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;
    out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;
  }

  return out;
}
/**
 * Creates a quaternion from the given euler angle x, y, z.
 *
 * @param {quat} out the receiving quaternion
 * @param {x} Angle to rotate around X axis in degrees.
 * @param {y} Angle to rotate around Y axis in degrees.
 * @param {z} Angle to rotate around Z axis in degrees.
 * @returns {quat} out
 * @function
 */

function fromEuler(out, x, y, z) {
  var halfToRad = 0.5 * Math.PI / 180.0;
  x *= halfToRad;
  y *= halfToRad;
  z *= halfToRad;
  var sx = Math.sin(x);
  var cx = Math.cos(x);
  var sy = Math.sin(y);
  var cy = Math.cos(y);
  var sz = Math.sin(z);
  var cz = Math.cos(z);
  out[0] = sx * cy * cz - cx * sy * sz;
  out[1] = cx * sy * cz + sx * cy * sz;
  out[2] = cx * cy * sz - sx * sy * cz;
  out[3] = cx * cy * cz + sx * sy * sz;
  return out;
}
/**
 * Returns a string representation of a quatenion
 *
 * @param {ReadonlyQuat} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str$2(a) {
  return "quat(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ")";
}
/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {ReadonlyQuat} a quaternion to clone
 * @returns {quat} a new quaternion
 * @function
 */

var clone$2 = clone$3;
/**
 * Creates a new quat initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} a new quaternion
 * @function
 */

var fromValues$2 = fromValues$3;
/**
 * Copy the values from one quat to another
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the source quaternion
 * @returns {quat} out
 * @function
 */

var copy$2 = copy$3;
/**
 * Set the components of a quat to the given values
 *
 * @param {quat} out the receiving quaternion
 * @param {Number} x X component
 * @param {Number} y Y component
 * @param {Number} z Z component
 * @param {Number} w W component
 * @returns {quat} out
 * @function
 */

var set$2 = set$3;
/**
 * Adds two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {quat} out
 * @function
 */

var add$2 = add$3;
/**
 * Alias for {@link quat.multiply}
 * @function
 */

var mul$2 = multiply$2;
/**
 * Scales a quat by a scalar number
 *
 * @param {quat} out the receiving vector
 * @param {ReadonlyQuat} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {quat} out
 * @function
 */

var scale$2 = scale$3;
/**
 * Calculates the dot product of two quat's
 *
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */

var dot$2 = dot$3;
/**
 * Performs a linear interpolation between two quat's
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 * @function
 */

var lerp$2 = lerp$3;
/**
 * Calculates the length of a quat
 *
 * @param {ReadonlyQuat} a vector to calculate length of
 * @returns {Number} length of a
 */

var length$2 = length$3;
/**
 * Alias for {@link quat.length}
 * @function
 */

var len$2 = length$2;
/**
 * Calculates the squared length of a quat
 *
 * @param {ReadonlyQuat} a vector to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */

var squaredLength$2 = squaredLength$3;
/**
 * Alias for {@link quat.squaredLength}
 * @function
 */

var sqrLen$2 = squaredLength$2;
/**
 * Normalize a quat
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a quaternion to normalize
 * @returns {quat} out
 * @function
 */

var normalize$2 = normalize$3;
/**
 * Returns whether or not the quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyQuat} a The first quaternion.
 * @param {ReadonlyQuat} b The second quaternion.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

var exactEquals$2 = exactEquals$3;
/**
 * Returns whether or not the quaternions have approximately the same elements in the same position.
 *
 * @param {ReadonlyQuat} a The first vector.
 * @param {ReadonlyQuat} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

var equals$2 = equals$3;
/**
 * Sets a quaternion to represent the shortest rotation from one
 * vector to another.
 *
 * Both vectors are assumed to be unit length.
 *
 * @param {quat} out the receiving quaternion.
 * @param {ReadonlyVec3} a the initial vector
 * @param {ReadonlyVec3} b the destination vector
 * @returns {quat} out
 */

var rotationTo = function () {
  var tmpvec3 = create$4();
  var xUnitVec3 = fromValues$4(1, 0, 0);
  var yUnitVec3 = fromValues$4(0, 1, 0);
  return function (out, a, b) {
    var dot = dot$4(a, b);

    if (dot < -0.999999) {
      cross$2(tmpvec3, xUnitVec3, a);
      if (len$4(tmpvec3) < 0.000001) cross$2(tmpvec3, yUnitVec3, a);
      normalize$4(tmpvec3, tmpvec3);
      setAxisAngle(out, tmpvec3, Math.PI);
      return out;
    } else if (dot > 0.999999) {
      out[0] = 0;
      out[1] = 0;
      out[2] = 0;
      out[3] = 1;
      return out;
    } else {
      cross$2(tmpvec3, a, b);
      out[0] = tmpvec3[0];
      out[1] = tmpvec3[1];
      out[2] = tmpvec3[2];
      out[3] = 1 + dot;
      return normalize$2(out, out);
    }
  };
}();
/**
 * Performs a spherical linear interpolation with two control points
 *
 * @param {quat} out the receiving quaternion
 * @param {ReadonlyQuat} a the first operand
 * @param {ReadonlyQuat} b the second operand
 * @param {ReadonlyQuat} c the third operand
 * @param {ReadonlyQuat} d the fourth operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat} out
 */

var sqlerp = function () {
  var temp1 = create$2();
  var temp2 = create$2();
  return function (out, a, b, c, d, t) {
    slerp(temp1, a, d, t);
    slerp(temp2, b, c, t);
    slerp(out, temp1, temp2, 2 * t * (1 - t));
    return out;
  };
}();
/**
 * Sets the specified quaternion with values corresponding to the given
 * axes. Each axis is a vec3 and is expected to be unit length and
 * perpendicular to all other specified axes.
 *
 * @param {ReadonlyVec3} view  the vector representing the viewing direction
 * @param {ReadonlyVec3} right the vector representing the local "right" direction
 * @param {ReadonlyVec3} up    the vector representing the local "up" direction
 * @returns {quat} out
 */

var setAxes = function () {
  var matr = create$6();
  return function (out, view, right, up) {
    matr[0] = right[0];
    matr[3] = right[1];
    matr[6] = right[2];
    matr[1] = up[0];
    matr[4] = up[1];
    matr[7] = up[2];
    matr[2] = -view[0];
    matr[5] = -view[1];
    matr[8] = -view[2];
    return normalize$2(out, fromMat3(out, matr));
  };
}();

var quat = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$2,
    identity: identity$1,
    setAxisAngle: setAxisAngle,
    getAxisAngle: getAxisAngle,
    getAngle: getAngle,
    multiply: multiply$2,
    rotateX: rotateX$1,
    rotateY: rotateY$1,
    rotateZ: rotateZ$1,
    calculateW: calculateW,
    exp: exp,
    ln: ln,
    pow: pow,
    slerp: slerp,
    random: random$1,
    invert: invert$1,
    conjugate: conjugate$1,
    fromMat3: fromMat3,
    fromEuler: fromEuler,
    str: str$2,
    clone: clone$2,
    fromValues: fromValues$2,
    copy: copy$2,
    set: set$2,
    add: add$2,
    mul: mul$2,
    scale: scale$2,
    dot: dot$2,
    lerp: lerp$2,
    length: length$2,
    len: len$2,
    squaredLength: squaredLength$2,
    sqrLen: sqrLen$2,
    normalize: normalize$2,
    exactEquals: exactEquals$2,
    equals: equals$2,
    rotationTo: rotationTo,
    sqlerp: sqlerp,
    setAxes: setAxes
});

/**
 * Dual Quaternion<br>
 * Format: [real, dual]<br>
 * Quaternion format: XYZW<br>
 * Make sure to have normalized dual quaternions, otherwise the functions may not work as intended.<br>
 * @module quat2
 */

/**
 * Creates a new identity dual quat
 *
 * @returns {quat2} a new dual quaternion [real -> rotation, dual -> translation]
 */

function create$1() {
  var dq = new ARRAY_TYPE(8);

  if (ARRAY_TYPE != Float32Array) {
    dq[0] = 0;
    dq[1] = 0;
    dq[2] = 0;
    dq[4] = 0;
    dq[5] = 0;
    dq[6] = 0;
    dq[7] = 0;
  }

  dq[3] = 1;
  return dq;
}
/**
 * Creates a new quat initialized with values from an existing quaternion
 *
 * @param {ReadonlyQuat2} a dual quaternion to clone
 * @returns {quat2} new dual quaternion
 * @function
 */

function clone$1(a) {
  var dq = new ARRAY_TYPE(8);
  dq[0] = a[0];
  dq[1] = a[1];
  dq[2] = a[2];
  dq[3] = a[3];
  dq[4] = a[4];
  dq[5] = a[5];
  dq[6] = a[6];
  dq[7] = a[7];
  return dq;
}
/**
 * Creates a new dual quat initialized with the given values
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} new dual quaternion
 * @function
 */

function fromValues$1(x1, y1, z1, w1, x2, y2, z2, w2) {
  var dq = new ARRAY_TYPE(8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  dq[4] = x2;
  dq[5] = y2;
  dq[6] = z2;
  dq[7] = w2;
  return dq;
}
/**
 * Creates a new dual quat from the given values (quat and translation)
 *
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component (translation)
 * @param {Number} y2 Y component (translation)
 * @param {Number} z2 Z component (translation)
 * @returns {quat2} new dual quaternion
 * @function
 */

function fromRotationTranslationValues(x1, y1, z1, w1, x2, y2, z2) {
  var dq = new ARRAY_TYPE(8);
  dq[0] = x1;
  dq[1] = y1;
  dq[2] = z1;
  dq[3] = w1;
  var ax = x2 * 0.5,
      ay = y2 * 0.5,
      az = z2 * 0.5;
  dq[4] = ax * w1 + ay * z1 - az * y1;
  dq[5] = ay * w1 + az * x1 - ax * z1;
  dq[6] = az * w1 + ax * y1 - ay * x1;
  dq[7] = -ax * x1 - ay * y1 - az * z1;
  return dq;
}
/**
 * Creates a dual quat from a quaternion and a translation
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyQuat} q a normalized quaternion
 * @param {ReadonlyVec3} t tranlation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromRotationTranslation(out, q, t) {
  var ax = t[0] * 0.5,
      ay = t[1] * 0.5,
      az = t[2] * 0.5,
      bx = q[0],
      by = q[1],
      bz = q[2],
      bw = q[3];
  out[0] = bx;
  out[1] = by;
  out[2] = bz;
  out[3] = bw;
  out[4] = ax * bw + ay * bz - az * by;
  out[5] = ay * bw + az * bx - ax * bz;
  out[6] = az * bw + ax * by - ay * bx;
  out[7] = -ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Creates a dual quat from a translation
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyVec3} t translation vector
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromTranslation(out, t) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = t[0] * 0.5;
  out[5] = t[1] * 0.5;
  out[6] = t[2] * 0.5;
  out[7] = 0;
  return out;
}
/**
 * Creates a dual quat from a quaternion
 *
 * @param {ReadonlyQuat2} dual quaternion receiving operation result
 * @param {ReadonlyQuat} q the quaternion
 * @returns {quat2} dual quaternion receiving operation result
 * @function
 */

function fromRotation(out, q) {
  out[0] = q[0];
  out[1] = q[1];
  out[2] = q[2];
  out[3] = q[3];
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}
/**
 * Creates a new dual quat from a matrix (4x4)
 *
 * @param {quat2} out the dual quaternion
 * @param {ReadonlyMat4} a the matrix
 * @returns {quat2} dual quat receiving operation result
 * @function
 */

function fromMat4(out, a) {
  //TODO Optimize this
  var outer = create$2();
  getRotation(outer, a);
  var t = new ARRAY_TYPE(3);
  getTranslation$1(t, a);
  fromRotationTranslation(out, outer, t);
  return out;
}
/**
 * Copy the values from one dual quat to another
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the source dual quaternion
 * @returns {quat2} out
 * @function
 */

function copy$1(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  out[2] = a[2];
  out[3] = a[3];
  out[4] = a[4];
  out[5] = a[5];
  out[6] = a[6];
  out[7] = a[7];
  return out;
}
/**
 * Set a dual quat to the identity dual quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @returns {quat2} out
 */

function identity(out) {
  out[0] = 0;
  out[1] = 0;
  out[2] = 0;
  out[3] = 1;
  out[4] = 0;
  out[5] = 0;
  out[6] = 0;
  out[7] = 0;
  return out;
}
/**
 * Set the components of a dual quat to the given values
 *
 * @param {quat2} out the receiving quaternion
 * @param {Number} x1 X component
 * @param {Number} y1 Y component
 * @param {Number} z1 Z component
 * @param {Number} w1 W component
 * @param {Number} x2 X component
 * @param {Number} y2 Y component
 * @param {Number} z2 Z component
 * @param {Number} w2 W component
 * @returns {quat2} out
 * @function
 */

function set$1(out, x1, y1, z1, w1, x2, y2, z2, w2) {
  out[0] = x1;
  out[1] = y1;
  out[2] = z1;
  out[3] = w1;
  out[4] = x2;
  out[5] = y2;
  out[6] = z2;
  out[7] = w2;
  return out;
}
/**
 * Gets the real part of a dual quat
 * @param  {quat} out real part
 * @param  {ReadonlyQuat2} a Dual Quaternion
 * @return {quat} real part
 */

var getReal = copy$2;
/**
 * Gets the dual part of a dual quat
 * @param  {quat} out dual part
 * @param  {ReadonlyQuat2} a Dual Quaternion
 * @return {quat} dual part
 */

function getDual(out, a) {
  out[0] = a[4];
  out[1] = a[5];
  out[2] = a[6];
  out[3] = a[7];
  return out;
}
/**
 * Set the real component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat} q a quaternion representing the real part
 * @returns {quat2} out
 * @function
 */

var setReal = copy$2;
/**
 * Set the dual component of a dual quat to the given quaternion
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat} q a quaternion representing the dual part
 * @returns {quat2} out
 * @function
 */

function setDual(out, q) {
  out[4] = q[0];
  out[5] = q[1];
  out[6] = q[2];
  out[7] = q[3];
  return out;
}
/**
 * Gets the translation of a normalized dual quat
 * @param  {vec3} out translation
 * @param  {ReadonlyQuat2} a Dual Quaternion to be decomposed
 * @return {vec3} translation
 */

function getTranslation(out, a) {
  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3];
  out[0] = (ax * bw + aw * bx + ay * bz - az * by) * 2;
  out[1] = (ay * bw + aw * by + az * bx - ax * bz) * 2;
  out[2] = (az * bw + aw * bz + ax * by - ay * bx) * 2;
  return out;
}
/**
 * Translates a dual quat by the given vector
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to translate
 * @param {ReadonlyVec3} v vector to translate by
 * @returns {quat2} out
 */

function translate(out, a, v) {
  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3],
      bx1 = v[0] * 0.5,
      by1 = v[1] * 0.5,
      bz1 = v[2] * 0.5,
      ax2 = a[4],
      ay2 = a[5],
      az2 = a[6],
      aw2 = a[7];
  out[0] = ax1;
  out[1] = ay1;
  out[2] = az1;
  out[3] = aw1;
  out[4] = aw1 * bx1 + ay1 * bz1 - az1 * by1 + ax2;
  out[5] = aw1 * by1 + az1 * bx1 - ax1 * bz1 + ay2;
  out[6] = aw1 * bz1 + ax1 * by1 - ay1 * bx1 + az2;
  out[7] = -ax1 * bx1 - ay1 * by1 - az1 * bz1 + aw2;
  return out;
}
/**
 * Rotates a dual quat around the X axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateX(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  rotateX$1(out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat around the Y axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateY(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  rotateY$1(out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat around the Z axis
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {number} rad how far should the rotation be
 * @returns {quat2} out
 */

function rotateZ(out, a, rad) {
  var bx = -a[0],
      by = -a[1],
      bz = -a[2],
      bw = a[3],
      ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7],
      ax1 = ax * bw + aw * bx + ay * bz - az * by,
      ay1 = ay * bw + aw * by + az * bx - ax * bz,
      az1 = az * bw + aw * bz + ax * by - ay * bx,
      aw1 = aw * bw - ax * bx - ay * by - az * bz;
  rotateZ$1(out, a, rad);
  bx = out[0];
  by = out[1];
  bz = out[2];
  bw = out[3];
  out[4] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[5] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[6] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[7] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  return out;
}
/**
 * Rotates a dual quat by a given quaternion (a * q)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {ReadonlyQuat} q quaternion to rotate by
 * @returns {quat2} out
 */

function rotateByQuatAppend(out, a, q) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      ax = a[0],
      ay = a[1],
      az = a[2],
      aw = a[3];
  out[0] = ax * qw + aw * qx + ay * qz - az * qy;
  out[1] = ay * qw + aw * qy + az * qx - ax * qz;
  out[2] = az * qw + aw * qz + ax * qy - ay * qx;
  out[3] = aw * qw - ax * qx - ay * qy - az * qz;
  ax = a[4];
  ay = a[5];
  az = a[6];
  aw = a[7];
  out[4] = ax * qw + aw * qx + ay * qz - az * qy;
  out[5] = ay * qw + aw * qy + az * qx - ax * qz;
  out[6] = az * qw + aw * qz + ax * qy - ay * qx;
  out[7] = aw * qw - ax * qx - ay * qy - az * qz;
  return out;
}
/**
 * Rotates a dual quat by a given quaternion (q * a)
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat} q quaternion to rotate by
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @returns {quat2} out
 */

function rotateByQuatPrepend(out, q, a) {
  var qx = q[0],
      qy = q[1],
      qz = q[2],
      qw = q[3],
      bx = a[0],
      by = a[1],
      bz = a[2],
      bw = a[3];
  out[0] = qx * bw + qw * bx + qy * bz - qz * by;
  out[1] = qy * bw + qw * by + qz * bx - qx * bz;
  out[2] = qz * bw + qw * bz + qx * by - qy * bx;
  out[3] = qw * bw - qx * bx - qy * by - qz * bz;
  bx = a[4];
  by = a[5];
  bz = a[6];
  bw = a[7];
  out[4] = qx * bw + qw * bx + qy * bz - qz * by;
  out[5] = qy * bw + qw * by + qz * bx - qx * bz;
  out[6] = qz * bw + qw * bz + qx * by - qy * bx;
  out[7] = qw * bw - qx * bx - qy * by - qz * bz;
  return out;
}
/**
 * Rotates a dual quat around a given axis. Does the normalisation automatically
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the dual quaternion to rotate
 * @param {ReadonlyVec3} axis the axis to rotate around
 * @param {Number} rad how far the rotation should be
 * @returns {quat2} out
 */

function rotateAroundAxis(out, a, axis, rad) {
  //Special case for rad = 0
  if (Math.abs(rad) < EPSILON) {
    return copy$1(out, a);
  }

  var axisLength = Math.hypot(axis[0], axis[1], axis[2]);
  rad = rad * 0.5;
  var s = Math.sin(rad);
  var bx = s * axis[0] / axisLength;
  var by = s * axis[1] / axisLength;
  var bz = s * axis[2] / axisLength;
  var bw = Math.cos(rad);
  var ax1 = a[0],
      ay1 = a[1],
      az1 = a[2],
      aw1 = a[3];
  out[0] = ax1 * bw + aw1 * bx + ay1 * bz - az1 * by;
  out[1] = ay1 * bw + aw1 * by + az1 * bx - ax1 * bz;
  out[2] = az1 * bw + aw1 * bz + ax1 * by - ay1 * bx;
  out[3] = aw1 * bw - ax1 * bx - ay1 * by - az1 * bz;
  var ax = a[4],
      ay = a[5],
      az = a[6],
      aw = a[7];
  out[4] = ax * bw + aw * bx + ay * bz - az * by;
  out[5] = ay * bw + aw * by + az * bx - ax * bz;
  out[6] = az * bw + aw * bz + ax * by - ay * bx;
  out[7] = aw * bw - ax * bx - ay * by - az * bz;
  return out;
}
/**
 * Adds two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {quat2} out
 * @function
 */

function add$1(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  out[2] = a[2] + b[2];
  out[3] = a[3] + b[3];
  out[4] = a[4] + b[4];
  out[5] = a[5] + b[5];
  out[6] = a[6] + b[6];
  out[7] = a[7] + b[7];
  return out;
}
/**
 * Multiplies two dual quat's
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {quat2} out
 */

function multiply$1(out, a, b) {
  var ax0 = a[0],
      ay0 = a[1],
      az0 = a[2],
      aw0 = a[3],
      bx1 = b[4],
      by1 = b[5],
      bz1 = b[6],
      bw1 = b[7],
      ax1 = a[4],
      ay1 = a[5],
      az1 = a[6],
      aw1 = a[7],
      bx0 = b[0],
      by0 = b[1],
      bz0 = b[2],
      bw0 = b[3];
  out[0] = ax0 * bw0 + aw0 * bx0 + ay0 * bz0 - az0 * by0;
  out[1] = ay0 * bw0 + aw0 * by0 + az0 * bx0 - ax0 * bz0;
  out[2] = az0 * bw0 + aw0 * bz0 + ax0 * by0 - ay0 * bx0;
  out[3] = aw0 * bw0 - ax0 * bx0 - ay0 * by0 - az0 * bz0;
  out[4] = ax0 * bw1 + aw0 * bx1 + ay0 * bz1 - az0 * by1 + ax1 * bw0 + aw1 * bx0 + ay1 * bz0 - az1 * by0;
  out[5] = ay0 * bw1 + aw0 * by1 + az0 * bx1 - ax0 * bz1 + ay1 * bw0 + aw1 * by0 + az1 * bx0 - ax1 * bz0;
  out[6] = az0 * bw1 + aw0 * bz1 + ax0 * by1 - ay0 * bx1 + az1 * bw0 + aw1 * bz0 + ax1 * by0 - ay1 * bx0;
  out[7] = aw0 * bw1 - ax0 * bx1 - ay0 * by1 - az0 * bz1 + aw1 * bw0 - ax1 * bx0 - ay1 * by0 - az1 * bz0;
  return out;
}
/**
 * Alias for {@link quat2.multiply}
 * @function
 */

var mul$1 = multiply$1;
/**
 * Scales a dual quat by a scalar number
 *
 * @param {quat2} out the receiving dual quat
 * @param {ReadonlyQuat2} a the dual quat to scale
 * @param {Number} b amount to scale the dual quat by
 * @returns {quat2} out
 * @function
 */

function scale$1(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  out[2] = a[2] * b;
  out[3] = a[3] * b;
  out[4] = a[4] * b;
  out[5] = a[5] * b;
  out[6] = a[6] * b;
  out[7] = a[7] * b;
  return out;
}
/**
 * Calculates the dot product of two dual quat's (The dot product of the real parts)
 *
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @returns {Number} dot product of a and b
 * @function
 */

var dot$1 = dot$2;
/**
 * Performs a linear interpolation between two dual quats's
 * NOTE: The resulting dual quaternions won't always be normalized (The error is most noticeable when t = 0.5)
 *
 * @param {quat2} out the receiving dual quat
 * @param {ReadonlyQuat2} a the first operand
 * @param {ReadonlyQuat2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {quat2} out
 */

function lerp$1(out, a, b, t) {
  var mt = 1 - t;
  if (dot$1(a, b) < 0) t = -t;
  out[0] = a[0] * mt + b[0] * t;
  out[1] = a[1] * mt + b[1] * t;
  out[2] = a[2] * mt + b[2] * t;
  out[3] = a[3] * mt + b[3] * t;
  out[4] = a[4] * mt + b[4] * t;
  out[5] = a[5] * mt + b[5] * t;
  out[6] = a[6] * mt + b[6] * t;
  out[7] = a[7] * mt + b[7] * t;
  return out;
}
/**
 * Calculates the inverse of a dual quat. If they are normalized, conjugate is cheaper
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a dual quat to calculate inverse of
 * @returns {quat2} out
 */

function invert(out, a) {
  var sqlen = squaredLength$1(a);
  out[0] = -a[0] / sqlen;
  out[1] = -a[1] / sqlen;
  out[2] = -a[2] / sqlen;
  out[3] = a[3] / sqlen;
  out[4] = -a[4] / sqlen;
  out[5] = -a[5] / sqlen;
  out[6] = -a[6] / sqlen;
  out[7] = a[7] / sqlen;
  return out;
}
/**
 * Calculates the conjugate of a dual quat
 * If the dual quaternion is normalized, this function is faster than quat2.inverse and produces the same result.
 *
 * @param {quat2} out the receiving quaternion
 * @param {ReadonlyQuat2} a quat to calculate conjugate of
 * @returns {quat2} out
 */

function conjugate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  out[2] = -a[2];
  out[3] = a[3];
  out[4] = -a[4];
  out[5] = -a[5];
  out[6] = -a[6];
  out[7] = a[7];
  return out;
}
/**
 * Calculates the length of a dual quat
 *
 * @param {ReadonlyQuat2} a dual quat to calculate length of
 * @returns {Number} length of a
 * @function
 */

var length$1 = length$2;
/**
 * Alias for {@link quat2.length}
 * @function
 */

var len$1 = length$1;
/**
 * Calculates the squared length of a dual quat
 *
 * @param {ReadonlyQuat2} a dual quat to calculate squared length of
 * @returns {Number} squared length of a
 * @function
 */

var squaredLength$1 = squaredLength$2;
/**
 * Alias for {@link quat2.squaredLength}
 * @function
 */

var sqrLen$1 = squaredLength$1;
/**
 * Normalize a dual quat
 *
 * @param {quat2} out the receiving dual quaternion
 * @param {ReadonlyQuat2} a dual quaternion to normalize
 * @returns {quat2} out
 * @function
 */

function normalize$1(out, a) {
  var magnitude = squaredLength$1(a);

  if (magnitude > 0) {
    magnitude = Math.sqrt(magnitude);
    var a0 = a[0] / magnitude;
    var a1 = a[1] / magnitude;
    var a2 = a[2] / magnitude;
    var a3 = a[3] / magnitude;
    var b0 = a[4];
    var b1 = a[5];
    var b2 = a[6];
    var b3 = a[7];
    var a_dot_b = a0 * b0 + a1 * b1 + a2 * b2 + a3 * b3;
    out[0] = a0;
    out[1] = a1;
    out[2] = a2;
    out[3] = a3;
    out[4] = (b0 - a0 * a_dot_b) / magnitude;
    out[5] = (b1 - a1 * a_dot_b) / magnitude;
    out[6] = (b2 - a2 * a_dot_b) / magnitude;
    out[7] = (b3 - a3 * a_dot_b) / magnitude;
  }

  return out;
}
/**
 * Returns a string representation of a dual quatenion
 *
 * @param {ReadonlyQuat2} a dual quaternion to represent as a string
 * @returns {String} string representation of the dual quat
 */

function str$1(a) {
  return "quat2(" + a[0] + ", " + a[1] + ", " + a[2] + ", " + a[3] + ", " + a[4] + ", " + a[5] + ", " + a[6] + ", " + a[7] + ")";
}
/**
 * Returns whether or not the dual quaternions have exactly the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyQuat2} a the first dual quaternion.
 * @param {ReadonlyQuat2} b the second dual quaternion.
 * @returns {Boolean} true if the dual quaternions are equal, false otherwise.
 */

function exactEquals$1(a, b) {
  return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3] && a[4] === b[4] && a[5] === b[5] && a[6] === b[6] && a[7] === b[7];
}
/**
 * Returns whether or not the dual quaternions have approximately the same elements in the same position.
 *
 * @param {ReadonlyQuat2} a the first dual quat.
 * @param {ReadonlyQuat2} b the second dual quat.
 * @returns {Boolean} true if the dual quats are equal, false otherwise.
 */

function equals$1(a, b) {
  var a0 = a[0],
      a1 = a[1],
      a2 = a[2],
      a3 = a[3],
      a4 = a[4],
      a5 = a[5],
      a6 = a[6],
      a7 = a[7];
  var b0 = b[0],
      b1 = b[1],
      b2 = b[2],
      b3 = b[3],
      b4 = b[4],
      b5 = b[5],
      b6 = b[6],
      b7 = b[7];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3)) && Math.abs(a4 - b4) <= EPSILON * Math.max(1.0, Math.abs(a4), Math.abs(b4)) && Math.abs(a5 - b5) <= EPSILON * Math.max(1.0, Math.abs(a5), Math.abs(b5)) && Math.abs(a6 - b6) <= EPSILON * Math.max(1.0, Math.abs(a6), Math.abs(b6)) && Math.abs(a7 - b7) <= EPSILON * Math.max(1.0, Math.abs(a7), Math.abs(b7));
}

var quat2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create$1,
    clone: clone$1,
    fromValues: fromValues$1,
    fromRotationTranslationValues: fromRotationTranslationValues,
    fromRotationTranslation: fromRotationTranslation,
    fromTranslation: fromTranslation,
    fromRotation: fromRotation,
    fromMat4: fromMat4,
    copy: copy$1,
    identity: identity,
    set: set$1,
    getReal: getReal,
    getDual: getDual,
    setReal: setReal,
    setDual: setDual,
    getTranslation: getTranslation,
    translate: translate,
    rotateX: rotateX,
    rotateY: rotateY,
    rotateZ: rotateZ,
    rotateByQuatAppend: rotateByQuatAppend,
    rotateByQuatPrepend: rotateByQuatPrepend,
    rotateAroundAxis: rotateAroundAxis,
    add: add$1,
    multiply: multiply$1,
    mul: mul$1,
    scale: scale$1,
    dot: dot$1,
    lerp: lerp$1,
    invert: invert,
    conjugate: conjugate,
    length: length$1,
    len: len$1,
    squaredLength: squaredLength$1,
    sqrLen: sqrLen$1,
    normalize: normalize$1,
    str: str$1,
    exactEquals: exactEquals$1,
    equals: equals$1
});

/**
 * 2 Dimensional Vector
 * @module vec2
 */

/**
 * Creates a new, empty vec2
 *
 * @returns {vec2} a new 2D vector
 */

function create() {
  var out = new ARRAY_TYPE(2);

  if (ARRAY_TYPE != Float32Array) {
    out[0] = 0;
    out[1] = 0;
  }

  return out;
}
/**
 * Creates a new vec2 initialized with values from an existing vector
 *
 * @param {ReadonlyVec2} a vector to clone
 * @returns {vec2} a new 2D vector
 */

function clone(a) {
  var out = new ARRAY_TYPE(2);
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Creates a new vec2 initialized with the given values
 *
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} a new 2D vector
 */

function fromValues(x, y) {
  var out = new ARRAY_TYPE(2);
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Copy the values from one vec2 to another
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the source vector
 * @returns {vec2} out
 */

function copy(out, a) {
  out[0] = a[0];
  out[1] = a[1];
  return out;
}
/**
 * Set the components of a vec2 to the given values
 *
 * @param {vec2} out the receiving vector
 * @param {Number} x X component
 * @param {Number} y Y component
 * @returns {vec2} out
 */

function set(out, x, y) {
  out[0] = x;
  out[1] = y;
  return out;
}
/**
 * Adds two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function add(out, a, b) {
  out[0] = a[0] + b[0];
  out[1] = a[1] + b[1];
  return out;
}
/**
 * Subtracts vector b from vector a
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function subtract(out, a, b) {
  out[0] = a[0] - b[0];
  out[1] = a[1] - b[1];
  return out;
}
/**
 * Multiplies two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function multiply(out, a, b) {
  out[0] = a[0] * b[0];
  out[1] = a[1] * b[1];
  return out;
}
/**
 * Divides two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function divide(out, a, b) {
  out[0] = a[0] / b[0];
  out[1] = a[1] / b[1];
  return out;
}
/**
 * Math.ceil the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to ceil
 * @returns {vec2} out
 */

function ceil(out, a) {
  out[0] = Math.ceil(a[0]);
  out[1] = Math.ceil(a[1]);
  return out;
}
/**
 * Math.floor the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to floor
 * @returns {vec2} out
 */

function floor(out, a) {
  out[0] = Math.floor(a[0]);
  out[1] = Math.floor(a[1]);
  return out;
}
/**
 * Returns the minimum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function min(out, a, b) {
  out[0] = Math.min(a[0], b[0]);
  out[1] = Math.min(a[1], b[1]);
  return out;
}
/**
 * Returns the maximum of two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec2} out
 */

function max(out, a, b) {
  out[0] = Math.max(a[0], b[0]);
  out[1] = Math.max(a[1], b[1]);
  return out;
}
/**
 * Math.round the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to round
 * @returns {vec2} out
 */

function round(out, a) {
  out[0] = Math.round(a[0]);
  out[1] = Math.round(a[1]);
  return out;
}
/**
 * Scales a vec2 by a scalar number
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to scale
 * @param {Number} b amount to scale the vector by
 * @returns {vec2} out
 */

function scale(out, a, b) {
  out[0] = a[0] * b;
  out[1] = a[1] * b;
  return out;
}
/**
 * Adds two vec2's after scaling the second operand by a scalar value
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} scale the amount to scale b by before adding
 * @returns {vec2} out
 */

function scaleAndAdd(out, a, b, scale) {
  out[0] = a[0] + b[0] * scale;
  out[1] = a[1] + b[1] * scale;
  return out;
}
/**
 * Calculates the euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} distance between a and b
 */

function distance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared euclidian distance between two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} squared distance between a and b
 */

function squaredDistance(a, b) {
  var x = b[0] - a[0],
      y = b[1] - a[1];
  return x * x + y * y;
}
/**
 * Calculates the length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate length of
 * @returns {Number} length of a
 */

function length(a) {
  var x = a[0],
      y = a[1];
  return Math.hypot(x, y);
}
/**
 * Calculates the squared length of a vec2
 *
 * @param {ReadonlyVec2} a vector to calculate squared length of
 * @returns {Number} squared length of a
 */

function squaredLength(a) {
  var x = a[0],
      y = a[1];
  return x * x + y * y;
}
/**
 * Negates the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to negate
 * @returns {vec2} out
 */

function negate(out, a) {
  out[0] = -a[0];
  out[1] = -a[1];
  return out;
}
/**
 * Returns the inverse of the components of a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to invert
 * @returns {vec2} out
 */

function inverse(out, a) {
  out[0] = 1.0 / a[0];
  out[1] = 1.0 / a[1];
  return out;
}
/**
 * Normalize a vec2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a vector to normalize
 * @returns {vec2} out
 */

function normalize(out, a) {
  var x = a[0],
      y = a[1];
  var len = x * x + y * y;

  if (len > 0) {
    //TODO: evaluate use of glm_invsqrt here?
    len = 1 / Math.sqrt(len);
  }

  out[0] = a[0] * len;
  out[1] = a[1] * len;
  return out;
}
/**
 * Calculates the dot product of two vec2's
 *
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {Number} dot product of a and b
 */

function dot(a, b) {
  return a[0] * b[0] + a[1] * b[1];
}
/**
 * Computes the cross product of two vec2's
 * Note that the cross product must by definition produce a 3D vector
 *
 * @param {vec3} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @returns {vec3} out
 */

function cross(out, a, b) {
  var z = a[0] * b[1] - a[1] * b[0];
  out[0] = out[1] = 0;
  out[2] = z;
  return out;
}
/**
 * Performs a linear interpolation between two vec2's
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the first operand
 * @param {ReadonlyVec2} b the second operand
 * @param {Number} t interpolation amount, in the range [0-1], between the two inputs
 * @returns {vec2} out
 */

function lerp(out, a, b, t) {
  var ax = a[0],
      ay = a[1];
  out[0] = ax + t * (b[0] - ax);
  out[1] = ay + t * (b[1] - ay);
  return out;
}
/**
 * Generates a random vector with the given scale
 *
 * @param {vec2} out the receiving vector
 * @param {Number} [scale] Length of the resulting vector. If ommitted, a unit vector will be returned
 * @returns {vec2} out
 */

function random(out, scale) {
  scale = scale || 1.0;
  var r = RANDOM() * 2.0 * Math.PI;
  out[0] = Math.cos(r) * scale;
  out[1] = Math.sin(r) * scale;
  return out;
}
/**
 * Transforms the vec2 with a mat2
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y;
  out[1] = m[1] * x + m[3] * y;
  return out;
}
/**
 * Transforms the vec2 with a mat2d
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat2d} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat2d(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[2] * y + m[4];
  out[1] = m[1] * x + m[3] * y + m[5];
  return out;
}
/**
 * Transforms the vec2 with a mat3
 * 3rd vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat3} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat3(out, a, m) {
  var x = a[0],
      y = a[1];
  out[0] = m[0] * x + m[3] * y + m[6];
  out[1] = m[1] * x + m[4] * y + m[7];
  return out;
}
/**
 * Transforms the vec2 with a mat4
 * 3rd vector component is implicitly '0'
 * 4th vector component is implicitly '1'
 *
 * @param {vec2} out the receiving vector
 * @param {ReadonlyVec2} a the vector to transform
 * @param {ReadonlyMat4} m matrix to transform with
 * @returns {vec2} out
 */

function transformMat4(out, a, m) {
  var x = a[0];
  var y = a[1];
  out[0] = m[0] * x + m[4] * y + m[12];
  out[1] = m[1] * x + m[5] * y + m[13];
  return out;
}
/**
 * Rotate a 2D vector
 * @param {vec2} out The receiving vec2
 * @param {ReadonlyVec2} a The vec2 point to rotate
 * @param {ReadonlyVec2} b The origin of the rotation
 * @param {Number} rad The angle of rotation in radians
 * @returns {vec2} out
 */

function rotate(out, a, b, rad) {
  //Translate point to the origin
  var p0 = a[0] - b[0],
      p1 = a[1] - b[1],
      sinC = Math.sin(rad),
      cosC = Math.cos(rad); //perform rotation and translate to correct position

  out[0] = p0 * cosC - p1 * sinC + b[0];
  out[1] = p0 * sinC + p1 * cosC + b[1];
  return out;
}
/**
 * Get the angle between two 2D vectors
 * @param {ReadonlyVec2} a The first operand
 * @param {ReadonlyVec2} b The second operand
 * @returns {Number} The angle in radians
 */

function angle(a, b) {
  var x1 = a[0],
      y1 = a[1],
      x2 = b[0],
      y2 = b[1],
      // mag is the product of the magnitudes of a and b
  mag = Math.sqrt(x1 * x1 + y1 * y1) * Math.sqrt(x2 * x2 + y2 * y2),
      // mag &&.. short circuits if mag == 0
  cosine = mag && (x1 * x2 + y1 * y2) / mag; // Math.min(Math.max(cosine, -1), 1) clamps the cosine between -1 and 1

  return Math.acos(Math.min(Math.max(cosine, -1), 1));
}
/**
 * Set the components of a vec2 to zero
 *
 * @param {vec2} out the receiving vector
 * @returns {vec2} out
 */

function zero(out) {
  out[0] = 0.0;
  out[1] = 0.0;
  return out;
}
/**
 * Returns a string representation of a vector
 *
 * @param {ReadonlyVec2} a vector to represent as a string
 * @returns {String} string representation of the vector
 */

function str(a) {
  return "vec2(" + a[0] + ", " + a[1] + ")";
}
/**
 * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function exactEquals(a, b) {
  return a[0] === b[0] && a[1] === b[1];
}
/**
 * Returns whether or not the vectors have approximately the same elements in the same position.
 *
 * @param {ReadonlyVec2} a The first vector.
 * @param {ReadonlyVec2} b The second vector.
 * @returns {Boolean} True if the vectors are equal, false otherwise.
 */

function equals(a, b) {
  var a0 = a[0],
      a1 = a[1];
  var b0 = b[0],
      b1 = b[1];
  return Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1));
}
/**
 * Alias for {@link vec2.length}
 * @function
 */

var len = length;
/**
 * Alias for {@link vec2.subtract}
 * @function
 */

var sub = subtract;
/**
 * Alias for {@link vec2.multiply}
 * @function
 */

var mul = multiply;
/**
 * Alias for {@link vec2.divide}
 * @function
 */

var div = divide;
/**
 * Alias for {@link vec2.distance}
 * @function
 */

var dist = distance;
/**
 * Alias for {@link vec2.squaredDistance}
 * @function
 */

var sqrDist = squaredDistance;
/**
 * Alias for {@link vec2.squaredLength}
 * @function
 */

var sqrLen = squaredLength;
/**
 * Perform some operation over an array of vec2s.
 *
 * @param {Array} a the array of vectors to iterate over
 * @param {Number} stride Number of elements between the start of each vec2. If 0 assumes tightly packed
 * @param {Number} offset Number of elements to skip at the beginning of the array
 * @param {Number} count Number of vec2s to iterate over. If 0 iterates over entire array
 * @param {Function} fn Function to call for each vector in the array
 * @param {Object} [arg] additional argument to pass to fn
 * @returns {Array} a
 * @function
 */

var forEach = function () {
  var vec = create();
  return function (a, stride, offset, count, fn, arg) {
    var i, l;

    if (!stride) {
      stride = 2;
    }

    if (!offset) {
      offset = 0;
    }

    if (count) {
      l = Math.min(count * stride + offset, a.length);
    } else {
      l = a.length;
    }

    for (i = offset; i < l; i += stride) {
      vec[0] = a[i];
      vec[1] = a[i + 1];
      fn(vec, vec, arg);
      a[i] = vec[0];
      a[i + 1] = vec[1];
    }

    return a;
  };
}();

var vec2 = /*#__PURE__*/Object.freeze({
    __proto__: null,
    create: create,
    clone: clone,
    fromValues: fromValues,
    copy: copy,
    set: set,
    add: add,
    subtract: subtract,
    multiply: multiply,
    divide: divide,
    ceil: ceil,
    floor: floor,
    min: min,
    max: max,
    round: round,
    scale: scale,
    scaleAndAdd: scaleAndAdd,
    distance: distance,
    squaredDistance: squaredDistance,
    length: length,
    squaredLength: squaredLength,
    negate: negate,
    inverse: inverse,
    normalize: normalize,
    dot: dot,
    cross: cross,
    lerp: lerp,
    random: random,
    transformMat2: transformMat2,
    transformMat2d: transformMat2d,
    transformMat3: transformMat3,
    transformMat4: transformMat4,
    rotate: rotate,
    angle: angle,
    zero: zero,
    str: str,
    exactEquals: exactEquals,
    equals: equals,
    len: len,
    sub: sub,
    mul: mul,
    div: div,
    dist: dist,
    sqrDist: sqrDist,
    sqrLen: sqrLen,
    forEach: forEach
});

var objectsDepthBufferVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct PerObjectDataEntry {\r\n    quat_scale: vec4<f32>,\r\n    translation_atlasNum: vec4<f32>,\r\n}\r\n\r\nstruct PerObjectData {\r\n    entries: array<PerObjectDataEntry>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var<storage, read> perObjectData : PerObjectData;\r\n\r\nfn quat_transform(q: vec4<f32>, v: vec3<f32>) -> vec3<f32> {\r\n    return v + 2 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\r\n}\r\n\r\n@vertex\r\nfn main(@location(0) inputPosition: vec3<f32>, @location(3) paramsIndex: f32) -> @builtin(position) vec4<f32> {\r\n    var index = u32(paramsIndex);\r\n\r\n    var quat_scale = perObjectData.entries[index].quat_scale;\r\n    var translation_atlasNum = perObjectData.entries[index].translation_atlasNum;\r\n\r\n    var scale = quat_scale.w;\r\n\r\n    var translation = translation_atlasNum.xyz;\r\n    var atlasNum = translation_atlasNum.w;\r\n\r\n    var quat_xyz = quat_scale.xyz;\r\n    var s = length(quat_xyz);\r\n    var quat = vec4(quat_xyz, sqrt(1.0 - s * s));\r\n\r\n    var fragPosition = settings.viewProjection * vec4(quat_transform(quat, inputPosition) * scale + translation, 1.0);\r\n\r\n    return fragPosition;\r\n}";

var objectsShadowNearVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct PerObjectDataEntry {\r\n    quat_scale: vec4<f32>,\r\n    translation_atlasNum: vec4<f32>,\r\n}\r\n\r\nstruct PerObjectData {\r\n    entries: array<PerObjectDataEntry>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var<storage, read> perObjectData : PerObjectData;\r\n\r\nfn quat_transform(q: vec4<f32>, v: vec3<f32>) -> vec3<f32> {\r\n    return v + 2 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\r\n}\r\n\r\n@vertex\r\nfn main(@location(0) inputPosition: vec3<f32>, @location(3) paramsIndex: f32) -> @builtin(position) vec4<f32> {\r\n    var index = u32(paramsIndex);\r\n\r\n    var quat_scale = perObjectData.entries[index].quat_scale;\r\n    var translation_atlasNum = perObjectData.entries[index].translation_atlasNum;\r\n\r\n    var scale = quat_scale.w;\r\n\r\n    var translation = translation_atlasNum.xyz;\r\n    var atlasNum = translation_atlasNum.w;\r\n\r\n    var quat_xyz = quat_scale.xyz;\r\n    var s = length(quat_xyz);\r\n    var quat = vec4(quat_xyz, sqrt(1.0 - s * s));\r\n\r\n    var fragPosition = settings.viewProjection_shadow_near * vec4(quat_transform(quat, inputPosition) * scale + translation, 1.0);\r\n\r\n    return fragPosition;\r\n}";

var objectsShadowFarVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct PerObjectDataEntry {\r\n    quat_scale: vec4<f32>,\r\n    translation_atlasNum: vec4<f32>,\r\n}\r\n\r\nstruct PerObjectData {\r\n    entries: array<PerObjectDataEntry>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var<storage, read> perObjectData : PerObjectData;\r\n\r\nfn quat_transform(q: vec4<f32>, v: vec3<f32>) -> vec3<f32> {\r\n    return v + 2 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\r\n}\r\n\r\n@vertex\r\nfn main(@location(0) inputPosition: vec3<f32>, @location(3) paramsIndex: f32) -> @builtin(position) vec4<f32> {\r\n    var index = u32(paramsIndex);\r\n\r\n    var quat_scale = perObjectData.entries[index].quat_scale;\r\n    var translation_atlasNum = perObjectData.entries[index].translation_atlasNum;\r\n\r\n    var scale = quat_scale.w;\r\n\r\n    var translation = translation_atlasNum.xyz;\r\n    var atlasNum = translation_atlasNum.w;\r\n\r\n    var quat_xyz = quat_scale.xyz;\r\n    var s = length(quat_xyz);\r\n    var quat = vec4(quat_xyz, sqrt(1.0 - s * s));\r\n\r\n    var fragPosition = settings.viewProjection_shadow_far * vec4(quat_transform(quat, inputPosition) * scale + translation, 1.0);\r\n\r\n    return fragPosition;\r\n}";

var contactShadowsFrag = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    viewProjection_inv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n    cameraPosition: vec3<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var depthBufferScreenSpace: texture_depth_2d;\r\n@group(0) @binding(2) var depthBuffersLightSource: texture_depth_2d_array;\r\n@group(0) @binding(3) var comparisonSampler: sampler_comparison;\r\n\r\n@fragment\r\nfn main(@builtin(position) screenPosInPixels: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>) -> @location(0) f32 {\r\n\r\n    const randomVectors = array(\r\n        vec2(0.493393, 0.394269),\r\n        vec2(0.798547, 0.885922),\r\n        vec2(0.247322, 0.926450),\r\n        vec2(0.0514542013, 0.140782),\r\n        vec2(0.831843, 0.00955228973),\r\n        vec2(0.428632, 0.0171514004),\r\n        vec2(0.015656, 0.749779),\r\n        vec2(0.758385, 0.496170),\r\n        vec2(0.223487, 0.562151),\r\n        vec2(0.0116275996, 0.406995),\r\n        vec2(0.241462, 0.304636),\r\n        vec2(0.430311, 0.727226),\r\n        vec2(0.981811, 0.278359),\r\n        vec2(0.407056, 0.500534),\r\n        vec2(0.123478, 0.463546),\r\n        vec2(0.809534, 0.682272),    \r\n    );\r\n\r\n    const NEAR_BIAS = 0.0045;\r\n    const FAR_BIAS = 0.005;\r\n\r\n    const MAX_DEPTH_SQ = 10000.0 * 10000.0;\r\n\r\n    const randomVectorLength = 4.0 / 4096.0;\r\n\r\n    const nearDepthBufferLimitZ = 0.986808896064758;\r\n    const farDepthBufferLimitZ = 0.998557209968567;\r\n    const depthBufferLimitZ = 0.998557209968567;\r\n    const nearFarBorderZ = 0.983973801136017;\r\n\r\n    var screenPosition: vec4<f32>;\r\n    screenPosition.z = textureLoad(depthBufferScreenSpace, vec2<i32>(floor(screenPosInPixels.xy)), 0);\r\n    if (screenPosition.z >= depthBufferLimitZ) {\r\n        discard;\r\n    }\r\n\r\n    var uv = screenPosInPixels.xy * settings.invScreenResolution;\r\n    screenPosition.x = uv.x * 2 - 1;\r\n    screenPosition.y = (1 - uv.y) * 2 - 1;\r\n    screenPosition.w = 1;\r\n\r\n    var worldPosition = settings.viewProjection_inv * screenPosition;\r\n    // do full matrix tranform\r\n    worldPosition.x /= worldPosition.w;\r\n    worldPosition.y /= worldPosition.w;\r\n    worldPosition.z /= worldPosition.w;\r\n    worldPosition.w = 1;\r\n\r\n    var positionFromCamera = worldPosition.xyz - settings.cameraPosition;\r\n\r\n    var distanceFromCameraSq = dot(positionFromCamera, positionFromCamera);\r\n    var normalizedDistanceFromCamera = saturate(distanceFromCameraSq / MAX_DEPTH_SQ);\r\n\r\n    normalizedDistanceFromCamera =\r\n        1 - (normalizedDistanceFromCamera * normalizedDistanceFromCamera * normalizedDistanceFromCamera *\r\n                normalizedDistanceFromCamera * normalizedDistanceFromCamera * normalizedDistanceFromCamera *\r\n                normalizedDistanceFromCamera * normalizedDistanceFromCamera); // ^8\r\n\r\n    var shouldUseFarDepthBuffer = screenPosition.z >= nearDepthBufferLimitZ;\r\n\r\n    var levelToUse: u32; \r\n    var bias: f32;\r\n    var depthBufferVP: mat4x4<f32>;\r\n    if (shouldUseFarDepthBuffer) {\r\n        depthBufferVP = settings.viewProjection_shadow_far;\r\n        bias = FAR_BIAS;\r\n        levelToUse = 1;\r\n    } else {\r\n        depthBufferVP = settings.viewProjection_shadow_near;\r\n        bias = NEAR_BIAS;\r\n        levelToUse = 0;\r\n    }\r\n    \r\n    var depthBufferPos = depthBufferVP * worldPosition;\r\n    var uvForDepthBuffer = depthBufferPos.xy * 0.5 + 0.5;\r\n    uvForDepthBuffer.y = 1 - uvForDepthBuffer.y;\r\n    var transformedDepthValue = depthBufferPos.z - bias;\r\n\r\n    var someAccumulatedValue0 = 0.0;\r\n    // sample 4x4 random places\r\n    for (var counter = 0; counter < 8; counter++) {\r\n        var vec0 = randomVectors[counter * 2] * 2 - 1;\r\n        var vec1 = randomVectors[counter * 2 + 1] * 2 - 1;\r\n\r\n        var uv0 = uvForDepthBuffer + vec0 * randomVectorLength;\r\n        var uv1 = uvForDepthBuffer + vec1 * randomVectorLength;\r\n\r\n        var depthCmpValue0 =\r\n            textureSampleCompare(depthBuffersLightSource, comparisonSampler, uv0, levelToUse, transformedDepthValue);\r\n        var depthCmpValue1 =\r\n            textureSampleCompare(depthBuffersLightSource, comparisonSampler, uv1, levelToUse, transformedDepthValue);\r\n\r\n        someAccumulatedValue0 += depthCmpValue0 + depthCmpValue1;\r\n    }\r\n    someAccumulatedValue0 /= 16.0;\r\n\r\n    var farDepthBufferPos = settings.viewProjection_shadow_far * worldPosition;\r\n\r\n    uvForDepthBuffer = farDepthBufferPos.xy * 0.5 + 0.5;\r\n    uvForDepthBuffer.y = 1 - uvForDepthBuffer.y;\r\n    transformedDepthValue = farDepthBufferPos.z - FAR_BIAS;\r\n\r\n    var someAccumulatedValue1 = 0.0;\r\n    for (var counter = 0; counter < 8; counter++) {\r\n        var vec0 = randomVectors[counter * 2] * 2 - 1;\r\n        var vec1 = randomVectors[counter * 2 + 1] * 2 - 1;\r\n\r\n        var uv0 = uvForDepthBuffer + vec0 * randomVectorLength;\r\n        var uv1 = uvForDepthBuffer + vec1 * randomVectorLength;\r\n\r\n        var depthCmpValue0 =\r\n            textureSampleCompare(depthBuffersLightSource, comparisonSampler, uv0, 1, transformedDepthValue);\r\n        var depthCmpValue1 =\r\n            textureSampleCompare(depthBuffersLightSource, comparisonSampler, uv1, 1, transformedDepthValue);\r\n\r\n        someAccumulatedValue1 += depthCmpValue0 + depthCmpValue1;\r\n    }\r\n    \r\n    if (levelToUse < 1 && screenPosition.z >= nearFarBorderZ) {\r\n        someAccumulatedValue1 /= 16.0;\r\n\r\n        // how much shadow is from border to farDepth limit\r\n        var t: f32 = saturate((screenPosition.z - nearFarBorderZ) / (nearDepthBufferLimitZ - nearFarBorderZ));\r\n        t = 3 * t * t - 2 * t * t * t;\r\n\r\n        someAccumulatedValue0 += (someAccumulatedValue1 - someAccumulatedValue0) * t;\r\n    }\r\n\r\n    var output = 1 + normalizedDistanceFromCamera * (someAccumulatedValue0 - 1);\r\n    if (output < 0) {\r\n        discard;\r\n    }\r\n    \r\n    return output;\r\n}";

var volumetricInitComp = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    viewProjection_inv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n    cameraPosition: vec3<f32>,\r\n    sunDirection: vec3<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@group(0) @binding(1) var point_clamp_sampler: sampler;\r\n@group(0) @binding(2) var linear_clamp_sampler: sampler;\r\n@group(0) @binding(3) var linear_mirror_sampler: sampler;\r\n\r\n@group(0) @binding(4) var depthBuffersLightSource: texture_depth_2d_array;\r\n@group(0) @binding(5) var curve: texture_2d<f32>;\r\n@group(0) @binding(6) var randomData: texture_3d<f32>;\r\n\r\n@group(0) @binding(7) var swapChain0: texture_storage_3d<rgba16float, write>;\r\n@group(0) @binding(8) var swapChain1: texture_storage_3d<rgba16float, write>;\r\n\r\nfn unpack(v: vec4<f32>) -> f32 {\r\n    return dot(v, vec4(1.0, 1/255.0, 1/65025.0, 1/160581375.0));\r\n}\r\n\r\n@compute @workgroup_size(32, 32)\r\nfn main(@builtin(global_invocation_id) threadNum : vec3<u32>) {\r\n    const randomVectors: array<vec3<f32>, 8> = array(\r\n        vec3(0, 0, 0),\r\n        vec3(0, 0, 1),\r\n        vec3(0, 1, 0),\r\n        vec3(0, 1, 1),\r\n        vec3(1, 0, 0),\r\n        vec3(1, 0, 1),\r\n        vec3(1, 1, 0),\r\n        vec3(1, 1, 1),\r\n    );\r\n\r\n    const normalizer: vec3<f32> = vec3(320, 192, 90);\r\n\r\n    const randomVectorIndex = 3.0; // TODO randomize, changes each frame 0..7\r\n    const randomMul = 0.1;\r\n\r\n    const unknownMul0 = 0.85;\r\n    const unknownMul1 = 0.85;\r\n    const randomFinalMul = 0.3;\r\n\r\n    const nearDepthBufferLimitZ = 0.986808896064758;\r\n    const farDepthBufferLimitZ = 0.998557209968567;\r\n    const depthBufferLimitZ = 0.998557209968567;\r\n\r\n    var coordIn3DTexture = vec3<f32>(threadNum) / normalizer + randomVectors[u32(randomVectorIndex)] * 0.001;\r\n\r\n    var screenPosition = vec4(\r\n        coordIn3DTexture.x * 2 - 1,\r\n        (1 - coordIn3DTexture.y) * 2 - 1,\r\n        unpack(textureSampleLevel(curve, linear_clamp_sampler, vec2(coordIn3DTexture.z, 0), 0)), \r\n        1\r\n    );\r\n\r\n    var worldPosition = settings.viewProjection_inv * screenPosition;\r\n    worldPosition /= worldPosition.w;\r\n    \r\n    var screenSpaceZ = screenPosition.z;\r\n    if (screenSpaceZ < depthBufferLimitZ) {\r\n        var shouldUseFarDepthBuffer = screenSpaceZ >= nearDepthBufferLimitZ;\r\n\r\n        var levelToUse: u32; \r\n        var bias: f32;\r\n        var depthBufferVP: mat4x4<f32>;\r\n        if (shouldUseFarDepthBuffer) {\r\n            depthBufferVP = settings.viewProjection_shadow_far;\r\n            bias = 0;\r\n            levelToUse = 1;\r\n        } else {\r\n            depthBufferVP = settings.viewProjection_shadow_near;\r\n            bias = 0.01;\r\n            levelToUse = 0;\r\n        }\r\n\r\n        var temp = (depthBufferVP * worldPosition).xyz;\r\n        var depthBufferCoord = temp.xy * 0.5 + 0.5;\r\n        depthBufferCoord.y = 1 - depthBufferCoord.y;\r\n\r\n        var transformedDepthValue = temp.z - bias;\r\n\r\n        var lightSourceDepthValue = textureSampleLevel(depthBuffersLightSource, point_clamp_sampler, depthBufferCoord, levelToUse, 0);\r\n        if (lightSourceDepthValue < transformedDepthValue) {\r\n            textureStore(swapChain0, threadNum, vec4(0.0, 0.0, 0.0, 0.0));\r\n            textureStore(swapChain1, threadNum, vec4(0.0, 0.0, 0.0, 0.0));\r\n            return;\r\n        }\r\n    }\r\n\r\n    var relativeWorldPosition = worldPosition.xyz - settings.cameraPosition;\r\n\r\n    var coordInRandomData = worldPosition.xyz * randomMul / 80;\r\n    var randomValue = textureSampleLevel(randomData, linear_mirror_sampler, coordInRandomData, 0).x;\r\n\r\n    var clampedTransformedZ = saturate(relativeWorldPosition.z / 150.0);\r\n    var stretchedClampedTransformedZ = 3 - 2 * clampedTransformedZ;\r\n    clampedTransformedZ = 1 - 0.75 * stretchedClampedTransformedZ * clampedTransformedZ * clampedTransformedZ;\r\n\r\n    var randomComponent = randomFinalMul * (randomValue * clampedTransformedZ - 1) + 1;\r\n    \r\n    var directionToPosition = -normalize(relativeWorldPosition);\r\n    var someCos = dot(directionToPosition, settings.sunDirection);\r\n\r\n    var result = randomComponent * (unknownMul0 * ((1 - unknownMul1 * unknownMul1) / (12.56637 * (1 - unknownMul1 * someCos)) - 1) + 1);\r\n\r\n    textureStore(swapChain0, threadNum, vec4(result, 0.0, 0.0, 0.0));\r\n    textureStore(swapChain1, threadNum, vec4(result, 0.0, 0.0, 0.0));\r\n}";

var volumetricAddComp = "@group(0) @binding(0) var<uniform> z: u32;\r\n@group(0) @binding(1) var input: texture_3d<f32>;\r\n@group(0) @binding(2) var output: texture_storage_3d<rgba16float, write>;\r\n\r\n@compute @workgroup_size(32, 32)\r\nfn main(@builtin(global_invocation_id) threadNum : vec3<u32>) {\r\n\tvar prevCoord = vec3(threadNum.xy, z - 1);\r\n\tvar currentCoord = vec3(threadNum.xy, z);\r\n\r\n\tvar prevValue = textureLoad(input, prevCoord, 0).x;\r\n\ttextureStore(output, prevCoord, vec4(prevValue, 0, 0, 0));\r\n\r\n    // TODO use uniform\r\n    if (z < 90) {\r\n        var currentValue = textureLoad(input, currentCoord, 0).x;\r\n        textureStore(output, currentCoord, vec4(currentValue + prevValue, 0, 0, 0));\r\n    }\r\n}";

var volumetricComposeFrag = "@group(0) @binding(0) var point_clamp_sampler: sampler;\r\n@group(0) @binding(1) var linear_clamp_sampler: sampler;\r\n\r\n@group(0) @binding(2) var dithering: texture_2d<f32>;\r\n@group(0) @binding(3) var depthBuffer: texture_depth_2d;\r\n@group(0) @binding(4) var volumetricLightBuffer: texture_3d<f32>;\r\n@group(0) @binding(5) var curve: texture_2d<f32>;\r\n\r\nfn unpack(v: vec4<f32>) -> f32 {\r\n    return dot(v, vec4(1.0, 1/255.0, 1/65025.0, 1/160581375.0));\r\n}\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPos: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n) -> @location(0) f32 {\r\n    const lightMul = 0.0353660732507706;\r\n    const reverseDepthMul = 0.75;\r\n\r\n    var screenDepth = textureLoad(depthBuffer, vec2<i32>(floor(screenPos.xy)), 0);\r\n    var curvedDepth = clamp(unpack(textureSampleLevel(curve, linear_clamp_sampler, vec2(screenDepth, 0), 0)), 0, 0.9999);\r\n    \r\n    var volumetricBufferCoord = vec3(fragUV, curvedDepth);\r\n    var lightValue = textureSampleLevel(volumetricLightBuffer, linear_clamp_sampler, volumetricBufferCoord, 0).x * lightMul;\r\n\r\n    var ditherValue = textureSample(dithering, point_clamp_sampler, 0.125 * screenPos.xy).x;\r\n    var ditheredLightValue = (ditherValue * 0.03125 + lightValue) - 0.0078125;\r\n\r\n    if (false && reverseDepthMul >= 0.001) {\r\n        // TODO\r\n        return 0;\r\n    } else {\r\n        return ditheredLightValue;\r\n    }\r\n}";

var volumetricHSmoothComp = "var<workgroup> volumetricValues: array<f32, 990>;\r\nvar<workgroup> depthValues: array<f32, 990>;\r\n\r\n@group(0) @binding(0) var<uniform> resolution: vec2<i32>;\r\n\r\n@group(0) @binding(1) var volumetricScreenSpace: texture_2d<f32>;\r\n@group(0) @binding(2) var depthBuffer: texture_depth_2d;\r\n\r\n@group(0) @binding(3) var output: texture_storage_2d<r32float, write>;\r\n\r\n@compute @workgroup_size(990)\r\nfn main(@builtin(local_invocation_id) threadNum : vec3<u32>, @builtin(workgroup_id) dispatchNums: vec3<u32>) {\r\n\tvar currentOffsetX = i32(threadNum.x) - 15;\r\n\tvar pixelX = i32(dispatchNums.x) * 960 + currentOffsetX;\r\n\tvar pixelY = i32(dispatchNums.y);\r\n\r\n\tvar pixelCoord = clamp(vec2(pixelX, pixelY), vec2(0, 0), resolution);\r\n\r\n\tvar volumetricValue = textureLoad(volumetricScreenSpace, pixelCoord, 0).x;\r\n\tvar depth = textureLoad(depthBuffer, pixelCoord, 0);\r\n\r\n\t// cache the values\r\n\tvolumetricValues[threadNum.x] = volumetricValue;\r\n\tdepthValues[threadNum.x] = depth;\r\n\r\n    workgroupBarrier();\r\n\r\n\tif (currentOffsetX >= 0 && currentOffsetX < 960) {\r\n\t\tvar neighbors = vec4<i32>(threadNum.xxxx) + vec4(-12, -6, 6, 12);\r\n\r\n\t\tvar depthDifferenceAcrossNeighbors = depth * 4 -\r\n\t\t\tdepthValues[neighbors.x] -\r\n\t\t\tdepthValues[neighbors.y] -\r\n\t\t\tdepthValues[neighbors.z] -\r\n\t\t\tdepthValues[neighbors.w];\r\n\r\n\t\tif (abs(depthDifferenceAcrossNeighbors) < 0.002) {\r\n\t\t\tvolumetricValue = volumetricValue * 0.222338006 +\r\n\t\t\t\tvolumetricValues[neighbors.x] * 0.178399995 +\r\n\t\t\t\tvolumetricValues[neighbors.y] * 0.210430995 +\r\n\t\t\t\tvolumetricValues[neighbors.z] * 0.210430995 +\r\n\t\t\t\tvolumetricValues[neighbors.w] * 0.178399995;\r\n\t\t}\r\n\r\n        textureStore(output, pixelCoord, vec4(volumetricValue, volumetricValue, volumetricValue, volumetricValue));\r\n\t}\r\n}";

var volumetricVSmoothComp = "var<workgroup> volumetricValues: array<f32, 570>;\r\nvar<workgroup> depthValues: array<f32, 570>;\r\n\r\n@group(0) @binding(0) var<uniform> resolution: vec2<i32>;\r\n\r\n@group(0) @binding(1) var volumetricScreenSpace: texture_2d<f32>;\r\n@group(0) @binding(2) var depthBuffer: texture_depth_2d;\r\n\r\n@group(0) @binding(3) var output: texture_storage_2d<r32float, write>;\r\n\r\n@compute @workgroup_size(1, 570)\r\nfn main(@builtin(local_invocation_id) threadNum : vec3<u32>, @builtin(workgroup_id) dispatchNums: vec3<u32>) {\r\n\tvar currentOffsetY = i32(threadNum.y) - 15;\r\n\tvar pixelY = i32(dispatchNums.y) * 540 + currentOffsetY;\r\n\tvar pixelX = i32(dispatchNums.x);\r\n\r\n\tvar pixelCoord = clamp(vec2(pixelX, pixelY), vec2(0, 0), resolution);\r\n\r\n\tvar volumetricValue = textureLoad(volumetricScreenSpace, pixelCoord, 0).x;\r\n\tvar depth = textureLoad(depthBuffer, pixelCoord, 0);\r\n\r\n\t// cache the values\r\n\tvolumetricValues[threadNum.y] = volumetricValue;\r\n\tdepthValues[threadNum.y] = depth;\r\n\r\n    workgroupBarrier();\r\n\r\n\tif (currentOffsetY >= 0 && currentOffsetY < 540) {\r\n\t\tvar neighbors = vec4<i32>(threadNum.yyyy) + vec4(-12, -6, 6, 12);\r\n\r\n\t\tvar depthDifferenceAcrossNeighbors = depth * 4 -\r\n\t\t\tdepthValues[neighbors.x] -\r\n\t\t\tdepthValues[neighbors.y] -\r\n\t\t\tdepthValues[neighbors.z] -\r\n\t\t\tdepthValues[neighbors.w];\r\n\r\n\t\tif (abs(depthDifferenceAcrossNeighbors) < 0.002) {\r\n\t\t\tvolumetricValue = volumetricValue * 0.222338006 +\r\n\t\t\t\tvolumetricValues[neighbors.x] * 0.178399995 +\r\n\t\t\t\tvolumetricValues[neighbors.y] * 0.210430995 +\r\n\t\t\t\tvolumetricValues[neighbors.z] * 0.210430995 +\r\n\t\t\t\tvolumetricValues[neighbors.w] * 0.178399995;\r\n\t\t}\r\n\r\n        textureStore(output, pixelCoord, vec4(volumetricValue, volumetricValue, volumetricValue, volumetricValue));\r\n\t}\r\n}";

var volumetricPostprocessFrag = "@group(0) @binding(0) var volumetricLightScreenBuffer: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPos: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n) -> @location(0) vec4<f32> {\r\n    const volumetricLightColor = vec3(0.738756477832794, 0.557605266571045, 0.47399827837944);\r\n\r\n    var light = textureLoad(volumetricLightScreenBuffer, vec2<i32>(floor(screenPos.xy)), 0).x;\r\n\r\n    return vec4(volumetricLightColor * light, 0);\r\n}";

var objectsVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct PerObjectDataEntry {\r\n    quat_scale: vec4<f32>,\r\n    translation_atlasNum: vec4<f32>,\r\n}\r\n\r\nstruct PerObjectData {\r\n    entries: array<PerObjectDataEntry>,\r\n}\r\n\r\nstruct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n    @location(2) @interpolate(flat) fragAtlasNum: u32,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var<storage, read> perObjectData : PerObjectData;\r\n\r\nfn quat_transform(q: vec4<f32>, v: vec3<f32>) -> vec3<f32> {\r\n    return v + 2 * cross(q.xyz, cross(q.xyz, v) + q.w * v);\r\n}\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputNormal: vec3<f32>,\r\n    @location(2) inputUV: vec2<f32>,\r\n    @location(3) paramsIndex: f32,\r\n) -> VertexOutput {\r\n    var index = u32(paramsIndex);\r\n\r\n    var quat_scale = perObjectData.entries[index].quat_scale;\r\n    var translation_atlasNum = perObjectData.entries[index].translation_atlasNum;\r\n\r\n    var scale = quat_scale.w;\r\n\r\n    var translation = translation_atlasNum.xyz;\r\n    var atlasNum = translation_atlasNum.w;\r\n\r\n    var quat_xyz = quat_scale.xyz;\r\n    var s = length(quat_xyz);\r\n    var quat = vec4(quat_xyz, sqrt(1.0 - s * s));\r\n\r\n    var output: VertexOutput;\r\n    output.fragPosition = settings.viewProjection * vec4(quat_transform(quat, inputPosition) * scale + translation, 1.0);\r\n    output.fragNormal = quat_transform(quat, inputNormal);\r\n    output.fragUV = inputUV;\r\n    output.fragAtlasNum = u32(atlasNum);\r\n\r\n    return output;\r\n}";

var objectsFrag = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    viewProjection_inv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n    cameraPosition: vec3<f32>,\r\n    sunDirection: vec3<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(2) var atlasSampler: sampler;\r\n@group(0) @binding(3) var atlases: texture_2d_array<f32>;\r\n@group(0) @binding(4) var contactShadowTexture: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPosInPixels: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n    @location(2) @interpolate(flat) fragAtlasNum: u32,\r\n) -> @location(0) vec4<f32> {\r\n    var screenSpaceShadowValue = textureLoad(contactShadowTexture, vec2<i32>(floor(screenPosInPixels.xy)), 0).r;\r\n\r\n    var lightDir = settings.sunDirection;\r\n    var lightColor = vec3(1.);\r\n\r\n    var amountOfSunLight = saturate(dot(-fragNormal, lightDir));\r\n    var diffuse = screenSpaceShadowValue * amountOfSunLight * lightColor;\r\n\r\n    var ambient = 0.3;\r\n\r\n    var objectColor = textureSample(atlases, atlasSampler, fragUV, fragAtlasNum);\r\n\r\n    var outputColor = vec4(min(ambient + diffuse, vec3(1)) * objectColor.rgb, objectColor.a);\r\n\r\n    return outputColor;\r\n}";

var skydomeVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragColor: vec4<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputColor: vec4<f32>,\r\n) -> VertexOutput {\r\n    var output: VertexOutput;\r\n\r\n    var pos = settings.viewProjection_inplace * vec4(inputPosition, 1.0);\r\n    pos.z = pos.w;\r\n    // max in depth\r\n    output.fragPosition = pos;\r\n\r\n    var rWeight = vec3(0.391360133886337, 0.386311918497086, 0.389162868261337);\r\n    var gWeight = vec3(0.398082792758942, 0.398599475622177, 0.403697550296783);\r\n    var bWeight = vec3(0.140491753816605, 0.252542823553085, 0.296034902334213);\r\n    var alpha = 0.833333313465118;\r\n\r\n    var tintedColor = rWeight * inputColor.r + gWeight * inputColor.g + bWeight * inputColor.b;\r\n\r\n    output.fragColor = vec4(tintedColor * alpha, inputColor.a);\r\n\r\n    return output;\r\n}";

var skydomeFrag = "@group(0) @binding(1) var pointRepeatSampler: sampler;\r\n@group(0) @binding(2) var dithering: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) gl_FragCoord: vec4<f32>,\r\n    @location(0) fragColor: vec4<f32>\r\n) -> @location(0) vec4<f32> {\r\n\tvar UV = gl_FragCoord.xy / 8.0;\r\n\tvar ditheringValue = textureSample(dithering, pointRepeatSampler, UV).r * 0.03125 - 0.0078125;\r\n\r\n    var colorOffset = 0.0107804285362363;\r\n\tvar offsettedColor = colorOffset + fragColor.rgb;\r\n\tvar outputColor = vec4(offsettedColor + ditheringValue, fragColor.a);\r\n\r\n    return outputColor;\r\n}";

var sunVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragColor: vec4<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputColor: vec4<f32>,\r\n    @location(2) inputUV: vec2<f32>,\r\n) -> VertexOutput {\r\n    var output: VertexOutput;\r\n\r\n    var pos = settings.viewProjection_sun * vec4(inputPosition, 1.0);\r\n    pos.z = pos.w;\r\n    // max in depth\r\n    output.fragPosition = pos;\r\n\r\n    output.fragUV = inputUV;\r\n\r\n    var rWeight = vec3(0.327245563268662, 0.148633718490601, 0.0669654905796051);\r\n    var gWeight = vec3(0.0, 0.0, 0.0);\r\n    var bWeight = vec3(0.0, 0.0, 0.0);\r\n    var alpha = 0.833333313465118;\r\n\r\n    var tintedColor: vec3<f32> = rWeight * inputColor.r + gWeight * inputColor.g + bWeight * inputColor.b;\r\n\r\n    output.fragColor = vec4(tintedColor * alpha, inputColor.a);\r\n    \r\n    return output;\r\n}";

var sunFrag = "@group(0) @binding(1) var linearSampler: sampler;\r\n@group(0) @binding(2) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(0) fragColor: vec4<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n) -> @location(0) vec4<f32> {\r\n    var color = textureSample(tex, linearSampler, fragUV);\r\n\r\n\treturn fragColor * color;\r\n}";

var passthroughVert = "struct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n}\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputNormal: vec3<f32>,\r\n    @location(2) inputUV: vec2<f32>,\r\n) -> VertexOutput {\r\n    var output: VertexOutput;\r\n\r\n    output.fragPosition = vec4(inputPosition, 1.0);\r\n    output.fragNormal = inputNormal;\r\n    output.fragUV = inputUV;\r\n\r\n    return output;\r\n}";

var passthroughFrag = "@group(0) @binding(0) var linearSampler: sampler;\r\n@group(0) @binding(1) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) fragUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    return textureSample(tex, linearSampler, fragUV);\r\n}";

var passthroughTexFrag = "@group(0) @binding(0) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) fragUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    var color = textureLoad(tex, vec2<i32>(floor(fragUV * vec2(2, 2))), 0).rgb;\r\n\r\n    return vec4(color, 0.5);\r\n}";

var passthroughDepthFrag = "@group(0) @binding(0) var linearSampler: sampler;\r\n@group(0) @binding(1) var tex: texture_depth_2d;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) fragUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    var depth = textureSample(tex, linearSampler, fragUV);\r\n    return vec4(depth, depth, depth, 1);\r\n}";

var passthroughFrag_Debug = "@group(0) @binding(0) var linearSampler: sampler;\r\n@group(0) @binding(1) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) fragUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    var f = textureSample(tex, linearSampler, fragUV.xy).x;\r\n    var c = 0.0 + fragUV.y * 0.01 + f * 0;\r\n    return vec4(c, c, c, 1);\r\n}";

var downsample4Frag = "struct Settings {\r\n    invResolution: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var linearSampler: sampler; // linear, clamp\r\n@group(0) @binding(2) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) inputUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    const neighbors: array<vec2<f32>, 4> = array(\r\n\t\tvec2(-1, -1),\r\n\t\tvec2( 1, -1),\r\n\t\tvec2( 1,  1),\r\n\t\tvec2(-1,  1),\r\n    );\r\n\r\n    var outputAlpha = 0.0;\r\n\r\n\tvar acum = vec3(0.0);\r\n\tfor (var i = 0; i < 4; i++) {\r\n\t\tvar neighborUV = neighbors[i] * settings.invResolution + inputUV;\r\n\r\n        var sampledColor = textureSample(tex, linearSampler, neighborUV).rgb;\r\n\r\n\t\tacum += sampledColor * 0.25;\r\n\t}\r\n\r\n    return vec4(acum, outputAlpha);\r\n}";

var downsample4ExtractBrightnessFrag = "struct Settings {\r\n    invResolution: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var linearSampler: sampler; // linear, clamp\r\n@group(0) @binding(2) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) inputUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    const neighbors: array<vec2<f32>, 4> = array(\r\n\t\tvec2(-1, -1),\r\n\t\tvec2( 1, -1),\r\n\t\tvec2( 1,  1),\r\n\t\tvec2(-1,  1),\r\n    );\r\n\r\n    var outputAlpha = 0.0;\r\n\r\n\tvar acum = vec3(0.0);\r\n\tfor (var i = 0; i < 4; i++) {\r\n\t\tvar neighborUV = neighbors[i] * settings.invResolution + inputUV;\r\n\r\n        var sampledColor = textureSample(tex, linearSampler, neighborUV).rgb;\r\n\r\n\t\tvar brightness = dot(vec3(0.2125, 0.7154, 0.0721), sampledColor);\r\n\r\n\t\tacum += brightness * 0.25;\r\n\t}\r\n\r\n    return vec4(acum, outputAlpha);\r\n}";

var downsample16Frag = "struct Settings {\r\n    invResolution: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var linearSampler: sampler; // linear, clamp\r\n@group(0) @binding(2) var tex: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) inputUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    const neighbors: array<vec2<f32>, 16> = array(\r\n\t\tvec2(-1.5, -1.5),\r\n\t\tvec2(-0.5, -1.5),\r\n\t\tvec2( 0.5, -1.5),\r\n\t\tvec2( 1.5, -1.5),\r\n\r\n\t\tvec2(-1.5, -0.5),\r\n\t\tvec2(-0.5, -0.5),\r\n\t\tvec2( 0.5, -0.5),\r\n\t\tvec2( 1.5, -0.5),\r\n        \r\n\t\tvec2(-1.5,  0.5),\r\n\t\tvec2(-0.5,  0.5),\r\n\t\tvec2( 0.5,  0.5),\r\n\t\tvec2( 1.5,  0.5),\r\n\r\n\t\tvec2(-1.5,  1.5),\r\n\t\tvec2(-0.5,  1.5),\r\n\t\tvec2( 0.5,  1.5),\r\n\t\tvec2( 1.5,  1.5),\r\n    );\r\n\r\n    var outputAlpha = 0.0;\r\n\r\n\tvar acum = vec3(0.0);\r\n\tfor (var i = 0; i < 16; i++) {\r\n\t\tvar neighborUV = neighbors[i] * settings.invResolution + inputUV;\r\n\r\n        var sampledColor = textureSample(tex, linearSampler, neighborUV).rgb;\r\n\r\n\t\tacum += sampledColor * 0.0625;\r\n\t}\r\n\r\n    return vec4(acum, outputAlpha);\r\n}";

var downsample16ExtractDiffFrag = "struct Settings {\r\n    invResolution: vec2<f32>,\r\n    timeCoeffs: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n@group(0) @binding(1) var linearSampler: sampler; // linear, clamp\r\n@group(0) @binding(2) var pointSampler: sampler; // point, clamp\r\n@group(0) @binding(3) var tex: texture_2d<f32>;\r\n@group(0) @binding(4) var prevOutput: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @location(1) inputUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    const neighbors: array<vec2<f32>, 16> = array(\r\n\t\tvec2(-1.5, -1.5),\r\n\t\tvec2(-0.5, -1.5),\r\n\t\tvec2( 0.5, -1.5),\r\n\t\tvec2( 1.5, -1.5),\r\n\r\n\t\tvec2(-1.5, -0.5),\r\n\t\tvec2(-0.5, -0.5),\r\n\t\tvec2( 0.5, -0.5),\r\n\t\tvec2( 1.5, -0.5),\r\n        \r\n\t\tvec2(-1.5,  0.5),\r\n\t\tvec2(-0.5,  0.5),\r\n\t\tvec2( 0.5,  0.5),\r\n\t\tvec2( 1.5,  0.5),\r\n\r\n\t\tvec2(-1.5,  1.5),\r\n\t\tvec2(-0.5,  1.5),\r\n\t\tvec2( 0.5,  1.5),\r\n\t\tvec2( 1.5,  1.5),\r\n    );\r\n\r\n    var outputAlpha = 0.0;\r\n\r\n\tvar acum = vec3(0.0);\r\n\tfor (var i = 0; i < 16; i++) {\r\n\t\tvar neighborUV = neighbors[i] * settings.invResolution + inputUV;\r\n\r\n        var sampledColor = textureSample(tex, linearSampler, neighborUV).rgb;\r\n\r\n\t\tacum += sampledColor * 0.0625;\r\n\t}\r\n\r\n\tvar prevOutputValue = textureSample(prevOutput, pointSampler, inputUV).rg;\r\n\r\n\tvar valueDelta = acum.rg - prevOutputValue;\r\n\tvar multipliedDelta = valueDelta * settings.timeCoeffs;\r\n\r\n\tvar savedSigns: vec2<f32>;\r\n    savedSigns.x = select(1.0, -1.0, multipliedDelta.x < 0.0);\r\n    savedSigns.y = select(1.0, -1.0, multipliedDelta.y < 0.0);\r\n\r\n\tvar clampedDelta = clamp(abs(multipliedDelta), vec2(1.0 / 256.0), abs(valueDelta)) * savedSigns;\r\n\r\n\treturn vec4(prevOutputValue + clampedDelta, acum.b, outputAlpha);\r\n}";

var fogFrag = "@group(0) @binding(0) var sceneColors: texture_2d<f32>;\r\n@group(0) @binding(1) var depthBuffer: texture_depth_2d;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPosInPixels: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n) -> @location(0) vec4<f32> {\r\n\tvar depthOffset = 0.0;\r\n\tvar depthMul = 1.0 / 67870.;\r\n\tvar depthLogMul = 0.4;\r\n\tvar minDepthValue = 0.85;\r\n\r\n\tvar fogBaseColorRGBA = vec4(0.125627145171165, 0.256408363580704, 0.279881805181503, 0.833333313465118);\r\n\tvar maxFogColorRGBA = vec4(0.315368860960007, 0.388478130102158, 0.441431760787964, 0.833333313465118);\r\n\r\n    var depthMin = 15.0;\r\n\tvar depthMax = 353840.0;\r\n\r\n    var sceneColor = textureLoad(sceneColors, vec2<i32>(floor(screenPosInPixels.xy)), 0).rgb;\r\n\r\n    var depthValue = textureLoad(depthBuffer, vec2<i32>(floor(screenPosInPixels.xy)), 0);\r\n\tvar stretchedDepthValue = (depthValue * 1.01 - 0.01) * 2.0 - 1.0;\r\n\r\n\tvar someBullshit = depthMin * depthMax * 2.0;\r\n\r\n    var depthDistanceFromZero = depthMax + depthMin;\r\n    var depthLength = depthMax - depthMin;\r\n\r\n    var depthValueInRangeFromOtherSide = depthDistanceFromZero - stretchedDepthValue * depthLength;\r\n\r\n    var depthPower = someBullshit / depthValueInRangeFromOtherSide;\r\n\r\n\tvar depthMulClamped = min(minDepthValue, exp2(depthLogMul * log2(clamp(depthPower * depthMul - depthOffset, 0.0, 1.0))));\r\n\r\n\tvar fogBaseColor = fogBaseColorRGBA.rgb;\r\n\tvar maxFogColor = maxFogColorRGBA.rgb;\r\n\r\n    var fogColorRange = maxFogColor - fogBaseColor;\r\n    var fogColor = fogBaseColor + vec3(depthMulClamped, depthMulClamped, depthMulClamped) * fogColorRange;\r\n\r\n    var sceneAfterFog = (sceneColor + vec3(depthMulClamped, depthMulClamped, depthMulClamped) * (fogColor - sceneColor)) * fogBaseColorRGBA.a;\r\n\r\n    if (depthValue < 1.0 - 10e-8) {\r\n        sceneColor = sceneAfterFog;\r\n    } else {\r\n        sceneColor = sceneColor;\r\n    }\r\n\r\n    return vec4(saturate(sceneColor), 1.0);\r\n}";

var toneMappingFrag = "\r\n@group(0) @binding(0) var linearSampler: sampler; // linear, clamp\r\n@group(0) @binding(1) var scene: texture_2d<f32>;\r\n@group(0) @binding(2) var brightnessMap: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPosInPixels: vec4<f32>,\r\n    @location(1) fragUV: vec2<f32>\r\n) -> @location(0) vec4<f32> {\r\n    const sunGlareMaxBrightness = 0.622557997703552;\r\n    const brightnessMul = 0.933622539043427;\r\n    const someFlag = 0;\r\n\r\n    const brightnessDeltaMul = 1.5;\r\n\r\n    const unknown_mul_0 = 1.17344582080841;\r\n    const unknown_mul_1 = 1.45914733409882;\r\n\r\n    const someColor_rgb = vec3(0.889478623867035, 0.651335895061493, 0.568432688713074);\r\n    const someColor_a = 0.437744200229645;\r\n\r\n    const logMul = 1.04166674613953;\r\n\r\n    var sceneColor = textureLoad(scene, vec2<i32>(floor(screenPosInPixels.xy)), 0).rgb;\r\n    var pixelBrightness = max(10e-6, dot(vec3(0.2125, 0.7154, 0.0721), sceneColor));\r\n\r\n    var sunGlareColor = vec3(0.0, 0.0, 0.0); // TODO ?\r\n\r\n    var brightnessMapValue = textureSample(brightnessMap, linearSampler, fragUV).xy;\r\n    var brightnessChangeRate = brightnessMapValue.y / brightnessMapValue.x;\r\n    var someBrightness = brightnessChangeRate * pixelBrightness;\r\n    var someBrightnessPlusOne = 1 + someBrightness;\r\n\r\n    var someBrightnessClamped = max(0, someBrightness - 0.004);\r\n\r\n    var lowBrightness = (0.5 + someBrightnessClamped * 6.2) * someBrightnessClamped;\r\n    var highBrightness = 0.06 + (1.7 + someBrightnessClamped * 6.2) * someBrightnessClamped;\r\n\r\n    var brightness1 = exp2(2.2 * log2(lowBrightness / highBrightness)) * brightnessMul;\r\n    var brightness2 = (someBrightness * (1 + someBrightness * brightnessMul)) / someBrightnessPlusOne;\r\n\r\n    var chosenBrightness = select(brightness2, brightness1, someFlag >= 0.5);\r\n\r\n    sunGlareColor = sunGlareColor * saturate(sunGlareMaxBrightness - chosenBrightness);\r\n\r\n    var brightnessAdjustedSceneColor = sceneColor * (chosenBrightness / pixelBrightness) + sunGlareColor;\r\n\r\n    var newBrightness = dot(brightnessAdjustedSceneColor, vec3(0.2125, 0.7154, 0.0721));\r\n\r\n    var deltaMultipliedSceneColor =\r\n        newBrightness + brightnessDeltaMul * (brightnessAdjustedSceneColor - newBrightness);\r\n    var deltaMultipliedSceneColorWithSomeColor =\r\n        deltaMultipliedSceneColor + (someColor_rgb * newBrightness - deltaMultipliedSceneColor) * someColor_a;\r\n\r\n    var deltaMultipliedSceneColorWithSomeColorMultiplied =\r\n        (deltaMultipliedSceneColorWithSomeColor * unknown_mul_0 - brightnessMapValue.x) * unknown_mul_1 +\r\n        brightnessMapValue.x;\r\n\r\n    return  vec4(exp2(logMul * log2(saturate(deltaMultipliedSceneColorWithSomeColorMultiplied))), 0);\r\n}";

var glareVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragColor: vec4<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputColor: vec4<f32>,\r\n    @location(2) inputUV: vec2<f32>,\r\n) -> VertexOutput {\r\n    var output: VertexOutput;\r\n\r\n    var pos = settings.viewProjection_glare * vec4(inputPosition, 1.0);\r\n    pos.z = pos.w;\r\n    // max in depth\r\n    output.fragPosition = pos;\r\n\r\n    output.fragUV = inputUV;\r\n\r\n    var rWeight = vec3(0.565203845500946, 0.228658571839333, 0.0142048010602593);\r\n    var alpha = 0.833333313465118;\r\n\r\n    var tintedColor = rWeight * inputColor.r;\r\n\r\n    output.fragColor = vec4(tintedColor * alpha, inputColor.a);\r\n\r\n    return output;\r\n}";

var glareFrag = "@group(0) @binding(1) var linearSampler: sampler;\r\n@group(0) @binding(2) var pointRepeatSampler: sampler;\r\n@group(0) @binding(3) var glare: texture_2d<f32>;\r\n@group(0) @binding(4) var dithering: texture_2d<f32>;\r\n\r\n@fragment\r\nfn main(\r\n    @builtin(position) screenPosInPixels: vec4<f32>,\r\n    @location(0) fragColor: vec4<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n) -> @location(0) vec4<f32> {\r\n\tvar UV = screenPosInPixels.xy / 8.0;\r\n\tvar ditheringValue = textureSample(dithering, pointRepeatSampler, UV).r * 0.03125 - 0.0078125;\r\n\r\n\tvar colorValue = textureSample(glare, linearSampler, fragUV);\r\n\tvar finalColor = fragColor.rgb * colorValue.rgb;\r\n\r\n\treturn vec4(finalColor + ditheringValue, colorValue.a * fragColor.a);\r\n}";

var blankVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@vertex\r\nfn main(@location(0) inputPosition: vec3<f32>) -> @builtin(position) vec4<f32> {\r\n    // max in depth\r\n    var pos = settings.viewProjection_sun * vec4(inputPosition * 0.04, 1.0);\r\n    pos.z = pos.w * (1 - 10e-5);\r\n    \r\n    return pos;\r\n}";

var blankFrag = "@fragment\r\nfn main() -> @location(0) vec4<f32> {\r\n    return vec4(0.0, 0.0, 0.0, 1.0);\r\n}";

var debugFrustumVert = "struct Settings {\r\n    viewProjection: mat4x4<f32>,\r\n    viewProjection_inplace: mat4x4<f32>,\r\n    viewProjection_sun: mat4x4<f32>,\r\n    viewProjection_glare: mat4x4<f32>,\r\n    viewProjection_shadow_near: mat4x4<f32>,\r\n    viewProjection_shadow_far: mat4x4<f32>,\r\n    viewProjection_shadow_near_uv: mat4x4<f32>,\r\n    viewProjection_shadow_far_uv: mat4x4<f32>,\r\n    invScreenResolution: vec2<f32>,\r\n}\r\n\r\nstruct VertexOutput {\r\n    @builtin(position) fragPosition: vec4<f32>,\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n}\r\n\r\n@group(0) @binding(0) var<uniform> settings: Settings;\r\n\r\n@vertex\r\nfn main(\r\n    @location(0) inputPosition: vec3<f32>,\r\n    @location(1) inputNormal: vec3<f32>,\r\n    @location(2) inputUV: vec2<f32>,\r\n) -> VertexOutput {\r\n    var output: VertexOutput;\r\n    output.fragPosition = settings.viewProjection * vec4(inputPosition, 1);\r\n    output.fragNormal = inputNormal;\r\n    output.fragUV = inputUV;\r\n\r\n    return output;\r\n}";

var debugFrustumFrag = "@fragment\r\nfn main(\r\n    @location(0) fragNormal: vec3<f32>,\r\n    @location(1) fragUV: vec2<f32>,\r\n) -> @location(0) vec4<f32> {\r\n    var lightDir = normalize(vec3(0.656, 0.3, 0.14));\r\n    var lightColor = vec3(1.);\r\n\r\n    var diff = max(dot(fragNormal, lightDir), 0.0);\r\n    var diffuse = diff * lightColor;\r\n\r\n    var ambient = 0.5;\r\n\r\n    var objectColor = vec4(fragUV.x, 0.0, fragUV.y, 0.25);\r\n\r\n    var outputColor = vec4(min(ambient + diffuse, vec3(1)) * objectColor.rgb, objectColor.a);\r\n\r\n    return outputColor;\r\n}";

/* eslint-disable @typescript-eslint/no-non-null-assertion */
const canvasWebGPU = document.createElement("canvas");
const canvas2D = document.createElement("canvas");
const wg = canvasWebGPU.getContext("webgpu");
let wd;
const ctx$1 = canvas2D.getContext("2d");
//"rgba16float"
const presentationFormat = "rgba16float"; // navigator.gpu.getPreferredCanvasFormat()
async function initWebGPU() {
    const adapter = await navigator.gpu.requestAdapter();
    if (!adapter) {
        return;
    }
    wd = await adapter.requestDevice({
        requiredFeatures: ["depth-clip-control", "rg11b10ufloat-renderable"],
        requiredLimits: {
            maxComputeInvocationsPerWorkgroup: 1024,
            maxComputeWorkgroupSizeX: 1024,
            maxComputeWorkgroupSizeY: 1024,
        },
    });
    wg.configure({
        device: wd,
        format: presentationFormat,
        colorSpace: "display-p3",
        alphaMode: "opaque",
    });
}
canvasWebGPU.style.position = "fixed";
document.body.insertBefore(canvas2D, null);
canvas2D.style.pointerEvents = "none";
canvas2D.style.position = "fixed";
document.body.insertBefore(canvasWebGPU, null);

const COLORED_VERTEX_SIZE = 3 + 4;
// pos, normal, uv, pos in per object data
const CHUNK_MESH_VERTEX_SIZE = 3 + 3 + 2 + 1;
const SKINNED_VERTEX_SIZE = 3 + 3 + 2 + 4 + 4;
class Renderable {
    mesh;
    texture;
    rotation = create$2();
    scale = 1;
    position = create$4();
    perObjectDataIndex = undefined;
    atlasNum = undefined;
    constructor(mesh, texture) {
        this.mesh = mesh;
        this.texture = texture;
        mesh.incRef();
        texture.incRef();
    }
}

/* eslint-disable @typescript-eslint/no-non-null-assertion */
const MAX_ATLASES_COUNT = 16;
const ATLAS_SIZE = 2048;
class AtlasRow {
    y;
    height;
    nextX = 0;
    constructor(y, height) {
        this.y = y;
        this.height = height;
    }
}
class Atlas {
    num;
    atlasTexture;
    nextY = 0;
    rows = [];
    constructor(num, atlasTexture) {
        this.num = num;
        this.atlasTexture = atlasTexture;
    }
    findRowForTexture(texture) {
        let smallestRowToFit = undefined;
        // TODO use binary search
        for (const row of this.rows) {
            if (row.height >= texture.height &&
                row.nextX + texture.width <= ATLAS_SIZE &&
                (smallestRowToFit === undefined || smallestRowToFit.height > row.height)) {
                smallestRowToFit = row;
            }
        }
        // can't fit texture in existing rows
        if (smallestRowToFit === undefined) {
            const rowHeight = texture.height;
            if (this.nextY + rowHeight > ATLAS_SIZE) {
                // can't allocate new row this size
                return undefined;
            }
            smallestRowToFit = new AtlasRow(this.nextY, rowHeight);
            this.rows.push(smallestRowToFit);
            this.nextY += rowHeight;
        }
        return smallestRowToFit;
    }
    tryAddTexture(texture) {
        if (texture.width > ATLAS_SIZE || texture.height > ATLAS_SIZE) {
            throw new Error("Texture is larger than Atlas size.");
        }
        const row = this.findRowForTexture(texture);
        if (!row) {
            return undefined;
        }
        const x = row.nextX;
        const y = row.y;
        // TODO generate mipmaps somehow
        wd.queue.writeTexture({
            texture: this.atlasTexture,
            origin: [x, y, this.num],
        }, texture.pixels, {
            offset: 0,
            bytesPerRow: texture.width * 4,
            rowsPerImage: texture.height,
        }, {
            width: texture.width,
            height: texture.height,
        });
        row.nextX += texture.width;
        return [x / ATLAS_SIZE, y / ATLAS_SIZE];
    }
}

class RefCountingResource {
    refCount = 0;
    incRef() {
        this.refCount++;
        return this.refCount;
    }
    decRef() {
        this.refCount--;
        if (this.refCount < 0) {
            throw new Error("Resourse ref count is negative.");
        }
        return this.refCount;
    }
}
class Mesh extends RefCountingResource {
    vertices;
    indices;
    constructor(vertices, indices) {
        super();
        this.vertices = vertices;
        this.indices = indices;
    }
}
class ColoredMesh extends RefCountingResource {
    vertices;
    indices;
    constructor(vertices, indices) {
        super();
        this.vertices = vertices;
        this.indices = indices;
    }
}
class ColoredTexturedMesh extends RefCountingResource {
    vertices;
    indices;
    constructor(vertices, indices) {
        super();
        this.vertices = vertices;
        this.indices = indices;
    }
}
class Texture extends RefCountingResource {
    id;
    pixels;
    width;
    height;
    constructor(id, pixels, width, height) {
        super();
        this.id = id;
        this.pixels = pixels;
        this.width = width;
        this.height = height;
    }
}
class Bone {
    id;
    translation;
    rotation;
    static STRIDE = 1 + 3 + 4;
    static HUMAN_BONES_START = 1000;
    static HUMAN_BONES_COUNT = 13;
    static BONE_NAME_TO_BONE_ID = [
        "Spine",
        "UpperSpine",
        "Neck",
        "UpperLeg.R",
        "LowerLeg.R",
        "Foot.R",
        "UpperLeg.L",
        "LowerLeg.L",
        "Foot.L",
        "UpperArm.R",
        "LowerArm.R",
        "UpperArm.L",
        "LowerArm.L",
    ];
    static SPINE = Bone.nameToId("Spine");
    static UPPER_SPINE = Bone.nameToId("UpperSpine");
    static NECK = Bone.nameToId("Neck");
    static UPPER_LEG_R = Bone.nameToId("UpperLeg.R");
    static LOWER_LEG_R = Bone.nameToId("LowerLeg.R");
    static FOOT_R = Bone.nameToId("Foot.R");
    static UPPER_LEG_L = Bone.nameToId("UpperLeg.L");
    static LOWER_LEG_L = Bone.nameToId("LowerLeg.L");
    static FOOT_L = Bone.nameToId("Foot.L");
    static UPPER_ARM_R = Bone.nameToId("UpperArm.R");
    static LOWER_ARM_R = Bone.nameToId("LowerArm.R");
    static UPPER_ARM_L = Bone.nameToId("UpperArm.L");
    static LOWER_ARM_L = Bone.nameToId("LowerArm.L");
    static HUMAN_SKELETON = Bone.createHumanSkeleton();
    static createHumanSkeleton() {
        const HUMAN_SKELETON = new Map();
        HUMAN_SKELETON.set(Bone.UPPER_SPINE, Bone.SPINE);
        HUMAN_SKELETON.set(Bone.NECK, Bone.UPPER_SPINE);
        HUMAN_SKELETON.set(Bone.LOWER_LEG_R, Bone.UPPER_LEG_R);
        HUMAN_SKELETON.set(Bone.FOOT_R, Bone.LOWER_LEG_R);
        HUMAN_SKELETON.set(Bone.LOWER_LEG_L, Bone.UPPER_LEG_L);
        HUMAN_SKELETON.set(Bone.FOOT_L, Bone.LOWER_LEG_L);
        HUMAN_SKELETON.set(Bone.UPPER_ARM_R, Bone.UPPER_SPINE);
        HUMAN_SKELETON.set(Bone.LOWER_ARM_R, Bone.UPPER_ARM_R);
        HUMAN_SKELETON.set(Bone.UPPER_ARM_L, Bone.UPPER_SPINE);
        HUMAN_SKELETON.set(Bone.LOWER_ARM_L, Bone.UPPER_ARM_L);
        return HUMAN_SKELETON;
    }
    static idToName(id) {
        return Bone.BONE_NAME_TO_BONE_ID[id - Bone.HUMAN_BONES_START];
    }
    static nameToId(name) {
        const index = Bone.BONE_NAME_TO_BONE_ID.indexOf(name);
        if (index === -1) {
            throw new Error("Unknown bone");
        }
        return Bone.HUMAN_BONES_START + index;
    }
    static getHumanBoneParent(id) {
        return Bone.HUMAN_SKELETON.get(id);
    }
    constructor(id, translation, rotation) {
        this.id = id;
        this.translation = translation;
        this.rotation = rotation;
    }
}
class Model {
    vertices;
    indices;
    bones;
    inverseMatrices;
    boneIdToBoneIndex;
    constructor(vertices, indices, bones) {
        this.vertices = vertices;
        this.indices = indices;
        this.bones = bones;
        this.inverseMatrices = new Array(bones.length);
        this.boneIdToBoneIndex = new Map();
        for (let i = 0; i < bones.length; i++) {
            this.boneIdToBoneIndex.set(bones[i].id, i);
        }
        this.buildInverseMatrices();
    }
    getBoneIndex(id) {
        return this.boneIdToBoneIndex.get(id);
    }
    getBone(id) {
        const index = this.getBoneIndex(id);
        if (index === undefined) {
            return null;
        }
        return this.bones[index];
    }
    getBoneParent(id) {
        const parentId = Bone.getHumanBoneParent(id);
        if (parentId === undefined) {
            return null;
        }
        const parentIndex = this.getBoneIndex(parentId);
        if (parentIndex === undefined) {
            throw new Error("Unknown bone");
        }
        return this.bones[parentIndex];
    }
    getBoneParentIndex(id) {
        const parentId = Bone.getHumanBoneParent(id);
        if (parentId === undefined) {
            return undefined;
        }
        return this.getBoneIndex(parentId);
    }
    buildInverseMatrices() {
        for (let boneId = Bone.HUMAN_BONES_START; boneId < Bone.HUMAN_BONES_START + Bone.HUMAN_BONES_COUNT; boneId++) {
            const boneIndex = this.getBoneIndex(boneId);
            if (boneIndex === undefined) {
                throw new Error("Unknown bone");
            }
            const parentBoneId = Bone.getHumanBoneParent(boneId);
            const parentBoneIndex = parentBoneId !== undefined ? this.boneIdToBoneIndex.get(parentBoneId) : undefined;
            const bone = this.bones[boneIndex];
            const invMatrix = create$5();
            fromRotationTranslation$1(invMatrix, bone.rotation, bone.translation);
            if (parentBoneIndex !== undefined) {
                const parentMatrix = clone$5(this.inverseMatrices[parentBoneIndex]);
                invert$2(parentMatrix, parentMatrix);
                mul$5(invMatrix, parentMatrix, invMatrix);
            }
            invert$2(invMatrix, invMatrix);
            this.inverseMatrices[boneIndex] = invMatrix;
        }
    }
}
class Animation {
    timings;
    values;
    constructor(timings, values) {
        this.timings = timings;
        this.values = values;
    }
    findTimingNextIndex(s) {
        let index = 1;
        while (this.timings[index] <= s && index < this.timings.length) {
            index++;
        }
        console.assert(index < this.timings.length);
        return index;
    }
    getRotation(boneId, s) {
        const first = this.timings[0];
        const last = this.timings[this.timings.length - 1];
        const duration = last - first;
        s = first + ((s - first) % duration);
        const rotation = create$2();
        const rotations = this.values.get(boneId);
        if (rotations !== undefined) {
            const nextIndex = this.findTimingNextIndex(s);
            const prevIndex = nextIndex - 1;
            const s0 = this.timings[prevIndex];
            const s1 = this.timings[nextIndex];
            const t = (s - s0) / (s1 - s0);
            const r0 = rotations[prevIndex];
            const r1 = rotations[nextIndex];
            slerp(rotation, r0, r1, t);
        }
        return rotation;
    }
}

/* eslint-disable @typescript-eslint/no-non-null-assertion */
const MESH_VERTEX_SIZE = 3 + 3 + 2;
function loadMesh(data) {
    const header = new Uint32Array(data, 0, 2);
    const [vertexCount, indexCount] = header;
    const indices = new Uint16Array(data, 2 * 4, indexCount);
    const floatPosition = Math.ceil((2 * 4 + indexCount * 2) / 4) * 4;
    const vertices = new Float32Array(data, floatPosition, MESH_VERTEX_SIZE * vertexCount);
    const model = new Mesh(vertices, indices);
    return model;
}
const COLORED_MESH_SIZE = 3 + 1;
function loadColoredMesh(data) {
    const header = new Uint32Array(data, 0, 2);
    const [vertexCount, indexCount] = header;
    const indices = new Uint16Array(data, 2 * 4, indexCount);
    const verticesAndColors = new Float32Array(data, 2 * 4 + indexCount * 2, COLORED_MESH_SIZE * vertexCount);
    const model = new ColoredMesh(verticesAndColors, indices);
    return model;
}
const COLORED_TEXTURED_MESH_SIZE = 3 + 2 + 1;
function loadColoredTexturedMesh(data) {
    const header = new Uint32Array(data, 0, 2);
    const [vertexCount, indexCount] = header;
    const indices = new Uint16Array(data, 2 * 4, indexCount);
    const verticesAndColors = new Float32Array(data, 2 * 4 + indexCount * 2, COLORED_TEXTURED_MESH_SIZE * vertexCount);
    const model = new ColoredTexturedMesh(verticesAndColors, indices);
    return model;
}
const MODEL_VERTEX_SIZE = 3 + 3 + 2 + 4 + 4;
function loadModel(data) {
    const header = new Uint32Array(data, 0, 3);
    const [vertexCount, indexCount, boneCount] = header;
    const indices = new Uint16Array(data, 3 * 4, indexCount);
    const floatPosition = Math.ceil((3 * 4 + indexCount * 2) / 4) * 4;
    const vertices = new Float32Array(data, floatPosition, MODEL_VERTEX_SIZE * vertexCount);
    const boneData = new Float32Array(data, floatPosition + MODEL_VERTEX_SIZE * vertexCount * 4, boneCount * Bone.STRIDE);
    const bones = [];
    for (let i = 0; i < boneCount; i++) {
        const id = Math.trunc(boneData[i * Bone.STRIDE + 0]);
        const translation = fromValues$4(boneData[i * Bone.STRIDE + 1], boneData[i * Bone.STRIDE + 2], boneData[i * Bone.STRIDE + 3]);
        const rotation = fromValues$2(boneData[i * Bone.STRIDE + 4], boneData[i * Bone.STRIDE + 5], boneData[i * Bone.STRIDE + 6], boneData[i * Bone.STRIDE + 7]);
        const bone = new Bone(id, translation, rotation);
        bones.push(bone);
    }
    const skin = new Model(vertices, indices, bones);
    return skin;
}
function loadAnimation(data) {
    const floats = new Float32Array(data);
    const keyframeCount = Math.trunc(floats[0]);
    const bonesCount = Math.trunc(floats[1]);
    const timings = [];
    for (let i = 0; i < keyframeCount; i++) {
        timings.push(floats[2 + i]);
    }
    const map = new Map();
    const valuesPos = 2 + keyframeCount;
    const VALUES_STRIDE = 1 + 4 * keyframeCount;
    for (let i = 0; i < bonesCount; i++) {
        const pos = valuesPos + i * VALUES_STRIDE;
        const boneId = Math.trunc(floats[pos + 0]);
        const rotations = [];
        for (let j = 0; j < keyframeCount; j++) {
            const rotation = fromValues$2(floats[pos + 1 + j * 4 + 0], floats[pos + 1 + j * 4 + 1], floats[pos + 1 + j * 4 + 2], floats[pos + 1 + j * 4 + 3]);
            rotations.push(rotation);
        }
        map.set(boneId, rotations);
    }
    const animation = new Animation(timings, map);
    return animation;
}
const MAX_TEX_SIZE = 2048;
const canvas = document.createElement("canvas");
canvas.width = MAX_TEX_SIZE;
canvas.height = MAX_TEX_SIZE;
const ctx = canvas.getContext("2d", { willReadFrequently: true });
async function loadTexture(url) {
    return new Promise(resolve => {
        const image = new Image();
        image.onload = () => {
            const canvas = ctx.canvas;
            ctx.clearRect(0, 0, canvas.width, canvas.height);
            ctx.drawImage(image, 0, 0);
            const data = ctx.getImageData(0, 0, image.width, image.height);
            resolve(new Texture(url, data.data, data.width, data.height));
        };
        image.src = url;
    });
}
// URL adapters
async function loadMeshFromURL(url) {
    const data = await (await fetch(url)).arrayBuffer();
    return loadMesh(data);
}
async function loadColoredMeshFromURL(url) {
    const data = await (await fetch(url)).arrayBuffer();
    return loadColoredMesh(data);
}
async function loadColoredTexturedMeshFromURL(url) {
    const data = await (await fetch(url)).arrayBuffer();
    return loadColoredTexturedMesh(data);
}
async function loadModelFromURL(url) {
    const data = await (await fetch(url)).arrayBuffer();
    return loadModel(data);
}
async function loadAnimationFromURL(url) {
    const data = await (await fetch(url)).arrayBuffer();
    return loadAnimation(data);
}

class ResourceManager {
    static meshes = new Map();
    static textures = new Map();
    static init() {
        //
    }
    // mesh
    static async requestMesh(meshName) {
        return ResourceManager.request(meshName, this.meshes, (name) => loadMeshFromURL(`build/${name}.mdl`));
    }
    static freeMesh(meshName) {
        ResourceManager.free(meshName, this.meshes);
    }
    // texture
    static async requestTexture(textureName) {
        return ResourceManager.request(textureName, this.textures, (name) => loadTexture(`build/${name}`));
    }
    static freeTexture(textureName) {
        ResourceManager.free(textureName, this.textures);
    }
    // generic request/free
    static async request(name, map, promiseSupplier) {
        let res = map.get(name);
        if (res === undefined) {
            res = await promiseSupplier(name);
            map.set(name, res);
        }
        res.incRef();
        return res;
    }
    static free(name, map) {
        const res = map.get(name);
        if (res === undefined) {
            throw new Error(`Resource ${name} is not loaded and can't be freed.`);
        }
        if (res.decRef() === 0) {
            map.delete(name);
        }
    }
    static finalize() {
        //
    }
    static generatePlane(x, y, width, height) {
        const left = (x / canvasWebGPU.width) * 2 - 1;
        const right = ((x + width - 1) / canvasWebGPU.width) * 2 - 1;
        const top = (y / canvasWebGPU.height) * 2 - 1;
        const bottom = ((y + height - 1) / canvasWebGPU.height) * 2 - 1;
        const indices = new Uint16Array([0, 2, 1, 1, 2, 3]);
        const vertices = new Float32Array([
            left,
            -top,
            0,
            0,
            0,
            1,
            0,
            0,
            right,
            -top,
            0,
            0,
            0,
            1,
            1,
            0,
            left,
            -bottom,
            0,
            0,
            0,
            1,
            0,
            1,
            right,
            -bottom,
            0,
            0,
            0,
            1,
            1,
            1,
        ]);
        const model = new Mesh(vertices, indices);
        return model;
    }
    static generateCubeFromTransform(transform, r, b, min_z = 0, max_z = 1) {
        const templateVertices = [
            1, -1, 1, 0, 1, -1, -1, 0, 1, 0, 1, -1, 0, 0, 0, -1, -1, 1, 0, 1, -1, 1, 0, 1, 0, -1,
            -1, 0, 0, 0, -1, 1, 1, 1, 1, 1, 1, 0, 0, 0, -1, 1, 0, 1, 0, 1, 1, 1, 1, 1, 1, -1, 0, 0,
            0, 1, 1, 0, 1, 0, -1, 1, 0, 1, 1, 1, -1, 0, 0, 0, -1, -1, 0, 0, 1, -1, -1, 1, 0, 1, 1,
            1, 1, 1, 0, -1, 1, 1, 1, 1, -1, -1, 1, 1, 1, -1, 1, 1, 1, 1, 1, 1, 1, 0, 1, 1, -1, 1, 0,
            1, 1, 1, 0, 1, 0, 1, -1, 1, 0, 0,
        ];
        const vertices = [];
        const vec = create$3();
        for (let i = 0; i < templateVertices.length; i += 5) {
            const x = templateVertices[i + 0];
            const y = templateVertices[i + 1];
            const z = min_z + templateVertices[i + 2] * (max_z - min_z);
            set$3(vec, -x, -y, z, 1);
            transformMat4$1(vec, vec, transform);
            scale$3(vec, vec, 1 / vec[3]);
            vertices.push(vec[0], vec[1], vec[2], 0, 0, 0, r, b);
        }
        const indices = new Uint16Array([
            0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 0, 18, 1, 3, 19, 4, 6, 20,
            7, 9, 21, 10, 12, 22, 13, 15, 23, 16,
        ]);
        const getPoint = (i) => fromValues$4(vertices[i * 8 + 0], vertices[i * 8 + 1], vertices[i * 8 + 2]);
        const setNormal = (i, n) => {
            vertices[i * 8 + 3] = n[0];
            vertices[i * 8 + 4] = n[1];
            vertices[i * 8 + 5] = n[2];
        };
        // calc normals
        for (let faceIndex = 0; faceIndex < indices.length; faceIndex += 3) {
            const p1 = getPoint(indices[faceIndex + 0]);
            const p2 = getPoint(indices[faceIndex + 1]);
            const p3 = getPoint(indices[faceIndex + 2]);
            const u = sub$2(create$4(), p2, p1);
            const v = sub$2(create$4(), p3, p1);
            const n = create$4();
            n[0] = u[1] * v[2] - u[2] * v[1];
            n[1] = u[2] * v[0] - u[0] * v[2];
            n[2] = u[0] * v[1] - u[1] * v[0];
            setNormal(indices[faceIndex + 0], n);
            setNormal(indices[faceIndex + 1], n);
            setNormal(indices[faceIndex + 2], n);
        }
        const model = new Mesh(new Float32Array(vertices), indices);
        return model;
    }
}

/* eslint-disable @typescript-eslint/no-non-null-assertion */
const POSITION_LOC = 0;
const COLOR_LOC = 1;
const NORMAL_LOC = 1;
const UV_LOC = 2;
const PARAMS_LOC = 3;
const VOLUMETRIC_TEX_WIDTH = 320;
const VOLUMETRIC_TEX_HEIGHT = 192;
const VOLUMETRIC_TEX_DEPTH = 90;
const VOLUMETRIC_DISPATCH_X = VOLUMETRIC_TEX_WIDTH / 32;
const VOLUMETRIC_DISPATCH_Y = VOLUMETRIC_TEX_HEIGHT / 32;
const VOLUMETRIC_DISPATCH_Z = VOLUMETRIC_TEX_DEPTH / 1;
class GenericMesh {
    vertices;
    indices;
    indexCount;
    constructor(verticesData, indicesData) {
        this.vertices = wd.createBuffer({
            size: verticesData.byteLength,
            usage: GPUBufferUsage.VERTEX,
            mappedAtCreation: true,
        });
        this.indices = wd.createBuffer({
            size: indicesData.byteLength,
            usage: GPUBufferUsage.INDEX,
            mappedAtCreation: true,
        });
        new Float32Array(this.vertices.getMappedRange()).set(verticesData);
        this.vertices.unmap();
        new Uint16Array(this.indices.getMappedRange()).set(indicesData);
        this.indices.unmap();
        this.indexCount = indicesData.length;
    }
}
class ColoredMeshBuffer extends GenericMesh {
    mesh;
    static buffers = [
        {
            arrayStride: COLORED_MESH_SIZE * 4,
            attributes: [
                {
                    shaderLocation: POSITION_LOC,
                    offset: 0,
                    format: "float32x3",
                },
                {
                    shaderLocation: COLOR_LOC,
                    offset: 3 * 4,
                    format: "unorm8x4",
                },
            ],
        },
    ];
    constructor(mesh) {
        super(mesh.vertices, mesh.indices);
        this.mesh = mesh;
    }
}
class MeshBuffer extends GenericMesh {
    mesh;
    static buffers = [
        {
            arrayStride: MESH_VERTEX_SIZE * 4,
            attributes: [
                {
                    shaderLocation: POSITION_LOC,
                    offset: 0,
                    format: "float32x3",
                },
                {
                    shaderLocation: NORMAL_LOC,
                    offset: 3 * 4,
                    format: "float32x3",
                },
                {
                    shaderLocation: UV_LOC,
                    offset: 6 * 4,
                    format: "float32x2",
                },
            ],
        },
    ];
    constructor(mesh) {
        super(mesh.vertices, mesh.indices);
        this.mesh = mesh;
    }
}
class ColoredTexturedMeshBuffer extends GenericMesh {
    mesh;
    static buffers = [
        {
            arrayStride: COLORED_TEXTURED_MESH_SIZE * 4,
            attributes: [
                {
                    shaderLocation: POSITION_LOC,
                    offset: 0,
                    format: "float32x3",
                },
                {
                    shaderLocation: UV_LOC,
                    offset: 3 * 4,
                    format: "float32x2",
                },
                {
                    shaderLocation: COLOR_LOC,
                    offset: (3 + 2) * 4,
                    format: "unorm8x4",
                },
            ],
        },
    ];
    constructor(mesh) {
        super(mesh.vertices, mesh.indices);
        this.mesh = mesh;
    }
}
// in vertex count
const VERTEX_BUFFER_SIZE = Math.trunc((4 * 1024 * 1024) / 4 / CHUNK_MESH_VERTEX_SIZE);
const INDEX_BUFFER_SIZE = VERTEX_BUFFER_SIZE; // in index count
const ramVertexBuffer = new Float32Array(VERTEX_BUFFER_SIZE * CHUNK_MESH_VERTEX_SIZE);
const ramIndexBuffer = new Uint32Array(INDEX_BUFFER_SIZE);
class BufferChunk {
    static buffers = [
        {
            arrayStride: CHUNK_MESH_VERTEX_SIZE * 4,
            attributes: [
                {
                    shaderLocation: POSITION_LOC,
                    offset: 0,
                    format: "float32x3",
                },
                {
                    shaderLocation: NORMAL_LOC,
                    offset: 3 * 4,
                    format: "float32x3",
                },
                {
                    shaderLocation: UV_LOC,
                    offset: (3 + 3) * 4,
                    format: "float32x2",
                },
                {
                    shaderLocation: PARAMS_LOC,
                    offset: (3 + 3 + 2) * 4,
                    format: "float32",
                },
            ],
        },
    ];
    vertices;
    indices;
    vertexPos = 0;
    indexPos = 0;
    constructor() {
        this.vertices = wd.createBuffer({
            size: VERTEX_BUFFER_SIZE * CHUNK_MESH_VERTEX_SIZE * 4,
            usage: GPUBufferUsage.VERTEX | GPUBufferUsage.COPY_DST,
        });
        this.indices = wd.createBuffer({
            size: INDEX_BUFFER_SIZE * 4,
            usage: GPUBufferUsage.INDEX | GPUBufferUsage.COPY_DST,
        });
    }
    tryAddRenderable(renderable) {
        const { mesh, texture } = renderable;
        const vertexCount = mesh.vertices.length / MESH_VERTEX_SIZE;
        const indexCount = mesh.indices.length;
        if (VERTEX_BUFFER_SIZE - this.vertexPos < vertexCount ||
            INDEX_BUFFER_SIZE - this.indexPos < indexCount) {
            return false;
        }
        const uScale = texture.width / ATLAS_SIZE;
        const vScale = texture.height / ATLAS_SIZE;
        const [uOffset, vOffset, atlasNum] = Render.getAtlasSlotForTexture(texture);
        // we can add this object to this chunk
        const perObjectDataIndex = Render.allocatePerObjectInfoIndex();
        // setup vertices
        for (let vertexIndex = 0; vertexIndex < vertexCount; vertexIndex++) {
            const MESH_VERTEX_STATIC_SIZE = 3 + 3;
            for (let i = 0; i < MESH_VERTEX_STATIC_SIZE; i++) {
                ramVertexBuffer[vertexIndex * CHUNK_MESH_VERTEX_SIZE + i] =
                    mesh.vertices[vertexIndex * MESH_VERTEX_SIZE + i];
            }
            let u = mesh.vertices[vertexIndex * MESH_VERTEX_SIZE + MESH_VERTEX_STATIC_SIZE + 0];
            let v = mesh.vertices[vertexIndex * MESH_VERTEX_SIZE + MESH_VERTEX_STATIC_SIZE + 1];
            // fix UV for atlas
            u = uOffset + u * uScale;
            v = vOffset + v * vScale;
            ramVertexBuffer[vertexIndex * CHUNK_MESH_VERTEX_SIZE + MESH_VERTEX_STATIC_SIZE + 0] = u;
            ramVertexBuffer[vertexIndex * CHUNK_MESH_VERTEX_SIZE + MESH_VERTEX_STATIC_SIZE + 1] = v;
            ramVertexBuffer[vertexIndex * CHUNK_MESH_VERTEX_SIZE + MESH_VERTEX_SIZE + 0] =
                perObjectDataIndex;
        }
        // pass vertices to GPU
        wd.queue.writeBuffer(this.vertices, this.vertexPos * CHUNK_MESH_VERTEX_SIZE * 4, ramVertexBuffer, 0, vertexCount * CHUNK_MESH_VERTEX_SIZE);
        // setup indices
        for (let indexIndex = 0; indexIndex < indexCount; indexIndex++) {
            ramIndexBuffer[indexIndex] = this.vertexPos + mesh.indices[indexIndex];
        }
        // pass indices to GPU
        wd.queue.writeBuffer(this.indices, this.indexPos * 4, ramIndexBuffer, 0, indexCount);
        // seek the chunk
        this.vertexPos += vertexCount;
        this.indexPos += indexCount;
        // done
        renderable.atlasNum = atlasNum;
        renderable.perObjectDataIndex = perObjectDataIndex;
        return true;
    }
}
const VEC2_FLOAT_SIZE = 2;
const VEC3_FLOAT_SIZE = 3;
const MAT4_FLOAT_SIZE = 4 * 4;
// const VEC2_BYTE_SIZE = VEC2_FLOAT_SIZE * 4
const VEC2_BYTE_SIZE_ALIGN = 4 * 4;
const VEC3_BYTE_SIZE = VEC3_FLOAT_SIZE * 4;
const VEC3_BYTE_SIZE_ALIGN = 4 * 4;
const MAT4_BYTE_SIZE = MAT4_FLOAT_SIZE * 4;
const SETTINGS_SIZE = 9 * MAT4_FLOAT_SIZE + 1 * VEC2_FLOAT_SIZE + 2 * VEC3_BYTE_SIZE;
const PER_OBJECT_DATA_BUFFER_SIZE = 1024 * 1024;
// compressed quat + scale + position + flags
const PER_OBJECT_DATA_ENTRY_SIZE = 3 + 1 + 3 + 1;
const ramPerObjectDataBuffer = new Float32Array(PER_OBJECT_DATA_ENTRY_SIZE);
function createTexture(tex) {
    const texture = wd.createTexture({
        size: [tex.width, tex.height, 1],
        format: "rgba8unorm",
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
    });
    wd.queue.writeTexture({ texture }, tex.pixels, { bytesPerRow: tex.width * 4, rowsPerImage: tex.height }, { width: tex.width, height: tex.height });
    return texture;
}
function createTextureByFormat(width, height, format) {
    const texture = wd.createTexture({
        size: [width, height, 1],
        format: format,
        usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,
    });
    return texture;
}
function createFloatTexture(width, height) {
    return createTextureByFormat(width, height, "rg11b10ufloat");
}
var BlankQueryState;
(function (BlankQueryState) {
    BlankQueryState[BlankQueryState["None"] = 0] = "None";
    BlankQueryState[BlankQueryState["Requested"] = 1] = "Requested";
    BlankQueryState[BlankQueryState["Pending"] = 2] = "Pending";
})(BlankQueryState || (BlankQueryState = {}));
const QUERY_BUFFER_SIZE = 8;
const SHADOW_RESOLUTION = 4096;
// TODO for now this must be manually synced with contact shadows shader
// const SHADOW_RND_STEP = 4 / SHADOW_RESOLUTION
class Swapchain {
    texViews = [];
    passes = [];
    binds = [];
    index = 0;
    setTextureViews(view0, view1) {
        this.texViews = [view0, view1];
    }
    setTextureView(view) {
        this.texViews = [view, view];
    }
    setPasses(pass0, pass1) {
        this.passes = [pass0, pass1];
    }
    setPass(pass) {
        this.passes = [pass, pass];
    }
    setBinds(bind0, bind1) {
        this.binds = [bind0, bind1];
    }
    swap() {
        this.index = (this.index + 1) % this.passes.length;
    }
    get pass() {
        return this.passes[this.index];
    }
    get bind() {
        return this.binds[this.index];
    }
    get texView() {
        return this.texViews[this.index];
    }
    getTexView(index) {
        return this.texViews[index];
    }
}
class Render {
    static viewMatrix;
    static viewMatrix_inplace;
    static projectionMatrix;
    static vp;
    static vp_inv;
    static vp_inplace;
    static vp_sun;
    static vp_glare;
    static vp_shadow_near;
    static vp_shadow_far;
    static vp_shadow_near_uv;
    static vp_shadow_far_uv;
    static invScreenResolution;
    static cameraPosition;
    static sunDirection;
    static settingsBuffer;
    static settings;
    static resolutionBuffer;
    static resolution;
    static depthBufferPipeline;
    static depthBufferBind;
    static shadowNearPipeline;
    static shadowNearBind;
    static shadowFarPipeline;
    static shadowFarBind;
    static volumetricInitPipeline;
    static volumetricInitBind;
    static volumetricAddPipeline;
    static volumetricAddBinds;
    static volumetricHSmoothPipeline;
    static volumetricHSmoothBind;
    static volumetricVSmoothPipeline;
    static volumetricVSmoothBind;
    static volumetricComposePipeline;
    static volumetricComposeBind;
    static contactShadowsPipeline;
    static contactShadowsBind;
    static objectsPipeline;
    static objectsBind;
    static skydomePipeline;
    static skydomeBind;
    static sunPipeline;
    static sunBind;
    static blankPipeline;
    static blankBind;
    static fogPipeline;
    static fogBind;
    static glarePipeline;
    static glareBind;
    static volumetricPostprocessPipeline;
    static volumetricPostprocessBind;
    static downsample4Pipeline;
    static downsample4ExtractBrightnessPipeline;
    static downsample16Pipeline;
    static downsample16ExtractDiffPipeline;
    // auto exposure
    static autoExposureTextures;
    static autoExposurePasses;
    static autoExposureBinds;
    static autoExposurePipelines;
    static autoExposureSwapchain = new Swapchain();
    static autoExposureLastStepSettings;
    static autoExposureLastStepSettingsBuffer;
    static toneMappingPipeline;
    static toneMappingSwapchain = new Swapchain();
    static screenPipeline;
    static screenBind;
    // atlases
    static atlasesTexture;
    static atlases;
    static atlasCache;
    // depth buffer
    static depthBuffer;
    static depthBufferView;
    static depthBufferPass;
    // shadow cascade depth buffers
    static shadowDepthBuffers;
    static shadowDepthBuffersView;
    static shadowDepthBufferNearView;
    static shadowDepthBufferFarView;
    static shadowNearPassDesc;
    static shadowFarPassDesc;
    static contactShadowsTexture;
    static contactShadowsTextureView;
    static contactShadowsPassDesc;
    static volumetricLightingTexture;
    static volumetricLightingTextureView;
    static volumetricLightingPassDesc;
    static volumetricLightingTextureTemp;
    static volumetricLightingTextureTempView;
    // volumetric lighting
    static volumetricLightingBuffer0;
    static volumetricLightingBuffer1;
    static volumetricLightingBufferView0;
    static volumetricLightingBufferView1;
    // render targets
    static mainPassTexture;
    static mainPassTextureView;
    static mainPassDesc;
    static fogPassTexture;
    static fogPassTextureView;
    static fogPassDesc;
    static screenPassDesc;
    static skydome;
    static dithering;
    static sun;
    static sunTexture;
    static blank;
    static glare;
    static glareTexture;
    static fullscreenPlain;
    static volumetricCurveInit;
    static volumetricCurveCompose;
    static volumetricRandomData;
    static debugTextureExample;
    static debugIsDepth;
    static debugTextureView;
    static debugTexturePlane;
    static debugTextureBind;
    static debugTexturePipeline;
    static debugDepthBind;
    static debugDepthPipeline;
    static debugFrustumMeshes;
    static debugFrustumBind;
    static debugFrustumPipeline;
    static perObjectData;
    // TODO keep list of free entries
    static nextPerObjectIndex = 0;
    // shaders
    static blankQuery;
    static blankQueryResult;
    static blankQueryResultAsync;
    static blankQueryState = BlankQueryState.None;
    static blankSamplesCount = 0;
    static glareScale = 0;
    static scene = [];
    static async init() {
        Render.projectionMatrix = create$5();
        Render.viewMatrix = create$5();
        Render.viewMatrix_inplace = create$5();
        Render.debugFrustumMeshes = [];
        Render.handleResize();
        Render.initAtlases();
        Render.setupFrameBuffers();
        Render.createPerObjectData();
        Render.compilerShaders();
        await Render.loadResources();
        Render.createUBOs();
        // await Render.setupShadowsTest()
    }
    static async setupShadowsTest() {
        // add bucket
        const bucket = new Renderable(await ResourceManager.requestMesh("bucket"), await ResourceManager.requestTexture("rock.jpg"));
        Render.setTransform(bucket, new Float32Array([
            // rotation
            -0.08335307240486145, 0.35976338386535645, 0.9053316712379456, 0.2097550332546234,
            // scale
            10,
            // position
            -1160.062744140625, -373.4453125, 182.90625,
        ]));
        Render.addRenderable(bucket);
        /*
        // add ground
        const ground = new Renderable(
            await ResourceManager.requestMesh("ground"),
            await ResourceManager.requestTexture("grass.jpg")
        )
        Render.setTransform(
            ground,
            new Float32Array([
                // rotation
                0, 0, 0, 1,
                // scale
                1,
                // position
                -654.9658203125, -588.56103515625, -85.90818786621094,
            ])
        )
        Render.addRenderable(ground)
        */
        // setup camera
        Render.setCamera(fromValues$4(0, 0, 0), fromValues$4(-0.9772039651870728, 0.1179046481847763, 0.17655348777770996));
    }
    static async loadResources() {
        Render.skydome = new ColoredMeshBuffer(await loadColoredMeshFromURL("build/skydome.cml"));
        Render.dithering = createTexture(await loadTexture("build/dithering.png"));
        Render.sun = new ColoredTexturedMeshBuffer(await loadColoredTexturedMeshFromURL("build/sun.ctml"));
        Render.sunTexture = createTexture(await loadTexture("build/sun.png"));
        Render.blank = new ColoredTexturedMeshBuffer(await loadColoredTexturedMeshFromURL("build/blank.ctml"));
        Render.glare = new ColoredTexturedMeshBuffer(await loadColoredTexturedMeshFromURL("build/glare.ctml"));
        Render.glareTexture = createTexture(await loadTexture("build/glare.png"));
        {
            const curveData = new Uint8Array(await (await fetch("build/volumetric_curve_init_data_rgba.bin")).arrayBuffer());
            const curveWidth = curveData.byteLength / 4;
            Render.volumetricCurveInit = wd.createTexture({
                size: [curveWidth, 1],
                format: "rgba8unorm",
                dimension: "2d",
                usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
            });
            wd.queue.writeTexture({ texture: Render.volumetricCurveInit }, curveData, { bytesPerRow: curveWidth * 4, rowsPerImage: 1 }, { width: curveWidth, height: 1 });
        }
        {
            const curveData = new Uint8Array(await (await fetch("build/volumetric_curve_compose_data_rgba.bin")).arrayBuffer());
            const curveWidth = curveData.byteLength / 4;
            Render.volumetricCurveCompose = wd.createTexture({
                size: [curveWidth, 1],
                format: "rgba8unorm",
                dimension: "2d",
                usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
            });
            wd.queue.writeTexture({ texture: Render.volumetricCurveCompose }, curveData, { bytesPerRow: curveWidth * 4, rowsPerImage: 1 }, { width: curveWidth, height: 1 });
        }
        const randomData = new Uint8Array(await (await fetch("build/volumetric_random_data_tighten.bin")).arrayBuffer());
        Render.volumetricRandomData = wd.createTexture({
            size: [32, 32, 32],
            format: "r8unorm",
            dimension: "3d",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        });
        wd.queue.writeTexture({ texture: Render.volumetricRandomData }, randomData, { bytesPerRow: 32, rowsPerImage: 32 }, { width: 32, height: 32, depthOrArrayLayers: 32 });
        Render.debugTextureExample = wd.createTexture({
            size: [2, 2],
            format: "rgba8unorm",
            dimension: "2d",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        });
        wd.queue.writeTexture({ texture: Render.debugTextureExample }, new Uint8Array([0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 254, 254, 154, 0]), { bytesPerRow: 2 * 4, rowsPerImage: 2 }, { width: 2, height: 2 });
    }
    static async setupTest() {
        Render.fullscreenPlain = new MeshBuffer(await ResourceManager.requestMesh("fullscreen_plane"));
        Render.debugTexturePlane = new MeshBuffer(ResourceManager.generatePlane(0, 0, 640, 640));
    }
    static initAtlases() {
        Render.atlasesTexture = wd.createTexture({
            size: [ATLAS_SIZE, ATLAS_SIZE, MAX_ATLASES_COUNT],
            dimension: "2d",
            format: "rgba8unorm",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.COPY_DST,
        });
        Render.atlases = [];
        Render.atlasCache = new Map();
    }
    static allocateNewAtlas() {
        const atlasNum = Render.atlases.length;
        const atlas = new Atlas(atlasNum, Render.atlasesTexture);
        Render.atlases.push(atlas);
        return atlas;
    }
    static getAtlasSlotForTexture(texture) {
        const slot = Render.atlasCache.get(texture.id);
        if (slot) {
            return slot;
        }
        const newSlot = Render.allocateAndCopyTextureToAtlas(texture);
        Render.atlasCache.set(texture.id, newSlot);
        return newSlot;
    }
    static allocateAndCopyTextureToAtlas(texture) {
        for (const atlas of Render.atlases) {
            const res = atlas.tryAddTexture(texture);
            if (res) {
                return [...res, atlas.num];
            }
        }
        const atlas = Render.allocateNewAtlas();
        const res = atlas.tryAddTexture(texture);
        if (!res) {
            throw new Error("Can't put texture in empty Atlas.");
        }
        return [...res, atlas.num];
    }
    static setupFrameBuffers() {
        Render.contactShadowsTexture = wd.createTexture({
            size: [canvasWebGPU.width, canvasWebGPU.height],
            format: "r32float",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,
        });
        Render.contactShadowsTextureView = Render.contactShadowsTexture.createView();
        Render.volumetricLightingTexture = wd.createTexture({
            size: [canvasWebGPU.width, canvasWebGPU.height],
            format: "r32float",
            usage: GPUTextureUsage.TEXTURE_BINDING |
                GPUTextureUsage.RENDER_ATTACHMENT |
                GPUTextureUsage.STORAGE_BINDING,
        });
        Render.volumetricLightingTextureView = Render.volumetricLightingTexture.createView();
        Render.volumetricLightingTextureTemp = wd.createTexture({
            size: [canvasWebGPU.width, canvasWebGPU.height],
            format: "r32float",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,
        });
        Render.volumetricLightingTextureTempView = Render.volumetricLightingTextureTemp.createView();
        Render.volumetricLightingBuffer0 = wd.createTexture({
            size: [VOLUMETRIC_TEX_WIDTH, VOLUMETRIC_TEX_HEIGHT, VOLUMETRIC_TEX_DEPTH],
            // FIXME supposed to be r16float, memory usage x4
            format: "rgba16float",
            dimension: "3d",
            usage: GPUTextureUsage.TEXTURE_BINDING |
                GPUTextureUsage.STORAGE_BINDING |
                GPUTextureUsage.COPY_SRC,
        });
        Render.volumetricLightingBufferView0 = Render.volumetricLightingBuffer0.createView();
        Render.volumetricLightingBuffer1 = wd.createTexture({
            size: [VOLUMETRIC_TEX_WIDTH, VOLUMETRIC_TEX_HEIGHT, VOLUMETRIC_TEX_DEPTH],
            // FIXME supposed to be r16float, memory usage x4
            format: "rgba16float",
            dimension: "3d",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.STORAGE_BINDING,
        });
        Render.volumetricLightingBufferView1 = Render.volumetricLightingBuffer1.createView();
        Render.mainPassTexture = createFloatTexture(canvasWebGPU.width, canvasWebGPU.height);
        Render.mainPassTextureView = Render.mainPassTexture.createView();
        Render.depthBuffer = wd.createTexture({
            size: [canvasWebGPU.width, canvasWebGPU.height],
            format: "depth24plus",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,
        });
        Render.depthBufferView = Render.depthBuffer.createView();
        Render.shadowDepthBuffers = wd.createTexture({
            size: [SHADOW_RESOLUTION, SHADOW_RESOLUTION, 2],
            format: "depth24plus",
            usage: GPUTextureUsage.TEXTURE_BINDING | GPUTextureUsage.RENDER_ATTACHMENT,
        });
        Render.shadowDepthBuffersView = Render.shadowDepthBuffers.createView();
        Render.shadowDepthBufferNearView = Render.shadowDepthBuffers.createView({
            baseArrayLayer: 0,
            arrayLayerCount: 1,
            dimension: "2d",
        });
        Render.shadowDepthBufferFarView = Render.shadowDepthBuffers.createView({
            baseArrayLayer: 1,
            arrayLayerCount: 1,
            dimension: "2d",
        });
        Render.blankQuery = wd.createQuerySet({
            type: "occlusion",
            count: 1,
        });
        Render.blankQueryResult = wd.createBuffer({
            size: QUERY_BUFFER_SIZE,
            usage: GPUBufferUsage.QUERY_RESOLVE | GPUBufferUsage.COPY_SRC,
        });
        Render.blankQueryResultAsync = wd.createBuffer({
            size: QUERY_BUFFER_SIZE,
            usage: GPUBufferUsage.COPY_DST | GPUBufferUsage.MAP_READ,
        });
        Render.shadowNearPassDesc = {
            colorAttachments: [],
            depthStencilAttachment: {
                view: Render.shadowDepthBufferNearView,
                depthClearValue: 1.0,
                depthLoadOp: "clear",
                depthStoreOp: "store",
            },
        };
        Render.shadowFarPassDesc = {
            colorAttachments: [],
            depthStencilAttachment: {
                view: Render.shadowDepthBufferFarView,
                depthClearValue: 1.0,
                depthLoadOp: "clear",
                depthStoreOp: "store",
            },
        };
        Render.contactShadowsPassDesc = {
            colorAttachments: [
                {
                    view: Render.contactShadowsTextureView,
                    clearValue: {
                        r: 1,
                        g: 1,
                        b: 1,
                        a: 1,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
        };
        Render.volumetricLightingPassDesc = {
            colorAttachments: [
                {
                    view: Render.volumetricLightingTextureView,
                    clearValue: {
                        r: 1,
                        g: 1,
                        b: 1,
                        a: 1,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
        };
        Render.mainPassDesc = {
            colorAttachments: [
                {
                    view: Render.mainPassTextureView,
                    clearValue: {
                        r: 0.284532,
                        g: 0.365823,
                        b: 0.423077,
                        a: 1.0,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
            depthStencilAttachment: {
                view: Render.depthBufferView,
                depthClearValue: 1.0,
                depthLoadOp: "clear",
                depthStoreOp: "store",
            },
            occlusionQuerySet: Render.blankQuery,
        };
        Render.depthBufferPass = {
            colorAttachments: [],
            depthStencilAttachment: {
                view: Render.depthBufferView,
                depthClearValue: 1.0,
                depthLoadOp: "clear",
                depthStoreOp: "store",
            },
        };
        // fog pass
        Render.fogPassTexture = createFloatTexture(canvasWebGPU.width, canvasWebGPU.height);
        Render.fogPassTextureView = Render.fogPassTexture.createView();
        Render.fogPassDesc = {
            colorAttachments: [
                {
                    view: Render.fogPassTextureView,
                    clearValue: {
                        r: 0,
                        g: 0,
                        b: 0,
                        a: 1,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
        };
        // auto exposure
        {
            Render.autoExposureTextures = [];
            Render.autoExposurePasses = [];
            let w = wg.canvas.width;
            let h = wg.canvas.height;
            let inputTexWidth = w;
            let inputTexHeight = h;
            let inputTexView = Render.fogPassTextureView;
            // eslint-disable-next-line no-constant-condition
            while (true) {
                w = Math.max(2, w / 4);
                h = Math.max(2, h / 4);
                if (w === 2 && h === 2) {
                    break;
                }
                const outputTexWidth = Math.ceil(w);
                const outputTexHeight = Math.ceil(h);
                const outputTex = createFloatTexture(outputTexWidth, outputTexHeight);
                const outputTexView = outputTex.createView();
                const pass = {
                    colorAttachments: [
                        {
                            view: outputTexView,
                            clearValue: {
                                r: 0,
                                g: 0,
                                b: 0,
                                a: 1,
                            },
                            loadOp: "clear",
                            storeOp: "store",
                        },
                    ],
                };
                Render.autoExposureTextures.push({
                    srcW: inputTexWidth,
                    srcH: inputTexHeight,
                    srcTexView: inputTexView,
                    dstW: outputTexWidth,
                    dstH: outputTexHeight,
                    dstTexView: outputTexView,
                });
                Render.autoExposurePasses.push(pass);
                inputTexWidth = outputTexWidth;
                inputTexHeight = outputTexHeight;
                inputTexView = outputTexView;
            }
            const outputTexView0 = createFloatTexture(2, 2).createView();
            const outputTexView1 = createFloatTexture(2, 2).createView();
            const pass0 = {
                colorAttachments: [
                    {
                        view: outputTexView0,
                        clearValue: {
                            r: 0,
                            g: 0,
                            b: 0,
                            a: 1,
                        },
                        loadOp: "clear",
                        storeOp: "store",
                    },
                ],
            };
            const pass1 = {
                colorAttachments: [
                    {
                        view: outputTexView1,
                        clearValue: {
                            r: 0,
                            g: 0,
                            b: 0,
                            a: 1,
                        },
                        loadOp: "clear",
                        storeOp: "store",
                    },
                ],
            };
            Render.autoExposureSwapchain.setTextureViews(outputTexView0, outputTexView1);
            Render.autoExposureSwapchain.setPasses(pass0, pass1);
        }
        // tone mapping pass
        const toneMappingPassTexture = createTextureByFormat(canvasWebGPU.width, canvasWebGPU.height, presentationFormat);
        const toneMappingPassTextureView = toneMappingPassTexture.createView();
        const toneMappingPassDesc = {
            colorAttachments: [
                {
                    view: toneMappingPassTextureView,
                    clearValue: {
                        r: 0,
                        g: 0,
                        b: 0,
                        a: 1,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
        };
        Render.toneMappingSwapchain.setTextureView(toneMappingPassTextureView);
        Render.toneMappingSwapchain.setPass(toneMappingPassDesc);
        // screen
        Render.screenPassDesc = {
            colorAttachments: [
                {
                    view: null,
                    clearValue: {
                        r: 0,
                        g: 0,
                        b: 0,
                        a: 1,
                    },
                    loadOp: "clear",
                    storeOp: "store",
                },
            ],
        };
        // Render.debugTextureView = Render.autoExposureSwapchain.getTexView(0)
        // Render.debugTextureView = Render.contactShadowsTextureView
        // Render.debugTextureView = Render.shadowDepthBufferNearView
        // Render.debugIsDepth = true
    }
    static createPerObjectData() {
        Render.perObjectData = wd.createBuffer({
            size: PER_OBJECT_DATA_BUFFER_SIZE * PER_OBJECT_DATA_ENTRY_SIZE * 4,
            usage: GPUBufferUsage.STORAGE | GPUBufferUsage.COPY_DST,
        });
    }
    static allocatePerObjectInfoIndex() {
        if (Render.nextPerObjectIndex + 1 > PER_OBJECT_DATA_BUFFER_SIZE) {
            throw new Error("Out of space in PerObjectData.");
        }
        const result = Render.nextPerObjectIndex;
        Render.nextPerObjectIndex += 1;
        return result;
    }
    static updatePerObjectData(renderable) {
        if (renderable.perObjectDataIndex === undefined) {
            return;
        }
        if (renderable.atlasNum === undefined) {
            throw "Object doesn't have an atlas";
        }
        ramPerObjectDataBuffer.set([
            // pixel 0
            renderable.rotation[0],
            renderable.rotation[1],
            renderable.rotation[2],
            renderable.scale,
            // pixel 1
            renderable.position[0],
            renderable.position[1],
            renderable.position[2],
            renderable.atlasNum,
        ]);
        const i = renderable.perObjectDataIndex;
        const byteOffset = i * PER_OBJECT_DATA_ENTRY_SIZE * 4;
        wd.queue.writeBuffer(Render.perObjectData, byteOffset, ramPerObjectDataBuffer, 0, PER_OBJECT_DATA_ENTRY_SIZE);
    }
    static createUBOs() {
        const linearRepeatSampler = wd.createSampler({
            magFilter: "linear",
            minFilter: "linear",
            mipmapFilter: "linear",
            maxAnisotropy: 16,
            addressModeU: "repeat",
            addressModeV: "repeat",
        });
        const linearClampSampler = wd.createSampler({
            magFilter: "linear",
            minFilter: "linear",
            mipmapFilter: "linear",
            addressModeU: "clamp-to-edge",
            addressModeV: "clamp-to-edge",
        });
        const linearMirrorSampler = wd.createSampler({
            magFilter: "linear",
            minFilter: "linear",
            mipmapFilter: "linear",
            addressModeU: "mirror-repeat",
            addressModeV: "mirror-repeat",
        });
        const pointClampSampler = wd.createSampler({
            magFilter: "nearest",
            minFilter: "nearest",
            mipmapFilter: "nearest",
            addressModeU: "clamp-to-edge",
            addressModeV: "clamp-to-edge",
        });
        const pointRepeatSampler = wd.createSampler({
            magFilter: "nearest",
            minFilter: "nearest",
            mipmapFilter: "nearest",
            addressModeU: "repeat",
            addressModeV: "repeat",
        });
        const comparisonSampler = wd.createSampler({
            magFilter: "linear",
            minFilter: "linear",
            mipmapFilter: "linear",
            compare: "less",
            addressModeU: "clamp-to-edge",
            addressModeV: "clamp-to-edge",
        });
        Render.settingsBuffer = new Float32Array(SETTINGS_SIZE);
        Render.resolutionBuffer = new Int32Array(2);
        let pos = 0;
        Render.vp = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_inplace = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_sun = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_glare = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_shadow_near = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_shadow_far = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_shadow_near_uv = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_shadow_far_uv = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.vp_inv = new Float32Array(Render.settingsBuffer.buffer, pos, MAT4_FLOAT_SIZE);
        pos += MAT4_BYTE_SIZE;
        Render.invScreenResolution = new Float32Array(Render.settingsBuffer.buffer, pos, VEC2_FLOAT_SIZE);
        pos += VEC2_BYTE_SIZE_ALIGN;
        Render.cameraPosition = new Float32Array(Render.settingsBuffer.buffer, pos, VEC3_FLOAT_SIZE);
        pos += VEC3_BYTE_SIZE_ALIGN;
        Render.sunDirection = new Float32Array(Render.settingsBuffer.buffer, pos, VEC3_FLOAT_SIZE);
        pos += VEC3_BYTE_SIZE_ALIGN;
        // settings for objects
        Render.settings = wd.createBuffer({
            size: SETTINGS_SIZE * 4,
            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,
        });
        Render.resolution = wd.createBuffer({
            size: 2 * 4,
            usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,
        });
        const ditheringView = Render.dithering.createView();
        const volumetricCurveInitView = Render.volumetricCurveInit.createView();
        const volumetricCurveComposeView = Render.volumetricCurveCompose.createView();
        Render.shadowNearBind = wd.createBindGroup({
            layout: Render.shadowNearPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: {
                        buffer: Render.perObjectData,
                    },
                },
            ],
        });
        Render.shadowFarBind = wd.createBindGroup({
            layout: Render.shadowFarPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: {
                        buffer: Render.perObjectData,
                    },
                },
            ],
        });
        Render.volumetricInitBind = wd.createBindGroup({
            layout: Render.volumetricInitPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: pointClampSampler,
                },
                {
                    binding: 2,
                    resource: linearClampSampler,
                },
                {
                    binding: 3,
                    resource: linearMirrorSampler,
                },
                {
                    binding: 4,
                    resource: Render.shadowDepthBuffersView,
                },
                {
                    binding: 5,
                    resource: volumetricCurveInitView,
                },
                {
                    binding: 6,
                    resource: Render.volumetricRandomData.createView(),
                },
                {
                    binding: 7,
                    resource: Render.volumetricLightingBufferView0,
                },
                {
                    binding: 8,
                    resource: Render.volumetricLightingBufferView1,
                },
            ],
        });
        Render.volumetricAddBinds = [];
        const swapChain = [
            Render.volumetricLightingBufferView0,
            Render.volumetricLightingBufferView1,
        ];
        for (let i = 0; i < VOLUMETRIC_TEX_DEPTH; i++) {
            const input = swapChain[i % swapChain.length];
            const output = swapChain[(i + 1) % swapChain.length];
            const z = 1 + i;
            const zBuffer = wd.createBuffer({
                size: 4,
                usage: GPUBufferUsage.UNIFORM,
                mappedAtCreation: true,
            });
            const zData = new Uint32Array(zBuffer.getMappedRange());
            zData[0] = z;
            zBuffer.unmap();
            const bind = wd.createBindGroup({
                layout: Render.volumetricAddPipeline.getBindGroupLayout(0),
                entries: [
                    {
                        binding: 0,
                        resource: {
                            buffer: zBuffer,
                        },
                    },
                    {
                        binding: 1,
                        resource: input,
                    },
                    {
                        binding: 2,
                        resource: output,
                    },
                ],
            });
            Render.volumetricAddBinds.push(bind);
        }
        Render.volumetricHSmoothBind = wd.createBindGroup({
            layout: Render.volumetricHSmoothPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.resolution,
                    },
                },
                {
                    binding: 1,
                    resource: Render.volumetricLightingTextureView,
                },
                {
                    binding: 2,
                    resource: Render.depthBufferView,
                },
                {
                    binding: 3,
                    resource: Render.volumetricLightingTextureTempView,
                },
            ],
        });
        Render.volumetricVSmoothBind = wd.createBindGroup({
            layout: Render.volumetricVSmoothPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.resolution,
                    },
                },
                {
                    binding: 1,
                    resource: Render.volumetricLightingTextureTempView,
                },
                {
                    binding: 2,
                    resource: Render.depthBufferView,
                },
                {
                    binding: 3,
                    resource: Render.volumetricLightingTextureView,
                },
            ],
        });
        Render.volumetricComposeBind = wd.createBindGroup({
            layout: Render.volumetricComposePipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: pointClampSampler,
                },
                {
                    binding: 1,
                    resource: linearClampSampler,
                },
                {
                    binding: 2,
                    resource: ditheringView,
                },
                {
                    binding: 3,
                    resource: Render.depthBufferView,
                },
                {
                    binding: 4,
                    resource: Render.volumetricLightingBufferView0,
                },
                {
                    binding: 5,
                    resource: volumetricCurveComposeView,
                },
            ],
        });
        Render.contactShadowsBind = wd.createBindGroup({
            layout: Render.contactShadowsPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: Render.depthBufferView,
                },
                {
                    binding: 2,
                    resource: Render.shadowDepthBuffersView,
                },
                {
                    binding: 3,
                    resource: comparisonSampler,
                },
            ],
        });
        Render.depthBufferBind = wd.createBindGroup({
            layout: Render.depthBufferPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: {
                        buffer: Render.perObjectData,
                    },
                },
            ],
        });
        Render.objectsBind = wd.createBindGroup({
            layout: Render.objectsPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: {
                        buffer: Render.perObjectData,
                    },
                },
                {
                    binding: 2,
                    resource: pointRepeatSampler,
                },
                {
                    binding: 3,
                    resource: Render.atlasesTexture.createView(),
                },
                {
                    binding: 4,
                    resource: Render.contactShadowsTextureView,
                },
            ],
        });
        Render.skydomeBind = wd.createBindGroup({
            layout: Render.skydomePipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: pointRepeatSampler,
                },
                {
                    binding: 2,
                    resource: ditheringView,
                },
            ],
        });
        Render.sunBind = wd.createBindGroup({
            layout: Render.sunPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: linearRepeatSampler,
                },
                {
                    binding: 2,
                    resource: Render.sunTexture.createView(),
                },
            ],
        });
        Render.blankBind = wd.createBindGroup({
            layout: Render.blankPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
            ],
        });
        Render.fogBind = wd.createBindGroup({
            layout: Render.fogPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: Render.mainPassTextureView,
                },
                {
                    binding: 1,
                    resource: Render.depthBufferView,
                },
            ],
        });
        Render.volumetricPostprocessBind = wd.createBindGroup({
            layout: Render.volumetricPostprocessPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: Render.volumetricLightingTextureView,
                },
            ],
        });
        // auto exposure
        {
            Render.autoExposureBinds = [];
            for (let i = 0; i < Render.autoExposureTextures.length; i++) {
                const { srcW, srcH, srcTexView } = Render.autoExposureTextures[i];
                const pipeline = Render.autoExposurePipelines[i];
                const invResolutionBuffer = wd.createBuffer({
                    size: 8,
                    usage: GPUBufferUsage.UNIFORM,
                    mappedAtCreation: true,
                });
                const zData = new Float32Array(invResolutionBuffer.getMappedRange());
                zData[0] = 1 / srcW;
                zData[1] = 1 / srcH;
                invResolutionBuffer.unmap();
                const bind = wd.createBindGroup({
                    layout: pipeline.getBindGroupLayout(0),
                    entries: [
                        {
                            binding: 0,
                            resource: {
                                buffer: invResolutionBuffer,
                            },
                        },
                        {
                            binding: 1,
                            resource: linearClampSampler,
                        },
                        {
                            binding: 2,
                            resource: srcTexView,
                        },
                    ],
                });
                Render.autoExposureBinds.push(bind);
            }
            // swapchain
            const { dstW, dstH, dstTexView } = Render.autoExposureTextures[Render.autoExposureTextures.length - 1];
            Render.autoExposureLastStepSettingsBuffer = new Float32Array(4);
            Render.autoExposureLastStepSettingsBuffer[0] = 1 / dstW;
            Render.autoExposureLastStepSettingsBuffer[1] = 1 / dstH;
            const settingsBuffer = wd.createBuffer({
                size: 16,
                usage: GPUBufferUsage.UNIFORM | GPUBufferUsage.COPY_DST,
                mappedAtCreation: false,
            });
            const bind0 = wd.createBindGroup({
                layout: Render.downsample16ExtractDiffPipeline.getBindGroupLayout(0),
                entries: [
                    {
                        binding: 0,
                        resource: {
                            buffer: settingsBuffer,
                        },
                    },
                    {
                        binding: 1,
                        resource: linearClampSampler,
                    },
                    {
                        binding: 2,
                        resource: pointClampSampler,
                    },
                    {
                        binding: 3,
                        resource: dstTexView,
                    },
                    // prev texture
                    {
                        binding: 4,
                        resource: Render.autoExposureSwapchain.getTexView(1),
                    },
                ],
            });
            const bind1 = wd.createBindGroup({
                layout: Render.downsample16ExtractDiffPipeline.getBindGroupLayout(0),
                entries: [
                    {
                        binding: 0,
                        resource: {
                            buffer: settingsBuffer,
                        },
                    },
                    {
                        binding: 1,
                        resource: linearClampSampler,
                    },
                    {
                        binding: 2,
                        resource: pointClampSampler,
                    },
                    {
                        binding: 3,
                        resource: dstTexView,
                    },
                    // prev texture
                    {
                        binding: 4,
                        resource: Render.autoExposureSwapchain.getTexView(0),
                    },
                ],
            });
            Render.autoExposureSwapchain.setBinds(bind0, bind1);
            Render.autoExposureLastStepSettings = settingsBuffer;
        }
        // tone mapping
        const toneMappingBind0 = wd.createBindGroup({
            layout: Render.toneMappingPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: linearClampSampler,
                },
                {
                    binding: 1,
                    resource: Render.fogPassTextureView,
                },
                {
                    binding: 2,
                    resource: Render.autoExposureSwapchain.getTexView(0),
                },
            ],
        });
        const toneMappingBind1 = wd.createBindGroup({
            layout: Render.toneMappingPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: linearClampSampler,
                },
                {
                    binding: 1,
                    resource: Render.fogPassTextureView,
                },
                {
                    binding: 2,
                    resource: Render.autoExposureSwapchain.getTexView(1),
                },
            ],
        });
        Render.toneMappingSwapchain.setBinds(toneMappingBind0, toneMappingBind1);
        // screen
        Render.screenBind = wd.createBindGroup({
            layout: Render.screenPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: linearClampSampler,
                },
                {
                    binding: 1,
                    // resource: Render.debugTextureExample.createView(),
                    resource: Render.toneMappingSwapchain.getTexView(0),
                },
            ],
        });
        Render.glareBind = wd.createBindGroup({
            layout: Render.glarePipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
                {
                    binding: 1,
                    resource: linearRepeatSampler,
                },
                {
                    binding: 2,
                    resource: pointRepeatSampler,
                },
                {
                    binding: 3,
                    resource: Render.glareTexture.createView(),
                },
                {
                    binding: 4,
                    resource: ditheringView,
                },
            ],
        });
        if (Render.debugTextureView) {
            Render.debugTextureBind = wd.createBindGroup({
                layout: Render.debugTexturePipeline.getBindGroupLayout(0),
                entries: [
                    {
                        binding: 0,
                        resource: Render.debugTextureView,
                    },
                ],
            });
            Render.debugDepthBind = wd.createBindGroup({
                layout: Render.debugDepthPipeline.getBindGroupLayout(0),
                entries: [
                    {
                        binding: 0,
                        resource: linearRepeatSampler,
                    },
                    {
                        binding: 1,
                        resource: Render.debugTextureView,
                    },
                ],
            });
        }
        Render.debugFrustumBind = wd.createBindGroup({
            layout: Render.debugFrustumPipeline.getBindGroupLayout(0),
            entries: [
                {
                    binding: 0,
                    resource: {
                        buffer: Render.settings,
                    },
                },
            ],
        });
    }
    static compilerShaders() {
        const primitive = {
            topology: "triangle-list",
            cullMode: "back",
            unclippedDepth: true,
        };
        const passthroughShaderVert = wd.createShaderModule({ code: passthroughVert });
        const passthroughShaderFrag = wd.createShaderModule({ code: passthroughFrag });
        const passthroughShaderFrag_Debug = wd.createShaderModule({ code: passthroughFrag_Debug });
        // objects
        const objectsShadowNearShaderVert = wd.createShaderModule({ code: objectsShadowNearVert });
        Render.shadowNearPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: objectsShadowNearShaderVert,
                entryPoint: "main",
                buffers: BufferChunk.buffers,
            },
            depthStencil: {
                depthWriteEnabled: true,
                depthCompare: "less",
                format: "depth24plus",
                depthBiasClamp: -100,
            },
            primitive,
        });
        const objectsShadowFarShaderVert = wd.createShaderModule({ code: objectsShadowFarVert });
        Render.shadowFarPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: objectsShadowFarShaderVert,
                entryPoint: "main",
                buffers: BufferChunk.buffers,
            },
            depthStencil: {
                depthWriteEnabled: true,
                depthCompare: "less",
                format: "depth24plus",
                depthBiasClamp: -100,
            },
            primitive,
        });
        // volumetric lighting
        const volumetricInitShaderComp = wd.createShaderModule({ code: volumetricInitComp });
        Render.volumetricInitPipeline = wd.createComputePipeline({
            layout: "auto",
            compute: {
                module: volumetricInitShaderComp,
                entryPoint: "main",
            },
        });
        const volumetricAddShaderComp = wd.createShaderModule({ code: volumetricAddComp });
        Render.volumetricAddPipeline = wd.createComputePipeline({
            layout: "auto",
            compute: {
                module: volumetricAddShaderComp,
                entryPoint: "main",
            },
        });
        const volumetricComposeShaderFrag = wd.createShaderModule({ code: volumetricComposeFrag });
        Render.volumetricComposePipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: volumetricComposeShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "r32float",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const volumetricHSmoothShaderComp = wd.createShaderModule({
            code: volumetricHSmoothComp,
        });
        Render.volumetricHSmoothPipeline = wd.createComputePipeline({
            layout: "auto",
            compute: {
                module: volumetricHSmoothShaderComp,
                entryPoint: "main",
            },
        });
        const volumetricVSmoothShaderComp = wd.createShaderModule({
            code: volumetricVSmoothComp,
        });
        Render.volumetricVSmoothPipeline = wd.createComputePipeline({
            layout: "auto",
            compute: {
                module: volumetricVSmoothShaderComp,
                entryPoint: "main",
            },
        });
        // contact shadows
        const contactShadowsShaderFrag = wd.createShaderModule({ code: contactShadowsFrag });
        Render.contactShadowsPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: contactShadowsShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "r32float",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const objectsDepthBufferShaderVert = wd.createShaderModule({ code: objectsDepthBufferVert });
        Render.depthBufferPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: objectsDepthBufferShaderVert,
                entryPoint: "main",
                buffers: BufferChunk.buffers,
            },
            depthStencil: {
                depthWriteEnabled: true,
                depthCompare: "less",
                format: "depth24plus",
                depthBiasClamp: -100,
            },
            primitive,
        });
        const objectsShaderVert = wd.createShaderModule({ code: objectsVert });
        const objectsShaderFrag = wd.createShaderModule({ code: objectsFrag });
        Render.objectsPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: objectsShaderVert,
                entryPoint: "main",
                buffers: BufferChunk.buffers,
            },
            fragment: {
                module: objectsShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.BLUE,
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one-minus-src-alpha",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one-minus-src-alpha",
                            },
                        },
                    },
                ],
            },
            depthStencil: {
                depthWriteEnabled: true,
                depthCompare: "less",
                format: "depth24plus",
            },
            primitive,
        });
        const skydomeShaderVert = wd.createShaderModule({ code: skydomeVert });
        const skydomeShaderFrag = wd.createShaderModule({ code: skydomeFrag });
        Render.skydomePipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: skydomeShaderVert,
                entryPoint: "main",
                buffers: ColoredMeshBuffer.buffers,
            },
            fragment: {
                module: skydomeShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one-minus-src-alpha",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one-minus-src-alpha",
                            },
                        },
                        writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.BLUE,
                    },
                ],
            },
            depthStencil: {
                depthWriteEnabled: false,
                depthCompare: "always",
                format: "depth24plus",
            },
            primitive,
        });
        const sunShaderVert = wd.createShaderModule({ code: sunVert });
        const sunShaderFrag = wd.createShaderModule({ code: sunFrag });
        Render.sunPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: sunShaderVert,
                entryPoint: "main",
                buffers: ColoredTexturedMeshBuffer.buffers,
            },
            fragment: {
                module: sunShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                        },
                        writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.BLUE,
                    },
                ],
            },
            depthStencil: {
                depthWriteEnabled: false,
                depthCompare: "always",
                format: "depth24plus",
            },
            primitive,
        });
        const blankShaderVert = wd.createShaderModule({ code: blankVert });
        const blankShaderFrag = wd.createShaderModule({ code: blankFrag });
        Render.blankPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: blankShaderVert,
                entryPoint: "main",
                buffers: ColoredTexturedMeshBuffer.buffers,
            },
            fragment: {
                module: blankShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                        },
                        writeMask: GPUColorWrite.RED | GPUColorWrite.GREEN | GPUColorWrite.BLUE,
                    },
                ],
            },
            depthStencil: {
                depthWriteEnabled: false,
                depthCompare: "less-equal",
                format: "depth24plus",
            },
            primitive,
        });
        const fogShaderFrag = wd.createShaderModule({ code: fogFrag });
        Render.fogPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: fogShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const glareShaderVert = wd.createShaderModule({ code: glareVert });
        const glareShaderFrag = wd.createShaderModule({ code: glareFrag });
        Render.glarePipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: glareShaderVert,
                entryPoint: "main",
                buffers: ColoredTexturedMeshBuffer.buffers,
            },
            fragment: {
                module: glareShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                        },
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const volumetricPostprocessShaderFrag = wd.createShaderModule({
            code: volumetricPostprocessFrag,
        });
        Render.volumetricPostprocessPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: volumetricPostprocessShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "one",
                                dstFactor: "one",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "one",
                                dstFactor: "one",
                            },
                        },
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const downsample4ShaderFrag = wd.createShaderModule({ code: downsample4Frag });
        Render.downsample4Pipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: downsample4ShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const downsample4ExtractBrightnessShaderFrag = wd.createShaderModule({
            code: downsample4ExtractBrightnessFrag,
        });
        Render.downsample4ExtractBrightnessPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: downsample4ExtractBrightnessShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const downsample16ShaderFrag = wd.createShaderModule({ code: downsample16Frag });
        Render.downsample16Pipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: downsample16ShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const downsample16ExtractDiffShaderFrag = wd.createShaderModule({
            code: downsample16ExtractDiffFrag,
        });
        Render.downsample16ExtractDiffPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: downsample16ExtractDiffShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        // autoexposure
        Render.autoExposurePipelines = new Array(Render.autoExposurePasses.length);
        Render.autoExposurePipelines[0] = Render.downsample4Pipeline;
        Render.autoExposurePipelines[1] = Render.downsample4ExtractBrightnessPipeline;
        for (let i = 2; i < Render.autoExposurePipelines.length; i++) {
            Render.autoExposurePipelines[i] = Render.downsample16Pipeline;
        }
        // tone mapping
        const toneMappingShaderFrag = wd.createShaderModule({
            code: toneMappingFrag,
        });
        Render.toneMappingPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: toneMappingShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: presentationFormat,
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        // screen
        Render.screenPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                // module: passthroughShaderFrag_Debug,
                module: passthroughShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: presentationFormat,
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const passthroughTexShaderFrag = wd.createShaderModule({ code: passthroughTexFrag });
        Render.debugTexturePipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: passthroughTexShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: presentationFormat,
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const passthroughDepthShaderFrag = wd.createShaderModule({ code: passthroughDepthFrag });
        Render.debugDepthPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: passthroughShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: passthroughDepthShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: presentationFormat,
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            primitive,
        });
        const debugFrustumShaderVert = wd.createShaderModule({ code: debugFrustumVert });
        const debugFrustumShaderFrag = wd.createShaderModule({ code: debugFrustumFrag });
        Render.debugFrustumPipeline = wd.createRenderPipeline({
            layout: "auto",
            vertex: {
                module: debugFrustumShaderVert,
                entryPoint: "main",
                buffers: MeshBuffer.buffers,
            },
            fragment: {
                module: debugFrustumShaderFrag,
                entryPoint: "main",
                targets: [
                    {
                        format: "rg11b10ufloat",
                        blend: {
                            color: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                            alpha: {
                                operation: "add",
                                srcFactor: "src-alpha",
                                dstFactor: "one",
                            },
                        },
                        writeMask: GPUColorWrite.ALL,
                    },
                ],
            },
            depthStencil: {
                depthWriteEnabled: false,
                depthCompare: "less-equal",
                format: "depth24plus",
            },
            primitive,
        });
    }
    // entities
    static allocateNewBufferChunk() {
        const chunk = new BufferChunk();
        Render.scene.push(chunk);
        return chunk;
    }
    static addRenderable(renderable) {
        let chunk = Render.scene[Render.scene.length - 1];
        if (!chunk || !chunk.tryAddRenderable(renderable)) {
            chunk = Render.allocateNewBufferChunk();
            if (!chunk.tryAddRenderable(renderable)) {
                throw new Error("shit");
            }
        }
        Render.updatePerObjectData(renderable);
    }
    static setTransform(renderable, transformData) {
        renderable.rotation[0] = transformData[0];
        renderable.rotation[1] = transformData[1];
        renderable.rotation[2] = transformData[2];
        renderable.rotation[3] = transformData[3];
        renderable.scale = transformData[4];
        renderable.position[0] = transformData[5];
        renderable.position[1] = transformData[6];
        renderable.position[2] = transformData[7];
        Render.updatePerObjectData(renderable);
    }
    // camera
    static UP = fromValues$4(0, 0, 1);
    static setCamera(pos, lookAt) {
        lookAt$1(Render.viewMatrix, pos, lookAt, Render.UP);
        copy$5(Render.viewMatrix_inplace, Render.viewMatrix);
        // clear translation
        Render.viewMatrix_inplace[12] = 0;
        Render.viewMatrix_inplace[13] = 0;
        Render.viewMatrix_inplace[14] = 0;
        Render.viewMatrix_inplace[15] = 1;
        identity$2(Render.vp);
        multiply$5(Render.vp, Render.vp, Render.projectionMatrix);
        copy$5(Render.vp_inplace, Render.vp);
        multiply$5(Render.vp, Render.vp, Render.viewMatrix);
        multiply$5(Render.vp_inplace, Render.vp_inplace, Render.viewMatrix_inplace);
        copy$4(Render.cameraPosition, pos);
        invert$2(Render.vp_inv, Render.vp);
    }
    // utils
    static NEAR = 15;
    static FAR = 353840;
    static handleResize() {
        const dpr = devicePixelRatio;
        // const clientWidth = document.body.clientWidth
        // const clientHeight = document.body.clientHeight
        const clientWidth = 1920;
        const clientHeight = 963;
        const newWidth = Math.ceil(clientWidth * dpr);
        const newHeight = Math.ceil(clientHeight * dpr);
        if (canvasWebGPU.width === newWidth && canvasWebGPU.height === newHeight) {
            return;
        }
        console.log(`resize: ${clientWidth}x${clientHeight}x${dpr}`);
        ctx$1.canvas.style.width = clientWidth + "px";
        ctx$1.canvas.style.height = clientHeight + "px";
        ctx$1.canvas.width = newWidth;
        ctx$1.canvas.height = newHeight;
        const glCanvas = canvasWebGPU;
        glCanvas.style.width = clientWidth + "px";
        glCanvas.style.height = clientHeight + "px";
        canvasWebGPU.width = newWidth;
        canvasWebGPU.height = newHeight;
        ctx$1.resetTransform();
        ctx$1.scale(dpr, dpr);
        perspectiveZO(Render.projectionMatrix, (50 * Math.PI) / 180, canvasWebGPU.width / canvasWebGPU.height, Render.NEAR, Render.FAR);
    }
    static applyCameraRotationToModelMatrix(model) {
        const q = create$2();
        getRotation(q, Render.viewMatrix);
        const objQ = create$2();
        getRotation(objQ, model);
        mul$2(q, q, objQ);
        invert$1(q, q);
        const p = fromValues$4(0, 1, 0);
        transformQuat$1(p, p, q);
        const a = Math.atan2(p[1], p[0]);
        rotateZ$3(model, model, a);
    }
    static rotateModelUpfront(model) {
        rotateX$3(model, model, Math.PI);
        rotateZ$3(model, model, -Math.PI / 2);
    }
    static calcGlareScale(dt) {
        const MIN_SAMPLES = 750;
        const MAX_SAMPLES = 1500;
        const MIN_GLARE_SCALE = 0.25;
        const MAX_GLARE_SCALE = 1;
        let glareTargetScale;
        if (Render.blankSamplesCount > MIN_SAMPLES) {
            const t = Math.min((Render.blankSamplesCount - MIN_SAMPLES) / (MAX_SAMPLES - MIN_SAMPLES), 1);
            glareTargetScale = MIN_GLARE_SCALE + t * (MAX_GLARE_SCALE - MIN_GLARE_SCALE);
        }
        else {
            glareTargetScale = 0;
        }
        const GLARE_SPEED = 1 / 0.075;
        if (glareTargetScale - Render.glareScale) {
            const direction = Math.sign(glareTargetScale - Render.glareScale);
            Render.glareScale += GLARE_SPEED * direction * dt;
            Render.glareScale =
                Math.min(glareTargetScale * direction, Render.glareScale * direction) * direction;
        }
    }
    static getQuasiLogDepth(linearDepth) {
        return (1 / linearDepth - 1 / Render.NEAR) / (1 / Render.FAR - 1 / Render.NEAR);
    }
    static getShadowProjection(shadowView, near, far) {
        const points = [-1, 1, 1, 1, -1, -1, 1, -1];
        const min = fromValues$4(Infinity, Infinity, Infinity);
        const max = fromValues$4(-Infinity, -Infinity, -Infinity);
        const v = create$3();
        for (const z of [near, far]) {
            for (let i = 0; i < points.length; i += 2) {
                // setup frustum point
                set$3(v, points[i], points[i + 1], z, 1);
                transformMat4$1(v, v, Render.vp_inv);
                scale$3(v, v, 1 / v[3]);
                transformMat4$1(v, v, shadowView);
                scale$3(v, v, 1 / v[3]);
                for (let j = 0; j < 3; j++) {
                    min[j] = Math.min(min[j], v[j]);
                    max[j] = Math.max(max[j], v[j]);
                }
            }
        }
        const projection = create$5();
        orthoZO(projection, min[0], max[0], min[1], max[1], -max[2], -min[2]);
        return projection;
    }
    static sunYAngle = Math.PI * 1.55;
    static calcSunTransform(dt) {
        // Render.sunYAngle += dt * 0.5
        /*
        Render.sunYAngle = 0.0

        const sunPosition = vec3.fromValues(
            -0.732571005821228,
            0.0899626091122627,
            0.674719572067261
        )
        // TODO check out sun trajectory and sun scale, which appears to be dynamic
        vec3.scale(sunPosition, sunPosition, 350)
        */
        const sunPosition = fromValues$4(20.6666469573975, 77.4717559814453, 341.035034179687);
        const sunModel = create$5();
        rotateY$3(sunModel, sunModel, Render.sunYAngle);
        translate$1(sunModel, sunModel, sunPosition);
        const transformedPos = fromValues$3(0, 0, 0, 1);
        transformMat4$1(transformedPos, transformedPos, sunModel);
        identity$2(sunModel);
        translate$1(sunModel, sunModel, transformedPos);
        // calc near/far shadow frustums
        const UP_SHADOW = fromValues$4(0, 1, 0);
        const SHADOW_CAMERA_DISTANCE = 15000;
        const sunDirection = Render.sunDirection;
        set$4(sunDirection, 0, 0, 0);
        transformMat4$2(sunDirection, sunDirection, sunModel);
        normalize$4(sunDirection, sunDirection);
        negate$2(sunDirection, sunDirection);
        const shadowCameraPos = clone$4(Render.cameraPosition);
        const temp = clone$4(sunDirection);
        negate$2(temp, temp);
        scale$4(temp, temp, SHADOW_CAMERA_DISTANCE);
        add$4(shadowCameraPos, shadowCameraPos, temp);
        const shadowView = create$5();
        lookAt$1(shadowView, shadowCameraPos, Render.cameraPosition, UP_SHADOW);
        const inv_shadowView = clone$5(shadowView);
        inv_shadowView[12] = 0;
        inv_shadowView[13] = 0;
        inv_shadowView[14] = 0;
        inv_shadowView[15] = 1;
        invert$2(inv_shadowView, inv_shadowView);
        mul$5(sunModel, sunModel, inv_shadowView);
        Render.applyCameraRotationToModelMatrix(sunModel);
        Render.rotateModelUpfront(sunModel);
        const CASCADE_DISTANCES = [
            0,
            Render.getQuasiLogDepth(1133.5),
            Render.getQuasiLogDepth(10100),
        ];
        const shadowNearProjection = Render.getShadowProjection(shadowView, CASCADE_DISTANCES[0], CASCADE_DISTANCES[1]);
        identity$2(Render.vp_shadow_near);
        multiply$5(Render.vp_shadow_near, Render.vp_shadow_near, shadowNearProjection);
        multiply$5(Render.vp_shadow_near, Render.vp_shadow_near, shadowView);
        const shadowFarProjection = Render.getShadowProjection(shadowView, 0, CASCADE_DISTANCES[2]);
        identity$2(Render.vp_shadow_far);
        multiply$5(Render.vp_shadow_far, Render.vp_shadow_far, shadowFarProjection);
        multiply$5(Render.vp_shadow_far, Render.vp_shadow_far, shadowView);
        /*
        const toUV = mat4.create()
        mat4.scale(toUV, toUV, vec3.fromValues(0.5, 0.5, 1))
        mat4.translate(toUV, toUV, vec3.fromValues(1, 1, 0))

        mat4.mul(Render.vp_shadow_near_uv, toUV, Render.vp_shadow_near)
        mat4.mul(Render.vp_shadow_far_uv, toUV, Render.vp_shadow_far)
        */
        set(Render.invScreenResolution, 1 / canvasWebGPU.width, 1 / canvasWebGPU.height);
        /*
        if (Render.debugFrustumMeshes.length < 1) {
            Render.debugFrustumMeshes.push(
                new MeshBuffer(
                    ResourceManager.generateCubeFromTransform(
                        mat4.invert(mat4.create(), Render.vp_shadow_near),
                        0,
                        1,
                        0,
                        1
                    )
                )
            )

            Render.debugFrustumMeshes.push(
                new MeshBuffer(
                    ResourceManager.generateCubeFromTransform(
                        mat4.invert(mat4.create(), Render.vp_shadow_far),
                        0,
                        1,
                        1,
                        0
                    )
                )
            )

            Render.debugFrustumMeshes.push(
                new MeshBuffer(
                    ResourceManager.generateCubeFromTransform(
                        Render.vp_inv,
                        1,
                        0,
                        CASCADE_DISTANCES[1],
                        CASCADE_DISTANCES[2]
                    )
                )
            )
        }
        */
        //
        const glareScale = Render.glareScale;
        const glareScale3 = fromValues$4(glareScale, glareScale, glareScale);
        const glareModel = clone$5(sunModel);
        scale$5(glareModel, glareModel, glareScale3);
        copy$5(Render.vp_sun, Render.vp_inplace);
        multiply$5(Render.vp_sun, Render.vp_sun, sunModel);
        copy$5(Render.vp_glare, Render.vp_inplace);
        multiply$5(Render.vp_glare, Render.vp_glare, glareModel);
    }
    static calcTimeCoeffs(dt) {
        const MIN_DT = 0.05;
        const MAX_DT = 0.166;
        const MIN_START_TIME = 10.21;
        const MIN_MUL = 4.2;
        const MIN_POWER = 0.56;
        const MAX_START_TIME = 45.65722;
        const MAX_MUL = 18.8;
        const MAX_POWER = 0.56;
        const clamped_high = Math.min(dt, MAX_DT);
        const clamped_dt = Math.max(MIN_DT, clamped_high);
        const calcTau = (startTime, mul, pow) => startTime + (clamped_dt - MIN_DT) ** pow * mul;
        const calcTimeCoeff = (dt, tau) => 1.0 - Math.exp(-(dt * tau));
        const minTau = calcTau(MIN_START_TIME, MIN_MUL, MIN_POWER);
        const maxTau = calcTau(MAX_START_TIME, MAX_MUL, MAX_POWER);
        return fromValues(calcTimeCoeff(clamped_high, minTau), calcTimeCoeff(clamped_high, maxTau));
    }
    static render(dt) {
        Render.handleResize();
        // objects color pass
        Render.calcGlareScale(dt);
        Render.calcSunTransform(dt);
        Render.resolutionBuffer[0] = canvasWebGPU.width;
        Render.resolutionBuffer[1] = canvasWebGPU.height;
        // TODO implement easing of dt
        const timeCoeffs = Render.calcTimeCoeffs(dt);
        Render.autoExposureLastStepSettingsBuffer[2] = timeCoeffs[0];
        Render.autoExposureLastStepSettingsBuffer[3] = timeCoeffs[1];
        wd.queue.writeBuffer(Render.settings, 0, Render.settingsBuffer);
        wd.queue.writeBuffer(Render.resolution, 0, Render.resolutionBuffer);
        wd.queue.writeBuffer(Render.autoExposureLastStepSettings, 0, Render.autoExposureLastStepSettingsBuffer);
        const commandEncoder = wd.createCommandEncoder();
        {
            // shadow near pass
            const passEncoder = commandEncoder.beginRenderPass(Render.depthBufferPass);
            passEncoder.setBindGroup(0, Render.depthBufferBind);
            passEncoder.setPipeline(Render.depthBufferPipeline);
            for (const chunk of Render.scene) {
                passEncoder.setVertexBuffer(0, chunk.vertices);
                passEncoder.setIndexBuffer(chunk.indices, "uint32");
                passEncoder.drawIndexed(chunk.indexPos);
            }
            passEncoder.end();
        }
        {
            // shadow near pass
            const passEncoder = commandEncoder.beginRenderPass(Render.shadowNearPassDesc);
            passEncoder.setBindGroup(0, Render.shadowNearBind);
            passEncoder.setPipeline(Render.shadowNearPipeline);
            for (const chunk of Render.scene) {
                passEncoder.setVertexBuffer(0, chunk.vertices);
                passEncoder.setIndexBuffer(chunk.indices, "uint32");
                passEncoder.drawIndexed(chunk.indexPos);
            }
            passEncoder.end();
        }
        {
            // shadow far pass
            const passEncoder = commandEncoder.beginRenderPass(Render.shadowFarPassDesc);
            passEncoder.setBindGroup(0, Render.shadowFarBind);
            passEncoder.setPipeline(Render.shadowFarPipeline);
            for (const chunk of Render.scene) {
                passEncoder.setVertexBuffer(0, chunk.vertices);
                passEncoder.setIndexBuffer(chunk.indices, "uint32");
                passEncoder.drawIndexed(chunk.indexPos);
            }
            passEncoder.end();
        }
        {
            const passEncoder = commandEncoder.beginComputePass();
            passEncoder.setPipeline(Render.volumetricInitPipeline);
            passEncoder.setBindGroup(0, Render.volumetricInitBind);
            passEncoder.dispatchWorkgroups(VOLUMETRIC_DISPATCH_X, VOLUMETRIC_DISPATCH_Y, VOLUMETRIC_DISPATCH_Z);
            passEncoder.setPipeline(Render.volumetricAddPipeline);
            for (let i = 0; i < VOLUMETRIC_TEX_DEPTH; i++) {
                passEncoder.setBindGroup(0, Render.volumetricAddBinds[i]);
                passEncoder.dispatchWorkgroups(VOLUMETRIC_DISPATCH_X, VOLUMETRIC_DISPATCH_Y, 1);
            }
            passEncoder.end();
        }
        // screen space volumetric lighting pass
        {
            const passEncoder = commandEncoder.beginRenderPass(Render.volumetricLightingPassDesc);
            passEncoder.setBindGroup(0, Render.volumetricComposeBind);
            passEncoder.setPipeline(Render.volumetricComposePipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            passEncoder.end();
        }
        // screen space volumetric lighting smoothing (both horizontal and vertical)
        {
            const passEncoder = commandEncoder.beginComputePass();
            passEncoder.setPipeline(Render.volumetricHSmoothPipeline);
            passEncoder.setBindGroup(0, Render.volumetricHSmoothBind);
            passEncoder.dispatchWorkgroups(Math.ceil(canvasWebGPU.width / 960), canvasWebGPU.height, 1);
            passEncoder.setPipeline(Render.volumetricVSmoothPipeline);
            passEncoder.setBindGroup(0, Render.volumetricVSmoothBind);
            passEncoder.dispatchWorkgroups(canvasWebGPU.width, Math.ceil(canvasWebGPU.height / 540), 1);
            passEncoder.end();
        }
        {
            // screen space shadow reconstruction pass
            const passEncoder = commandEncoder.beginRenderPass(Render.contactShadowsPassDesc);
            passEncoder.setBindGroup(0, Render.contactShadowsBind);
            passEncoder.setPipeline(Render.contactShadowsPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            passEncoder.end();
        }
        {
            const passEncoder = commandEncoder.beginRenderPass(Render.mainPassDesc);
            passEncoder.setBindGroup(0, Render.skydomeBind);
            passEncoder.setPipeline(Render.skydomePipeline);
            passEncoder.setVertexBuffer(0, Render.skydome.vertices);
            passEncoder.setIndexBuffer(Render.skydome.indices, "uint16");
            passEncoder.drawIndexed(Render.skydome.indexCount);
            passEncoder.setBindGroup(0, Render.sunBind);
            passEncoder.setPipeline(Render.sunPipeline);
            passEncoder.setVertexBuffer(0, Render.sun.vertices);
            passEncoder.setIndexBuffer(Render.sun.indices, "uint16");
            passEncoder.drawIndexed(Render.sun.indexCount);
            passEncoder.setBindGroup(0, Render.objectsBind);
            passEncoder.setPipeline(Render.objectsPipeline);
            for (const chunk of Render.scene) {
                passEncoder.setVertexBuffer(0, chunk.vertices);
                passEncoder.setIndexBuffer(chunk.indices, "uint32");
                passEncoder.drawIndexed(chunk.indexPos);
            }
            if (Render.blankQueryState === BlankQueryState.None) {
                passEncoder.setBindGroup(0, Render.blankBind);
                passEncoder.setPipeline(Render.blankPipeline);
                passEncoder.setVertexBuffer(0, Render.blank.vertices);
                passEncoder.setIndexBuffer(Render.blank.indices, "uint16");
                passEncoder.beginOcclusionQuery(0);
                passEncoder.drawIndexed(Render.blank.indexCount);
                passEncoder.endOcclusionQuery();
                Render.blankQueryState = BlankQueryState.Requested;
            }
            if (Render.debugFrustumMeshes.length > 0) {
                passEncoder.setBindGroup(0, Render.debugFrustumBind);
                passEncoder.setPipeline(Render.debugFrustumPipeline);
                for (const debugFrustumMesh of Render.debugFrustumMeshes) {
                    passEncoder.setVertexBuffer(0, debugFrustumMesh.vertices);
                    passEncoder.setIndexBuffer(debugFrustumMesh.indices, "uint16");
                    passEncoder.drawIndexed(debugFrustumMesh.indexCount);
                }
            }
            passEncoder.end();
        }
        if (Render.blankQueryState === BlankQueryState.Requested) {
            commandEncoder.resolveQuerySet(Render.blankQuery, 0, 1, Render.blankQueryResult, 0);
            commandEncoder.copyBufferToBuffer(Render.blankQueryResult, 0, Render.blankQueryResultAsync, 0, QUERY_BUFFER_SIZE);
        }
        {
            const passEncoder = commandEncoder.beginRenderPass(Render.fogPassDesc);
            passEncoder.setBindGroup(0, Render.fogBind);
            passEncoder.setPipeline(Render.fogPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            if (Render.glareScale > 10e-6) {
                passEncoder.setBindGroup(0, Render.glareBind);
                passEncoder.setPipeline(Render.glarePipeline);
                passEncoder.setVertexBuffer(0, Render.glare.vertices);
                passEncoder.setIndexBuffer(Render.glare.indices, "uint16");
                passEncoder.drawIndexed(Render.glare.indexCount);
            }
            passEncoder.setBindGroup(0, Render.volumetricPostprocessBind);
            passEncoder.setPipeline(Render.volumetricPostprocessPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            passEncoder.end();
        }
        // auto-exposure
        {
            Render.autoExposureSwapchain.swap();
            for (let i = 0; i < Render.autoExposurePasses.length; i++) {
                const pass = Render.autoExposurePasses[i];
                const bind = Render.autoExposureBinds[i];
                const pipeline = Render.autoExposurePipelines[i];
                const passEncoder = commandEncoder.beginRenderPass(pass);
                passEncoder.setBindGroup(0, bind);
                passEncoder.setPipeline(pipeline);
                passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
                passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
                passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
                passEncoder.end();
            }
            const passEncoder = commandEncoder.beginRenderPass(Render.autoExposureSwapchain.pass);
            passEncoder.setBindGroup(0, Render.autoExposureSwapchain.bind);
            passEncoder.setPipeline(Render.downsample16ExtractDiffPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            passEncoder.end();
        }
        // tone mapping
        {
            Render.toneMappingSwapchain.swap();
            const passEncoder = commandEncoder.beginRenderPass(Render.toneMappingSwapchain.pass);
            passEncoder.setBindGroup(0, Render.toneMappingSwapchain.bind);
            passEncoder.setPipeline(Render.toneMappingPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            passEncoder.end();
        }
        // @ts-expect-error here we need to render to frame that is currently assign to next frame
        // we need Render because WebGPU may use frame buffering to smooth out FPS
        // so each frame may have different texture assigned
        Render.screenPassDesc.colorAttachments[0].view = wg.getCurrentTexture().createView();
        {
            const passEncoder = commandEncoder.beginRenderPass(Render.screenPassDesc);
            passEncoder.setBindGroup(0, Render.screenBind);
            passEncoder.setPipeline(Render.screenPipeline);
            passEncoder.setVertexBuffer(0, Render.fullscreenPlain.vertices);
            passEncoder.setIndexBuffer(Render.fullscreenPlain.indices, "uint16");
            passEncoder.drawIndexed(Render.fullscreenPlain.indexCount);
            // DEBUG
            if (Render.debugTextureView) {
                if (Render.debugIsDepth) {
                    passEncoder.setBindGroup(0, Render.debugDepthBind);
                    passEncoder.setPipeline(Render.debugDepthPipeline);
                }
                else {
                    passEncoder.setBindGroup(0, Render.debugTextureBind);
                    passEncoder.setPipeline(Render.debugTexturePipeline);
                }
                passEncoder.setVertexBuffer(0, Render.debugTexturePlane.vertices);
                passEncoder.setIndexBuffer(Render.debugTexturePlane.indices, "uint16");
                passEncoder.drawIndexed(Render.debugTexturePlane.indexCount);
            }
            passEncoder.end();
        }
        wd.queue.submit([commandEncoder.finish()]);
        if (Render.blankQueryState === BlankQueryState.Requested) {
            Render.blankQueryState = BlankQueryState.Pending;
            Render.blankQueryResultAsync.mapAsync(GPUMapMode.READ).then(function () {
                const data = new Uint32Array(Render.blankQueryResultAsync.getMappedRange(0, QUERY_BUFFER_SIZE));
                const result = data[0] !== 0 || data[1] !== 0;
                Render.blankSamplesCount = result ? 30000 : 0;
                Render.blankQueryResultAsync.unmap();
                Render.blankQueryState = BlankQueryState.None;
            });
        }
    }
    static finalize() {
        //
    }
}

const pos = create$4();
const lookAt = create$4();
function SetCameraHandler(ptr) {
    readToFloatArray(ptr, pos);
    readToFloatArray(ptr, lookAt);
    Render.setCamera(pos, lookAt);
}
registerOutputHandler(OutputMessageId.SET_CAMERA, SetCameraHandler);
async function CreateRenderableHandler(ptr) {
    const meshHandle = readU64(ptr);
    const textureHandle = readU64(ptr);
    const mesh = Queues.getResultSync(meshHandle) || (await Queues.getResultAsync(meshHandle));
    const texture = Queues.getResultSync(textureHandle) ||
        (await Queues.getResultAsync(textureHandle));
    const renderable = new Renderable(mesh, texture);
    return renderable;
}
registerOutputHandler(OutputMessageId.CREATE_RENDERABLE, CreateRenderableHandler);
async function SetTransformHandler(ptr) {
    const renderableHandle = readU64(ptr);
    const transformData = new Float32Array(4 + 1 + 3);
    readToFloatArray(ptr, transformData);
    const renderable = Queues.getResultSync(renderableHandle) ||
        (await Queues.getResultAsync(renderableHandle));
    Render.setTransform(renderable, transformData);
}
registerOutputHandler(OutputMessageId.SET_TRANSFORM, SetTransformHandler);
async function AddRenderableHandler(ptr) {
    const renderableHandle = readU64(ptr);
    const renderable = Queues.getResultSync(renderableHandle) ||
        (await Queues.getResultAsync(renderableHandle));
    Render.addRenderable(renderable);
}
registerOutputHandler(OutputMessageId.ADD_RENDERABLE, AddRenderableHandler);
const MAX_NAME_LENGTH = 64;
async function RequestTexture(ptr) {
    const texName = readString(ptr, MAX_NAME_LENGTH);
    const texture = await ResourceManager.requestTexture(texName);
    return texture;
}
registerOutputHandler(OutputMessageId.REQUEST_TEXTURE, RequestTexture);
async function RequestMesh(ptr) {
    const meshName = readString(ptr, MAX_NAME_LENGTH);
    const mesh = await ResourceManager.requestMesh(meshName);
    return mesh;
}
registerOutputHandler(OutputMessageId.REQUEST_MESH, RequestMesh);
async function CreateGeneratedMesh(ptr) {
    const vertexCount = readU32(ptr);
    const indexCount = readU32(ptr);
    const data = readPointer(ptr);
    const vertices = new Float32Array(Engine.HEAPU8.buffer, data, vertexCount);
    const indices = new Uint16Array(Engine.HEAPU8.buffer, data + vertexCount * Float32Array.BYTES_PER_ELEMENT, indexCount);
    const model = new Mesh(vertices, indices);
    return model;
}
registerOutputHandler(OutputMessageId.CREATE_GENERATED_MESH, CreateGeneratedMesh);
async function GenerateOneColorTexture( /*ptr: SeekablePtr*/) {
    // TODO
}
registerOutputHandler(OutputMessageId.GENERATE_ONE_COLOR_TEXTURE, GenerateOneColorTexture);

var commonjsGlobal = typeof globalThis !== 'undefined' ? globalThis : typeof window !== 'undefined' ? window : typeof global !== 'undefined' ? global : typeof self !== 'undefined' ? self : {};

function getDefaultExportFromCjs (x) {
	return x && x.__esModule && Object.prototype.hasOwnProperty.call(x, 'default') ? x['default'] : x;
}

function getDefaultExportFromNamespaceIfPresent (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') ? n['default'] : n;
}

function getDefaultExportFromNamespaceIfNotNamed (n) {
	return n && Object.prototype.hasOwnProperty.call(n, 'default') && Object.keys(n).length === 1 ? n['default'] : n;
}

function getAugmentedNamespace(n) {
	if (n.__esModule) return n;
	var a = Object.defineProperty({}, '__esModule', {value: true});
	Object.keys(n).forEach(function (k) {
		var d = Object.getOwnPropertyDescriptor(n, k);
		Object.defineProperty(a, k, d.get ? d : {
			enumerable: true,
			get: function () {
				return n[k];
			}
		});
	});
	return a;
}

function commonjsRequire (path) {
	throw new Error('Could not dynamically require "' + path + '". Please configure the dynamicRequireTargets or/and ignoreDynamicRequires option of @rollup/plugin-commonjs appropriately for this require call to work.');
}

var tsDeferred = {};

"use strict";
/**
 * Copyright (c) 2016 shogogg <shogo@studofly.net>
 *
 * This software is released under the MIT License.
 * http://opensource.org/licenses/mit-license.php
 */
var Deferred = (function () {
    function Deferred() {
        var _this = this;
        this.resolve = function (value) {
            _this._resolve(value);
        };
        this.reject = function (reason) {
            _this._reject(reason);
        };
        this._promise = new Promise(function (resolve, reject) {
            _this._resolve = resolve;
            _this._reject = reject;
        });
    }
    Object.defineProperty(Deferred.prototype, "promise", {
        get: function () {
            return this._promise;
        },
        enumerable: true,
        configurable: true
    });
    return Deferred;
}());
var Deferred_1 = tsDeferred.Deferred = Deferred;

/* eslint-disable @typescript-eslint/no-explicit-any */
const QUEUE_BUFFER_SIZE = 3 * 1024 * 1024;
// Queues
let inputQueue;
let outputQueue;
const ptr = new SeekablePtr(0);
const results = new Map();
const resultListeners = new Map();
class Queues {
    static nextHandle = 1;
    static init() {
        inputQueue = Engine._get_input_queue_ptr();
        outputQueue = Engine._get_output_queue_ptr();
    }
    static registerResult(handle, result) {
        results.set(handle, result);
        if (result instanceof Promise) {
            result.then(value => {
                if (value !== undefined) {
                    results.set(handle, value);
                }
                else {
                    results.delete(handle);
                }
                // resolve all listeners
                const listeners = resultListeners.get(handle);
                if (listeners) {
                    for (const listener of listeners) {
                        listener.resolve(value);
                    }
                    resultListeners.delete(handle);
                }
            });
        }
    }
    static getResultAsync(handle) {
        const result = new Deferred_1();
        const value = results.get(handle);
        if (value === undefined) {
            result.reject("Result not found");
        }
        else if (value instanceof Promise) {
            let listeners = resultListeners.get(handle);
            if (listeners === undefined) {
                listeners = [];
                resultListeners.set(handle, listeners);
            }
            listeners.push(result);
        }
        else {
            result.resolve(value);
        }
        return result.promise;
    }
    static getResultSync(handle) {
        const value = results.get(handle);
        if (value instanceof Promise) {
            return undefined;
        }
        else {
            return value;
        }
    }
    static processOutputQueue() {
        ptr.value = outputQueue;
        const messagesCount = readU32(ptr);
        /*const bytesAvailable = */ readU32(ptr);
        for (let messageIndex = 0; messageIndex < messagesCount; messageIndex++) {
            const id = readU32(ptr);
            const size = readU32(ptr);
            const handle = readU64(ptr);
            const handler = getOutputMessageHandler(id);
            if (handler === undefined) {
                throw new Error("Output message have no handler.");
            }
            const dataPtr = ptr.value;
            const result = handler(ptr, handle, id);
            if (result !== undefined) {
                Queues.registerResult(handle, result);
            }
            if (ptr.value > dataPtr + size) {
                throw new Error("Overflow while reading message");
            }
            ptr.value = dataPtr + size;
        }
        ptr.value = outputQueue;
        writeU32(ptr, 0);
        writeU32(ptr, 0);
    }
    static pushMessage(id, writer, ...args) {
        ptr.value = inputQueue;
        const messagesCount = readU32(ptr);
        const bytesWritten = readU32(ptr);
        ptr.value += bytesWritten;
        const handle = Queues.nextHandle++;
        const messagePtr = ptr.value;
        writeU32(ptr, id);
        const sizePtr = ptr.value;
        // size place older
        writeU32(ptr, 0);
        writeU64(ptr, handle);
        const dataPtr = ptr.value;
        writer(id, ptr, ...args);
        const messageBodySize = ptr.value - dataPtr;
        const messageSize = ptr.value - messagePtr;
        if (bytesWritten + messageSize > QUEUE_BUFFER_SIZE) {
            // TODO here we have already have written out of bounds, we need to prevent this
            throw new Error("Input queue buffer overflow.");
        }
        // update message header (size)
        ptr.value = sizePtr;
        writeU32(ptr, messageBodySize);
        // update queue header
        ptr.value = inputQueue;
        writeU32(ptr, messagesCount + 1);
        writeU32(ptr, bytesWritten + messageSize);
        return handle;
    }
    static finalize() {
        //
    }
}

var KeyboardKey;
(function (KeyboardKey) {
    KeyboardKey[KeyboardKey["KEY_0"] = 1] = "KEY_0";
    KeyboardKey[KeyboardKey["KEY_1"] = 2] = "KEY_1";
    KeyboardKey[KeyboardKey["KEY_2"] = 3] = "KEY_2";
    KeyboardKey[KeyboardKey["KEY_3"] = 4] = "KEY_3";
    KeyboardKey[KeyboardKey["KEY_4"] = 5] = "KEY_4";
    KeyboardKey[KeyboardKey["KEY_5"] = 6] = "KEY_5";
    KeyboardKey[KeyboardKey["KEY_6"] = 7] = "KEY_6";
    KeyboardKey[KeyboardKey["KEY_7"] = 8] = "KEY_7";
    KeyboardKey[KeyboardKey["KEY_8"] = 9] = "KEY_8";
    KeyboardKey[KeyboardKey["KEY_9"] = 10] = "KEY_9";
    KeyboardKey[KeyboardKey["KEY_A"] = 11] = "KEY_A";
    KeyboardKey[KeyboardKey["KEY_B"] = 12] = "KEY_B";
    KeyboardKey[KeyboardKey["KEY_C"] = 13] = "KEY_C";
    KeyboardKey[KeyboardKey["KEY_D"] = 14] = "KEY_D";
    KeyboardKey[KeyboardKey["KEY_E"] = 15] = "KEY_E";
    KeyboardKey[KeyboardKey["KEY_F"] = 16] = "KEY_F";
    KeyboardKey[KeyboardKey["KEY_G"] = 17] = "KEY_G";
    KeyboardKey[KeyboardKey["KEY_H"] = 18] = "KEY_H";
    KeyboardKey[KeyboardKey["KEY_I"] = 19] = "KEY_I";
    KeyboardKey[KeyboardKey["KEY_J"] = 20] = "KEY_J";
    KeyboardKey[KeyboardKey["KEY_K"] = 21] = "KEY_K";
    KeyboardKey[KeyboardKey["KEY_L"] = 22] = "KEY_L";
    KeyboardKey[KeyboardKey["KEY_M"] = 23] = "KEY_M";
    KeyboardKey[KeyboardKey["KEY_N"] = 24] = "KEY_N";
    KeyboardKey[KeyboardKey["KEY_O"] = 25] = "KEY_O";
    KeyboardKey[KeyboardKey["KEY_P"] = 26] = "KEY_P";
    KeyboardKey[KeyboardKey["KEY_Q"] = 27] = "KEY_Q";
    KeyboardKey[KeyboardKey["KEY_R"] = 28] = "KEY_R";
    KeyboardKey[KeyboardKey["KEY_S"] = 29] = "KEY_S";
    KeyboardKey[KeyboardKey["KEY_T"] = 30] = "KEY_T";
    KeyboardKey[KeyboardKey["KEY_U"] = 31] = "KEY_U";
    KeyboardKey[KeyboardKey["KEY_V"] = 32] = "KEY_V";
    KeyboardKey[KeyboardKey["KEY_W"] = 33] = "KEY_W";
    KeyboardKey[KeyboardKey["KEY_X"] = 34] = "KEY_X";
    KeyboardKey[KeyboardKey["KEY_Y"] = 35] = "KEY_Y";
    KeyboardKey[KeyboardKey["KEY_Z"] = 36] = "KEY_Z";
    KeyboardKey[KeyboardKey["KEY_SPACE"] = 37] = "KEY_SPACE";
    KeyboardKey[KeyboardKey["KEY_LSHIFT"] = 38] = "KEY_LSHIFT";
    KeyboardKey[KeyboardKey["KEY_RSHIFT"] = 39] = "KEY_RSHIFT";
    KeyboardKey[KeyboardKey["KEY_LCONTROL"] = 40] = "KEY_LCONTROL";
    KeyboardKey[KeyboardKey["KEY_RCONTROL"] = 41] = "KEY_RCONTROL";
})(KeyboardKey || (KeyboardKey = {}));
const CODE_TO_KEY = {
    Digit0: KeyboardKey.KEY_0,
    Digit1: KeyboardKey.KEY_1,
    Digit2: KeyboardKey.KEY_2,
    Digit3: KeyboardKey.KEY_3,
    Digit4: KeyboardKey.KEY_4,
    Digit5: KeyboardKey.KEY_5,
    Digit6: KeyboardKey.KEY_6,
    Digit7: KeyboardKey.KEY_7,
    Digit8: KeyboardKey.KEY_8,
    Digit9: KeyboardKey.KEY_9,
    KeyA: KeyboardKey.KEY_A,
    KeyB: KeyboardKey.KEY_B,
    KeyC: KeyboardKey.KEY_C,
    KeyD: KeyboardKey.KEY_D,
    KeyE: KeyboardKey.KEY_E,
    KeyF: KeyboardKey.KEY_F,
    KeyG: KeyboardKey.KEY_G,
    KeyH: KeyboardKey.KEY_H,
    KeyI: KeyboardKey.KEY_I,
    KeyJ: KeyboardKey.KEY_J,
    KeyK: KeyboardKey.KEY_K,
    KeyL: KeyboardKey.KEY_L,
    KeyM: KeyboardKey.KEY_M,
    KeyN: KeyboardKey.KEY_N,
    KeyO: KeyboardKey.KEY_O,
    KeyP: KeyboardKey.KEY_P,
    KeyQ: KeyboardKey.KEY_Q,
    KeyR: KeyboardKey.KEY_R,
    KeyS: KeyboardKey.KEY_S,
    KeyT: KeyboardKey.KEY_T,
    KeyU: KeyboardKey.KEY_U,
    KeyV: KeyboardKey.KEY_V,
    KeyW: KeyboardKey.KEY_W,
    KeyX: KeyboardKey.KEY_X,
    KeyY: KeyboardKey.KEY_Y,
    KeyZ: KeyboardKey.KEY_Z,
    Space: KeyboardKey.KEY_SPACE,
    ShiftLeft: KeyboardKey.KEY_LSHIFT,
    ShiftRight: KeyboardKey.KEY_RSHIFT,
    ControlLeft: KeyboardKey.KEY_LCONTROL,
    ControlRight: KeyboardKey.KEY_RCONTROL,
};
function KeyboardKeyMessage(_id, ptr, key) {
    writeU32(ptr, key);
}
var MouseButton;
(function (MouseButton) {
    MouseButton[MouseButton["NONE"] = 0] = "NONE";
    MouseButton[MouseButton["LEFT"] = 1] = "LEFT";
    MouseButton[MouseButton["MIDDLE"] = 2] = "MIDDLE";
    MouseButton[MouseButton["RIGHT"] = 3] = "RIGHT";
})(MouseButton || (MouseButton = {}));
const CODE_TO_BUTTON = {
    0: MouseButton.LEFT,
    1: MouseButton.MIDDLE,
    2: MouseButton.RIGHT,
};
function MouseButtonMessage(_id, ptr, button, x, y, dx, dy, isCaptured) {
    writeU32(ptr, button);
    writeFloat(ptr, x);
    writeFloat(ptr, y);
    writeFloat(ptr, dx);
    writeFloat(ptr, dy);
    writeU32(ptr, isCaptured ? 1 : 0);
}

class InputManager {
    static init() {
        InputManager.attachEvents();
    }
    static finalize() {
        //
    }
    static attachEvents() {
        canvasWebGPU.addEventListener("click", InputManager.clickHandler);
        canvasWebGPU.addEventListener("mousemove", InputManager.mouseHandler, { passive: true });
        canvasWebGPU.addEventListener("mouseup", InputManager.mouseHandler, { passive: true });
        canvasWebGPU.addEventListener("mousedown", InputManager.mouseHandler, { passive: true });
        window.addEventListener("keyup", InputManager.keyHandler);
        window.addEventListener("keydown", InputManager.keyHandler);
    }
    static clickHandler() {
        canvasWebGPU.requestPointerLock();
    }
    static mouseHandler(e) {
        const button = CODE_TO_BUTTON[e.button];
        if (button === undefined) {
            // button is not supported
            return;
        }
        const x = e.clientX * devicePixelRatio;
        const y = e.clientY * devicePixelRatio;
        const dx = e.movementX * devicePixelRatio;
        const dy = e.movementY * devicePixelRatio;
        const isCaptured = document.pointerLockElement === canvasWebGPU;
        const id = {
            mousedown: InputMessageId.MOUSE_DOWN,
            mousemove: InputMessageId.MOUSE_MOVE,
            mouseup: InputMessageId.MOUSE_UP,
        }[e.type];
        if (id !== undefined) {
            Queues.pushMessage(id, MouseButtonMessage, button, x, y, dx, dy, isCaptured);
        }
    }
    static keyHandler(e) {
        const key = CODE_TO_KEY[e.code];
        if (key === undefined) {
            // key is not supported
            return;
        }
        const id = {
            keydown: InputMessageId.KEY_DOWN,
            keyup: InputMessageId.KEY_UP,
        }[e.type];
        if (id !== undefined) {
            Queues.pushMessage(id, KeyboardKeyMessage, key);
        }
    }
}

class Services {
    static async init() {
        await loadEngine();
        await initWebGPU();
        Queues.init();
        ResourceManager.init();
        await Render.init();
        InputManager.init();
        GameLoop.init(Services.process);
        Engine._init();
        await Render.setupTest();
    }
    static process(dt) {
        // console.log("TICK")
        // engine tick
        Engine._tick(dt);
        // resolve output queue messages
        Queues.processOutputQueue();
        // render
        Render.render(dt);
    }
    static finalize() {
        Engine._finalize();
        GameLoop.finalize();
        InputManager.finalize();
        Render.finalize();
        ResourceManager.finalize();
        Queues.finalize();
        Engine._print_memory_stats();
    }
}

function delay(timeout) {
    return new Promise(resolve => setTimeout(resolve, timeout));
}
async function test() {
    await loadEngine();
    Engine._init();
    /*
    const startTime = performance.now()
    Engine._test()
    const endTime = performance.now()

    const ok = Engine._check()

    const ms_int = Math.round(endTime - startTime)
    console.log(`${ms_int} ms`)

    if (ok) {
        console.log("ok")
    } else {
        console.warn("NOT OK")
    }
    */
    Engine._finalize();
    Engine._print_memory_stats();
}

async function main() {
    await Services.init();
    GameLoop.start();
}
// main()
test();
//# sourceMappingURL=index.js.map
